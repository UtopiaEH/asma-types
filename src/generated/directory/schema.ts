import {FieldsSelection,Observable} from '@genql/runtime'

export type Scalars = {
    Boolean: boolean,
    Float: number,
    Int: number,
    String: string,
    bpchar: string,
    timestamptz: string,
    uuid: string,
}

export interface InsertUserOrWarnIfExistsOutput {
    affected_rows: Scalars['Int']
    id: Scalars['uuid']
    __typename: 'InsertUserOrWarnIfExistsOutput'
}

export interface ReturnAffectedItemId {
    id: Scalars['uuid']
    __typename: 'ReturnAffectedItemId'
}

export interface ReturnAffectedRows {
    affected_rows?: Scalars['Int']
    __typename: 'ReturnAffectedRows'
}

export interface SigninOutput {
    message?: Scalars['String']
    token: Scalars['String']
    __typename: 'SigninOutput'
}

export interface SinginOutputWithRefreshToken {
    message?: Scalars['String']
    refresh_token: Scalars['String']
    token: Scalars['String']
    __typename: 'SinginOutputWithRefreshToken'
}

export interface UpdateUserOutput {
    affected_rows: Scalars['Int']
    __typename: 'UpdateUserOutput'
}


/** columns and relationships of "admins" */
export interface admins {
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs: admins_auth_logs[]
    /** An aggregate relationship */
    admins_auth_logs_aggregate: admins_auth_logs_aggregate
    created_at?: Scalars['timestamptz']
    email: Scalars['bpchar']
    id: Scalars['uuid']
    name: Scalars['bpchar']
    password: Scalars['bpchar']
    phone?: Scalars['String']
    updated_at?: Scalars['timestamptz']
    __typename: 'admins'
}


/** aggregated selection of "admins" */
export interface admins_aggregate {
    aggregate?: admins_aggregate_fields
    nodes: admins[]
    __typename: 'admins_aggregate'
}


/** aggregate fields of "admins" */
export interface admins_aggregate_fields {
    count: Scalars['Int']
    max?: admins_max_fields
    min?: admins_min_fields
    __typename: 'admins_aggregate_fields'
}


/** columns and relationships of "admins_auth_logs" */
export interface admins_auth_logs {
    /** An object relationship */
    admin: admins
    admin_id: Scalars['uuid']
    authenticated_at?: Scalars['timestamptz']
    id: Scalars['Int']
    __typename: 'admins_auth_logs'
}


/** aggregated selection of "admins_auth_logs" */
export interface admins_auth_logs_aggregate {
    aggregate?: admins_auth_logs_aggregate_fields
    nodes: admins_auth_logs[]
    __typename: 'admins_auth_logs_aggregate'
}


/** aggregate fields of "admins_auth_logs" */
export interface admins_auth_logs_aggregate_fields {
    avg?: admins_auth_logs_avg_fields
    count: Scalars['Int']
    max?: admins_auth_logs_max_fields
    min?: admins_auth_logs_min_fields
    stddev?: admins_auth_logs_stddev_fields
    stddev_pop?: admins_auth_logs_stddev_pop_fields
    stddev_samp?: admins_auth_logs_stddev_samp_fields
    sum?: admins_auth_logs_sum_fields
    var_pop?: admins_auth_logs_var_pop_fields
    var_samp?: admins_auth_logs_var_samp_fields
    variance?: admins_auth_logs_variance_fields
    __typename: 'admins_auth_logs_aggregate_fields'
}


/** aggregate avg on columns */
export interface admins_auth_logs_avg_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_avg_fields'
}


/** unique or primary key constraints on table "admins_auth_logs" */
export type admins_auth_logs_constraint = 'admins_auth_logs_pkey'


/** aggregate max on columns */
export interface admins_auth_logs_max_fields {
    admin_id?: Scalars['uuid']
    authenticated_at?: Scalars['timestamptz']
    id?: Scalars['Int']
    __typename: 'admins_auth_logs_max_fields'
}


/** aggregate min on columns */
export interface admins_auth_logs_min_fields {
    admin_id?: Scalars['uuid']
    authenticated_at?: Scalars['timestamptz']
    id?: Scalars['Int']
    __typename: 'admins_auth_logs_min_fields'
}


/** response of any mutation on the table "admins_auth_logs" */
export interface admins_auth_logs_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: admins_auth_logs[]
    __typename: 'admins_auth_logs_mutation_response'
}


/** select columns of table "admins_auth_logs" */
export type admins_auth_logs_select_column = 'admin_id' | 'authenticated_at' | 'id'


/** aggregate stddev on columns */
export interface admins_auth_logs_stddev_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface admins_auth_logs_stddev_pop_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface admins_auth_logs_stddev_samp_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface admins_auth_logs_sum_fields {
    id?: Scalars['Int']
    __typename: 'admins_auth_logs_sum_fields'
}


/** update columns of table "admins_auth_logs" */
export type admins_auth_logs_update_column = 'admin_id' | 'authenticated_at' | 'id'


/** aggregate var_pop on columns */
export interface admins_auth_logs_var_pop_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface admins_auth_logs_var_samp_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_var_samp_fields'
}


/** aggregate variance on columns */
export interface admins_auth_logs_variance_fields {
    id?: Scalars['Float']
    __typename: 'admins_auth_logs_variance_fields'
}


/** unique or primary key constraints on table "admins" */
export type admins_constraint = 'admins_phone_key' | 'admins_pkey'


/** aggregate max on columns */
export interface admins_max_fields {
    created_at?: Scalars['timestamptz']
    email?: Scalars['bpchar']
    id?: Scalars['uuid']
    name?: Scalars['bpchar']
    password?: Scalars['bpchar']
    phone?: Scalars['String']
    updated_at?: Scalars['timestamptz']
    __typename: 'admins_max_fields'
}


/** aggregate min on columns */
export interface admins_min_fields {
    created_at?: Scalars['timestamptz']
    email?: Scalars['bpchar']
    id?: Scalars['uuid']
    name?: Scalars['bpchar']
    password?: Scalars['bpchar']
    phone?: Scalars['String']
    updated_at?: Scalars['timestamptz']
    __typename: 'admins_min_fields'
}


/** response of any mutation on the table "admins" */
export interface admins_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: admins[]
    __typename: 'admins_mutation_response'
}


/** select columns of table "admins" */
export type admins_select_column = 'created_at' | 'email' | 'id' | 'name' | 'password' | 'phone' | 'updated_at'


/** update columns of table "admins" */
export type admins_update_column = 'created_at' | 'email' | 'id' | 'name' | 'password' | 'phone' | 'updated_at'


/** columns and relationships of "auth_methods" */
export interface auth_methods {
    comment?: Scalars['String']
    name: Scalars['String']
    /** An array relationship */
    users_auth_logs: users_auth_logs[]
    /** An aggregate relationship */
    users_auth_logs_aggregate: users_auth_logs_aggregate
    __typename: 'auth_methods'
}


/** aggregated selection of "auth_methods" */
export interface auth_methods_aggregate {
    aggregate?: auth_methods_aggregate_fields
    nodes: auth_methods[]
    __typename: 'auth_methods_aggregate'
}


/** aggregate fields of "auth_methods" */
export interface auth_methods_aggregate_fields {
    count: Scalars['Int']
    max?: auth_methods_max_fields
    min?: auth_methods_min_fields
    __typename: 'auth_methods_aggregate_fields'
}


/** unique or primary key constraints on table "auth_methods" */
export type auth_methods_constraint = 'auth_methods_pkey'

export type auth_methods_enum = 'BASIC' | 'CONNECTOR' | 'NBID' | 'SMS'


/** aggregate max on columns */
export interface auth_methods_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'auth_methods_max_fields'
}


/** aggregate min on columns */
export interface auth_methods_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'auth_methods_min_fields'
}


/** response of any mutation on the table "auth_methods" */
export interface auth_methods_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: auth_methods[]
    __typename: 'auth_methods_mutation_response'
}


/** select columns of table "auth_methods" */
export type auth_methods_select_column = 'comment' | 'name'


/** update columns of table "auth_methods" */
export type auth_methods_update_column = 'comment' | 'name'


/** columns and relationships of "blacklist_refresh_token" */
export interface blacklist_refresh_token {
    sig: Scalars['String']
    user_id: Scalars['uuid']
    valid_till: Scalars['timestamptz']
    __typename: 'blacklist_refresh_token'
}


/** aggregated selection of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregate {
    aggregate?: blacklist_refresh_token_aggregate_fields
    nodes: blacklist_refresh_token[]
    __typename: 'blacklist_refresh_token_aggregate'
}


/** aggregate fields of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregate_fields {
    count: Scalars['Int']
    max?: blacklist_refresh_token_max_fields
    min?: blacklist_refresh_token_min_fields
    __typename: 'blacklist_refresh_token_aggregate_fields'
}


/** unique or primary key constraints on table "blacklist_refresh_token" */
export type blacklist_refresh_token_constraint = 'blacklist_refresh_token_user_id_key' | 'refresh_tokens_pkey'


/** aggregate max on columns */
export interface blacklist_refresh_token_max_fields {
    sig?: Scalars['String']
    user_id?: Scalars['uuid']
    valid_till?: Scalars['timestamptz']
    __typename: 'blacklist_refresh_token_max_fields'
}


/** aggregate min on columns */
export interface blacklist_refresh_token_min_fields {
    sig?: Scalars['String']
    user_id?: Scalars['uuid']
    valid_till?: Scalars['timestamptz']
    __typename: 'blacklist_refresh_token_min_fields'
}


/** response of any mutation on the table "blacklist_refresh_token" */
export interface blacklist_refresh_token_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: blacklist_refresh_token[]
    __typename: 'blacklist_refresh_token_mutation_response'
}


/** select columns of table "blacklist_refresh_token" */
export type blacklist_refresh_token_select_column = 'sig' | 'user_id' | 'valid_till'


/** update columns of table "blacklist_refresh_token" */
export type blacklist_refresh_token_update_column = 'sig' | 'user_id' | 'valid_till'


/** columns and relationships of "connectors" */
export interface connectors {
    comment: Scalars['String']
    /** An array relationship */
    customers: customers[]
    /** An aggregate relationship */
    customers_aggregate: customers_aggregate
    name: Scalars['String']
    __typename: 'connectors'
}


/** aggregated selection of "connectors" */
export interface connectors_aggregate {
    aggregate?: connectors_aggregate_fields
    nodes: connectors[]
    __typename: 'connectors_aggregate'
}


/** aggregate fields of "connectors" */
export interface connectors_aggregate_fields {
    count: Scalars['Int']
    max?: connectors_max_fields
    min?: connectors_min_fields
    __typename: 'connectors_aggregate_fields'
}


/** unique or primary key constraints on table "connectors" */
export type connectors_constraint = 'customer_connectors_pkey'

export type connectors_enum = 'ADCURIS' | 'ADOPUS'


/** aggregate max on columns */
export interface connectors_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'connectors_max_fields'
}


/** aggregate min on columns */
export interface connectors_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'connectors_min_fields'
}


/** response of any mutation on the table "connectors" */
export interface connectors_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: connectors[]
    __typename: 'connectors_mutation_response'
}


/** select columns of table "connectors" */
export type connectors_select_column = 'comment' | 'name'


/** update columns of table "connectors" */
export type connectors_update_column = 'comment' | 'name'


/** columns and relationships of "customer_user" */
export interface customer_user {
    brukerBrukerNavn?: Scalars['String']
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    region?: Scalars['Int']
    /** An object relationship */
    user: users
    user_id: Scalars['uuid']
    __typename: 'customer_user'
}


/** aggregated selection of "customer_user" */
export interface customer_user_aggregate {
    aggregate?: customer_user_aggregate_fields
    nodes: customer_user[]
    __typename: 'customer_user_aggregate'
}


/** aggregate fields of "customer_user" */
export interface customer_user_aggregate_fields {
    avg?: customer_user_avg_fields
    count: Scalars['Int']
    max?: customer_user_max_fields
    min?: customer_user_min_fields
    stddev?: customer_user_stddev_fields
    stddev_pop?: customer_user_stddev_pop_fields
    stddev_samp?: customer_user_stddev_samp_fields
    sum?: customer_user_sum_fields
    var_pop?: customer_user_var_pop_fields
    var_samp?: customer_user_var_samp_fields
    variance?: customer_user_variance_fields
    __typename: 'customer_user_aggregate_fields'
}


/** aggregate avg on columns */
export interface customer_user_avg_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_avg_fields'
}


/** unique or primary key constraints on table "customer_user" */
export type customer_user_constraint = 'customer_user_pkey'


/** aggregate max on columns */
export interface customer_user_max_fields {
    brukerBrukerNavn?: Scalars['String']
    customer_id?: Scalars['uuid']
    region?: Scalars['Int']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_max_fields'
}


/** aggregate min on columns */
export interface customer_user_min_fields {
    brukerBrukerNavn?: Scalars['String']
    customer_id?: Scalars['uuid']
    region?: Scalars['Int']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_min_fields'
}


/** response of any mutation on the table "customer_user" */
export interface customer_user_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: customer_user[]
    __typename: 'customer_user_mutation_response'
}


/** select columns of table "customer_user" */
export type customer_user_select_column = 'brukerBrukerNavn' | 'customer_id' | 'region' | 'user_id'


/** columns and relationships of "customer_user_service" */
export interface customer_user_service {
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    service: services_enum
    /** An object relationship */
    serviceByService: services
    /** An object relationship */
    user: users
    user_id: Scalars['uuid']
    __typename: 'customer_user_service'
}


/** aggregated selection of "customer_user_service" */
export interface customer_user_service_aggregate {
    aggregate?: customer_user_service_aggregate_fields
    nodes: customer_user_service[]
    __typename: 'customer_user_service_aggregate'
}


/** aggregate fields of "customer_user_service" */
export interface customer_user_service_aggregate_fields {
    count: Scalars['Int']
    max?: customer_user_service_max_fields
    min?: customer_user_service_min_fields
    __typename: 'customer_user_service_aggregate_fields'
}


/** unique or primary key constraints on table "customer_user_service" */
export type customer_user_service_constraint = 'customer_user_service_pkey'


/** aggregate max on columns */
export interface customer_user_service_max_fields {
    customer_id?: Scalars['uuid']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_service_max_fields'
}


/** aggregate min on columns */
export interface customer_user_service_min_fields {
    customer_id?: Scalars['uuid']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_service_min_fields'
}


/** response of any mutation on the table "customer_user_service" */
export interface customer_user_service_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: customer_user_service[]
    __typename: 'customer_user_service_mutation_response'
}


/** select columns of table "customer_user_service" */
export type customer_user_service_select_column = 'customer_id' | 'service' | 'user_id'


/** update columns of table "customer_user_service" */
export type customer_user_service_update_column = 'customer_id' | 'service' | 'user_id'


/** aggregate stddev on columns */
export interface customer_user_stddev_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface customer_user_stddev_pop_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface customer_user_stddev_samp_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_stddev_samp_fields'
}


/** columns and relationships of "customer_user_sub_service" */
export interface customer_user_sub_service {
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    service: services_enum
    /** An object relationship */
    serviceByService: services
    /** An object relationship */
    subServiceByServiceSubService?: sub_services
    /** An object relationship */
    subServiceBySubService?: sub_services
    sub_service: Scalars['String']
    /** An object relationship */
    user: users
    user_id: Scalars['uuid']
    __typename: 'customer_user_sub_service'
}


/** aggregated selection of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate {
    aggregate?: customer_user_sub_service_aggregate_fields
    nodes: customer_user_sub_service[]
    __typename: 'customer_user_sub_service_aggregate'
}


/** aggregate fields of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate_fields {
    count: Scalars['Int']
    max?: customer_user_sub_service_max_fields
    min?: customer_user_sub_service_min_fields
    __typename: 'customer_user_sub_service_aggregate_fields'
}


/** unique or primary key constraints on table "customer_user_sub_service" */
export type customer_user_sub_service_constraint = 'customer_user_sub_service_pkey'


/** aggregate max on columns */
export interface customer_user_sub_service_max_fields {
    customer_id?: Scalars['uuid']
    sub_service?: Scalars['String']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_sub_service_max_fields'
}


/** aggregate min on columns */
export interface customer_user_sub_service_min_fields {
    customer_id?: Scalars['uuid']
    sub_service?: Scalars['String']
    user_id?: Scalars['uuid']
    __typename: 'customer_user_sub_service_min_fields'
}


/** response of any mutation on the table "customer_user_sub_service" */
export interface customer_user_sub_service_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: customer_user_sub_service[]
    __typename: 'customer_user_sub_service_mutation_response'
}


/** select columns of table "customer_user_sub_service" */
export type customer_user_sub_service_select_column = 'customer_id' | 'service' | 'sub_service' | 'user_id'


/** update columns of table "customer_user_sub_service" */
export type customer_user_sub_service_update_column = 'customer_id' | 'service' | 'sub_service' | 'user_id'


/** aggregate sum on columns */
export interface customer_user_sum_fields {
    region?: Scalars['Int']
    __typename: 'customer_user_sum_fields'
}


/** update columns of table "customer_user" */
export type customer_user_update_column = 'brukerBrukerNavn' | 'customer_id' | 'region' | 'user_id'


/** aggregate var_pop on columns */
export interface customer_user_var_pop_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface customer_user_var_samp_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_var_samp_fields'
}


/** aggregate variance on columns */
export interface customer_user_variance_fields {
    region?: Scalars['Float']
    __typename: 'customer_user_variance_fields'
}


/** columns and relationships of "customers" */
export interface customers {
    conn_string: Scalars['String']
    connector: connectors_enum
    /** An object relationship */
    connectorByConnector: connectors
    created_at?: Scalars['timestamptz']
    /** An array relationship */
    customer_srv_urls: srv_urls[]
    /** An aggregate relationship */
    customer_srv_urls_aggregate: srv_urls_aggregate
    /** An array relationship */
    customer_user_services: customer_user_service[]
    /** An aggregate relationship */
    customer_user_services_aggregate: customer_user_service_aggregate
    /** An array relationship */
    customer_user_sub_services: customer_user_sub_service[]
    /** An aggregate relationship */
    customer_user_sub_services_aggregate: customer_user_sub_service_aggregate
    /** An array relationship */
    customer_users: customer_user[]
    /** An aggregate relationship */
    customer_users_aggregate: customer_user_aggregate
    /** An object relationship */
    customers_contact?: customers_contact
    deleted_at?: Scalars['timestamptz']
    /** An array relationship */
    features: features[]
    /** An aggregate relationship */
    features_aggregate: features_aggregate
    id: Scalars['uuid']
    name: Scalars['String']
    org_nr?: Scalars['String']
    /** An object relationship */
    partner?: partners
    partner_id?: Scalars['uuid']
    refresh_token_validity: Scalars['Int']
    status: status_enum
    /** An object relationship */
    statusByStatus: status
    updated_at?: Scalars['timestamptz']
    /** An array relationship */
    users_auth_logs: users_auth_logs[]
    /** An aggregate relationship */
    users_auth_logs_aggregate: users_auth_logs_aggregate
    __typename: 'customers'
}


/** aggregated selection of "customers" */
export interface customers_aggregate {
    aggregate?: customers_aggregate_fields
    nodes: customers[]
    __typename: 'customers_aggregate'
}


/** aggregate fields of "customers" */
export interface customers_aggregate_fields {
    avg?: customers_avg_fields
    count: Scalars['Int']
    max?: customers_max_fields
    min?: customers_min_fields
    stddev?: customers_stddev_fields
    stddev_pop?: customers_stddev_pop_fields
    stddev_samp?: customers_stddev_samp_fields
    sum?: customers_sum_fields
    var_pop?: customers_var_pop_fields
    var_samp?: customers_var_samp_fields
    variance?: customers_variance_fields
    __typename: 'customers_aggregate_fields'
}


/** aggregate avg on columns */
export interface customers_avg_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_avg_fields'
}


/** unique or primary key constraints on table "customers" */
export type customers_constraint = 'customers_name_key' | 'customers_org_nr_key' | 'customers_pkey'


/** columns and relationships of "customers_contact" */
export interface customers_contact {
    comm_consents_descr?: Scalars['String']
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    email?: Scalars['String']
    logo?: Scalars['String']
    message?: Scalars['String']
    tel?: Scalars['String']
    __typename: 'customers_contact'
}


/** aggregated selection of "customers_contact" */
export interface customers_contact_aggregate {
    aggregate?: customers_contact_aggregate_fields
    nodes: customers_contact[]
    __typename: 'customers_contact_aggregate'
}


/** aggregate fields of "customers_contact" */
export interface customers_contact_aggregate_fields {
    count: Scalars['Int']
    max?: customers_contact_max_fields
    min?: customers_contact_min_fields
    __typename: 'customers_contact_aggregate_fields'
}


/** unique or primary key constraints on table "customers_contact" */
export type customers_contact_constraint = 'customers_contact_customer_id_key' | 'customers_contact_pkey'


/** aggregate max on columns */
export interface customers_contact_max_fields {
    comm_consents_descr?: Scalars['String']
    customer_id?: Scalars['uuid']
    email?: Scalars['String']
    logo?: Scalars['String']
    message?: Scalars['String']
    tel?: Scalars['String']
    __typename: 'customers_contact_max_fields'
}


/** aggregate min on columns */
export interface customers_contact_min_fields {
    comm_consents_descr?: Scalars['String']
    customer_id?: Scalars['uuid']
    email?: Scalars['String']
    logo?: Scalars['String']
    message?: Scalars['String']
    tel?: Scalars['String']
    __typename: 'customers_contact_min_fields'
}


/** response of any mutation on the table "customers_contact" */
export interface customers_contact_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: customers_contact[]
    __typename: 'customers_contact_mutation_response'
}


/** select columns of table "customers_contact" */
export type customers_contact_select_column = 'comm_consents_descr' | 'customer_id' | 'email' | 'logo' | 'message' | 'tel'


/** update columns of table "customers_contact" */
export type customers_contact_update_column = 'comm_consents_descr' | 'customer_id' | 'email' | 'logo' | 'message' | 'tel'


/** aggregate max on columns */
export interface customers_max_fields {
    conn_string?: Scalars['String']
    created_at?: Scalars['timestamptz']
    deleted_at?: Scalars['timestamptz']
    id?: Scalars['uuid']
    name?: Scalars['String']
    org_nr?: Scalars['String']
    partner_id?: Scalars['uuid']
    refresh_token_validity?: Scalars['Int']
    updated_at?: Scalars['timestamptz']
    __typename: 'customers_max_fields'
}


/** aggregate min on columns */
export interface customers_min_fields {
    conn_string?: Scalars['String']
    created_at?: Scalars['timestamptz']
    deleted_at?: Scalars['timestamptz']
    id?: Scalars['uuid']
    name?: Scalars['String']
    org_nr?: Scalars['String']
    partner_id?: Scalars['uuid']
    refresh_token_validity?: Scalars['Int']
    updated_at?: Scalars['timestamptz']
    __typename: 'customers_min_fields'
}


/** response of any mutation on the table "customers" */
export interface customers_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: customers[]
    __typename: 'customers_mutation_response'
}


/** select columns of table "customers" */
export type customers_select_column = 'conn_string' | 'connector' | 'created_at' | 'deleted_at' | 'id' | 'name' | 'org_nr' | 'partner_id' | 'refresh_token_validity' | 'status' | 'updated_at'


/** aggregate stddev on columns */
export interface customers_stddev_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface customers_stddev_pop_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface customers_stddev_samp_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface customers_sum_fields {
    refresh_token_validity?: Scalars['Int']
    __typename: 'customers_sum_fields'
}


/** update columns of table "customers" */
export type customers_update_column = 'conn_string' | 'connector' | 'created_at' | 'deleted_at' | 'id' | 'name' | 'org_nr' | 'partner_id' | 'refresh_token_validity' | 'status' | 'updated_at'


/** aggregate var_pop on columns */
export interface customers_var_pop_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface customers_var_samp_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_var_samp_fields'
}


/** aggregate variance on columns */
export interface customers_variance_fields {
    refresh_token_validity?: Scalars['Float']
    __typename: 'customers_variance_fields'
}


/** columns and relationships of "feature_names" */
export interface feature_names {
    description?: Scalars['String']
    /** An array relationship */
    features: features[]
    /** An aggregate relationship */
    features_aggregate: features_aggregate
    name: Scalars['String']
    __typename: 'feature_names'
}


/** aggregated selection of "feature_names" */
export interface feature_names_aggregate {
    aggregate?: feature_names_aggregate_fields
    nodes: feature_names[]
    __typename: 'feature_names_aggregate'
}


/** aggregate fields of "feature_names" */
export interface feature_names_aggregate_fields {
    count: Scalars['Int']
    max?: feature_names_max_fields
    min?: feature_names_min_fields
    __typename: 'feature_names_aggregate_fields'
}


/** unique or primary key constraints on table "feature_names" */
export type feature_names_constraint = 'feature_names_pkey'

export type feature_names_enum = 'anonymousQnr' | 'autoImportableQnr' | 'dashboardTraceability' | 'ordersOverviewOnSelectedRecipientsForQnr' | 'predefinedUserForQnr' | 'rejectableQnr' | 'signByTherapistDocument' | 'test'


/** aggregate max on columns */
export interface feature_names_max_fields {
    description?: Scalars['String']
    name?: Scalars['String']
    __typename: 'feature_names_max_fields'
}


/** aggregate min on columns */
export interface feature_names_min_fields {
    description?: Scalars['String']
    name?: Scalars['String']
    __typename: 'feature_names_min_fields'
}


/** response of any mutation on the table "feature_names" */
export interface feature_names_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: feature_names[]
    __typename: 'feature_names_mutation_response'
}


/** select columns of table "feature_names" */
export type feature_names_select_column = 'description' | 'name'


/** update columns of table "feature_names" */
export type feature_names_update_column = 'description' | 'name'


/** columns and relationships of "features" */
export interface features {
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    /** An object relationship */
    feature_name: feature_names
    name: feature_names_enum
    __typename: 'features'
}


/** aggregated selection of "features" */
export interface features_aggregate {
    aggregate?: features_aggregate_fields
    nodes: features[]
    __typename: 'features_aggregate'
}


/** aggregate fields of "features" */
export interface features_aggregate_fields {
    count: Scalars['Int']
    max?: features_max_fields
    min?: features_min_fields
    __typename: 'features_aggregate_fields'
}


/** unique or primary key constraints on table "features" */
export type features_constraint = 'features_pkey'


/** aggregate max on columns */
export interface features_max_fields {
    customer_id?: Scalars['uuid']
    __typename: 'features_max_fields'
}


/** aggregate min on columns */
export interface features_min_fields {
    customer_id?: Scalars['uuid']
    __typename: 'features_min_fields'
}


/** response of any mutation on the table "features" */
export interface features_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: features[]
    __typename: 'features_mutation_response'
}


/** select columns of table "features" */
export type features_select_column = 'customer_id' | 'name'


/** update columns of table "features" */
export type features_update_column = 'customer_id' | 'name'

export interface getCustomersAndCountUsersOutput {
    conn_string: Scalars['String']
    connector: Scalars['String']
    /** An array relationship */
    customerFeatures: features[]
    /** An aggregate relationship */
    customerFeatures_aggregate: features_aggregate
    /** An array relationship */
    customerSrvUrls: srv_urls[]
    /** An aggregate relationship */
    customerSrvUrls_aggregate: srv_urls_aggregate
    /** An object relationship */
    customersContact: customers_contact
    id: Scalars['String']
    name: Scalars['String']
    refresh_token_validity: Scalars['Int']
    users_count?: Scalars['Int']
    x_api_key: Scalars['String']
    __typename: 'getCustomersAndCountUsersOutput'
}


/** mutation root */
export interface mutation_root {
    /** delete data from the table: "admins" */
    delete_admins?: admins_mutation_response
    /** delete data from the table: "admins_auth_logs" */
    delete_admins_auth_logs?: admins_auth_logs_mutation_response
    /** delete single row from the table: "admins_auth_logs" */
    delete_admins_auth_logs_by_pk?: admins_auth_logs
    /** delete single row from the table: "admins" */
    delete_admins_by_pk?: admins
    /** delete data from the table: "auth_methods" */
    delete_auth_methods?: auth_methods_mutation_response
    /** delete single row from the table: "auth_methods" */
    delete_auth_methods_by_pk?: auth_methods
    /** delete data from the table: "blacklist_refresh_token" */
    delete_blacklist_refresh_token?: blacklist_refresh_token_mutation_response
    /** delete single row from the table: "blacklist_refresh_token" */
    delete_blacklist_refresh_token_by_pk?: blacklist_refresh_token
    /** delete data from the table: "connectors" */
    delete_connectors?: connectors_mutation_response
    /** delete single row from the table: "connectors" */
    delete_connectors_by_pk?: connectors
    /** delete data from the table: "customer_user" */
    delete_customer_user?: customer_user_mutation_response
    /** delete single row from the table: "customer_user" */
    delete_customer_user_by_pk?: customer_user
    /** delete data from the table: "customer_user_service" */
    delete_customer_user_service?: customer_user_service_mutation_response
    /** delete single row from the table: "customer_user_service" */
    delete_customer_user_service_by_pk?: customer_user_service
    /** delete data from the table: "customer_user_sub_service" */
    delete_customer_user_sub_service?: customer_user_sub_service_mutation_response
    /** delete single row from the table: "customer_user_sub_service" */
    delete_customer_user_sub_service_by_pk?: customer_user_sub_service
    /** delete data from the table: "customers" */
    delete_customers?: customers_mutation_response
    /** delete single row from the table: "customers" */
    delete_customers_by_pk?: customers
    /** delete data from the table: "customers_contact" */
    delete_customers_contact?: customers_contact_mutation_response
    /** delete single row from the table: "customers_contact" */
    delete_customers_contact_by_pk?: customers_contact
    /** delete data from the table: "feature_names" */
    delete_feature_names?: feature_names_mutation_response
    /** delete single row from the table: "feature_names" */
    delete_feature_names_by_pk?: feature_names
    /** delete data from the table: "features" */
    delete_features?: features_mutation_response
    /** delete single row from the table: "features" */
    delete_features_by_pk?: features
    /** delete data from the table: "partners" */
    delete_partners?: partners_mutation_response
    /** delete single row from the table: "partners" */
    delete_partners_by_pk?: partners
    /** delete data from the table: "roles" */
    delete_roles?: roles_mutation_response
    /** delete single row from the table: "roles" */
    delete_roles_by_pk?: roles
    /** delete data from the table: "services" */
    delete_services?: services_mutation_response
    /** delete single row from the table: "services" */
    delete_services_by_pk?: services
    /** delete data from the table: "srv_names" */
    delete_srv_names?: srv_names_mutation_response
    /** delete single row from the table: "srv_names" */
    delete_srv_names_by_pk?: srv_names
    /** delete data from the table: "srv_urls" */
    delete_srv_urls?: srv_urls_mutation_response
    /** delete single row from the table: "srv_urls" */
    delete_srv_urls_by_pk?: srv_urls
    /** delete data from the table: "status" */
    delete_status?: status_mutation_response
    /** delete single row from the table: "status" */
    delete_status_by_pk?: status
    /** delete data from the table: "sub_services" */
    delete_sub_services?: sub_services_mutation_response
    /** delete single row from the table: "sub_services" */
    delete_sub_services_by_pk?: sub_services
    /** delete data from the table: "user_basic_data" */
    delete_user_basic_data?: user_basic_data_mutation_response
    /** delete single row from the table: "user_basic_data" */
    delete_user_basic_data_by_pk?: user_basic_data
    /** delete data from the table: "users" */
    delete_users?: users_mutation_response
    /** delete data from the table: "users_auth_logs" */
    delete_users_auth_logs?: users_auth_logs_mutation_response
    /** delete single row from the table: "users_auth_logs" */
    delete_users_auth_logs_by_pk?: users_auth_logs
    /** delete single row from the table: "users" */
    delete_users_by_pk?: users
    insertAdmin?: ReturnAffectedItemId
    insertCustomer?: getCustomersAndCountUsersOutput
    insertUserOrWarnIfExists?: InsertUserOrWarnIfExistsOutput
    insertUsersOrWarnIfExists?: InsertUserOrWarnIfExistsOutput
    /** insert data into the table: "admins" */
    insert_admins?: admins_mutation_response
    /** insert data into the table: "admins_auth_logs" */
    insert_admins_auth_logs?: admins_auth_logs_mutation_response
    /** insert a single row into the table: "admins_auth_logs" */
    insert_admins_auth_logs_one?: admins_auth_logs
    /** insert a single row into the table: "admins" */
    insert_admins_one?: admins
    /** insert data into the table: "auth_methods" */
    insert_auth_methods?: auth_methods_mutation_response
    /** insert a single row into the table: "auth_methods" */
    insert_auth_methods_one?: auth_methods
    /** insert data into the table: "blacklist_refresh_token" */
    insert_blacklist_refresh_token?: blacklist_refresh_token_mutation_response
    /** insert a single row into the table: "blacklist_refresh_token" */
    insert_blacklist_refresh_token_one?: blacklist_refresh_token
    /** insert data into the table: "connectors" */
    insert_connectors?: connectors_mutation_response
    /** insert a single row into the table: "connectors" */
    insert_connectors_one?: connectors
    /** insert data into the table: "customer_user" */
    insert_customer_user?: customer_user_mutation_response
    /** insert a single row into the table: "customer_user" */
    insert_customer_user_one?: customer_user
    /** insert data into the table: "customer_user_service" */
    insert_customer_user_service?: customer_user_service_mutation_response
    /** insert a single row into the table: "customer_user_service" */
    insert_customer_user_service_one?: customer_user_service
    /** insert data into the table: "customer_user_sub_service" */
    insert_customer_user_sub_service?: customer_user_sub_service_mutation_response
    /** insert a single row into the table: "customer_user_sub_service" */
    insert_customer_user_sub_service_one?: customer_user_sub_service
    /** insert data into the table: "customers" */
    insert_customers?: customers_mutation_response
    /** insert data into the table: "customers_contact" */
    insert_customers_contact?: customers_contact_mutation_response
    /** insert a single row into the table: "customers_contact" */
    insert_customers_contact_one?: customers_contact
    /** insert a single row into the table: "customers" */
    insert_customers_one?: customers
    /** insert data into the table: "feature_names" */
    insert_feature_names?: feature_names_mutation_response
    /** insert a single row into the table: "feature_names" */
    insert_feature_names_one?: feature_names
    /** insert data into the table: "features" */
    insert_features?: features_mutation_response
    /** insert a single row into the table: "features" */
    insert_features_one?: features
    /** insert data into the table: "partners" */
    insert_partners?: partners_mutation_response
    /** insert a single row into the table: "partners" */
    insert_partners_one?: partners
    /** insert data into the table: "roles" */
    insert_roles?: roles_mutation_response
    /** insert a single row into the table: "roles" */
    insert_roles_one?: roles
    /** insert data into the table: "services" */
    insert_services?: services_mutation_response
    /** insert a single row into the table: "services" */
    insert_services_one?: services
    /** insert data into the table: "srv_names" */
    insert_srv_names?: srv_names_mutation_response
    /** insert a single row into the table: "srv_names" */
    insert_srv_names_one?: srv_names
    /** insert data into the table: "srv_urls" */
    insert_srv_urls?: srv_urls_mutation_response
    /** insert a single row into the table: "srv_urls" */
    insert_srv_urls_one?: srv_urls
    /** insert data into the table: "status" */
    insert_status?: status_mutation_response
    /** insert a single row into the table: "status" */
    insert_status_one?: status
    /** insert data into the table: "sub_services" */
    insert_sub_services?: sub_services_mutation_response
    /** insert a single row into the table: "sub_services" */
    insert_sub_services_one?: sub_services
    /** insert data into the table: "user_basic_data" */
    insert_user_basic_data?: user_basic_data_mutation_response
    /** insert a single row into the table: "user_basic_data" */
    insert_user_basic_data_one?: user_basic_data
    /** insert data into the table: "users" */
    insert_users?: users_mutation_response
    /** insert data into the table: "users_auth_logs" */
    insert_users_auth_logs?: users_auth_logs_mutation_response
    /** insert a single row into the table: "users_auth_logs" */
    insert_users_auth_logs_one?: users_auth_logs
    /** insert a single row into the table: "users" */
    insert_users_one?: users
    signin?: SigninOutput
    singinAvansAdmin?: SinginOutputWithRefreshToken
    singinAvansAdminByRefreshToken?: SinginOutputWithRefreshToken
    updateAdmin?: ReturnAffectedItemId
    updateCustomer?: ReturnAffectedRows
    updateUser?: UpdateUserOutput
    /** update data of the table: "admins" */
    update_admins?: admins_mutation_response
    /** update data of the table: "admins_auth_logs" */
    update_admins_auth_logs?: admins_auth_logs_mutation_response
    /** update single row of the table: "admins_auth_logs" */
    update_admins_auth_logs_by_pk?: admins_auth_logs
    /** update single row of the table: "admins" */
    update_admins_by_pk?: admins
    /** update data of the table: "auth_methods" */
    update_auth_methods?: auth_methods_mutation_response
    /** update single row of the table: "auth_methods" */
    update_auth_methods_by_pk?: auth_methods
    /** update data of the table: "blacklist_refresh_token" */
    update_blacklist_refresh_token?: blacklist_refresh_token_mutation_response
    /** update single row of the table: "blacklist_refresh_token" */
    update_blacklist_refresh_token_by_pk?: blacklist_refresh_token
    /** update data of the table: "connectors" */
    update_connectors?: connectors_mutation_response
    /** update single row of the table: "connectors" */
    update_connectors_by_pk?: connectors
    /** update data of the table: "customer_user" */
    update_customer_user?: customer_user_mutation_response
    /** update single row of the table: "customer_user" */
    update_customer_user_by_pk?: customer_user
    /** update data of the table: "customer_user_service" */
    update_customer_user_service?: customer_user_service_mutation_response
    /** update single row of the table: "customer_user_service" */
    update_customer_user_service_by_pk?: customer_user_service
    /** update data of the table: "customer_user_sub_service" */
    update_customer_user_sub_service?: customer_user_sub_service_mutation_response
    /** update single row of the table: "customer_user_sub_service" */
    update_customer_user_sub_service_by_pk?: customer_user_sub_service
    /** update data of the table: "customers" */
    update_customers?: customers_mutation_response
    /** update single row of the table: "customers" */
    update_customers_by_pk?: customers
    /** update data of the table: "customers_contact" */
    update_customers_contact?: customers_contact_mutation_response
    /** update single row of the table: "customers_contact" */
    update_customers_contact_by_pk?: customers_contact
    /** update data of the table: "feature_names" */
    update_feature_names?: feature_names_mutation_response
    /** update single row of the table: "feature_names" */
    update_feature_names_by_pk?: feature_names
    /** update data of the table: "features" */
    update_features?: features_mutation_response
    /** update single row of the table: "features" */
    update_features_by_pk?: features
    /** update data of the table: "partners" */
    update_partners?: partners_mutation_response
    /** update single row of the table: "partners" */
    update_partners_by_pk?: partners
    /** update data of the table: "roles" */
    update_roles?: roles_mutation_response
    /** update single row of the table: "roles" */
    update_roles_by_pk?: roles
    /** update data of the table: "services" */
    update_services?: services_mutation_response
    /** update single row of the table: "services" */
    update_services_by_pk?: services
    /** update data of the table: "srv_names" */
    update_srv_names?: srv_names_mutation_response
    /** update single row of the table: "srv_names" */
    update_srv_names_by_pk?: srv_names
    /** update data of the table: "srv_urls" */
    update_srv_urls?: srv_urls_mutation_response
    /** update single row of the table: "srv_urls" */
    update_srv_urls_by_pk?: srv_urls
    /** update data of the table: "status" */
    update_status?: status_mutation_response
    /** update single row of the table: "status" */
    update_status_by_pk?: status
    /** update data of the table: "sub_services" */
    update_sub_services?: sub_services_mutation_response
    /** update single row of the table: "sub_services" */
    update_sub_services_by_pk?: sub_services
    /** update data of the table: "user_basic_data" */
    update_user_basic_data?: user_basic_data_mutation_response
    /** update single row of the table: "user_basic_data" */
    update_user_basic_data_by_pk?: user_basic_data
    /** update data of the table: "users" */
    update_users?: users_mutation_response
    /** update data of the table: "users_auth_logs" */
    update_users_auth_logs?: users_auth_logs_mutation_response
    /** update single row of the table: "users_auth_logs" */
    update_users_auth_logs_by_pk?: users_auth_logs
    /** update single row of the table: "users" */
    update_users_by_pk?: users
    __typename: 'mutation_root'
}


/** column ordering options */
export type order_by = 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'


/** columns and relationships of "partners" */
export interface partners {
    /** An array relationship */
    customers: customers[]
    /** An aggregate relationship */
    customers_aggregate: customers_aggregate
    id: Scalars['uuid']
    name: Scalars['String']
    __typename: 'partners'
}


/** aggregated selection of "partners" */
export interface partners_aggregate {
    aggregate?: partners_aggregate_fields
    nodes: partners[]
    __typename: 'partners_aggregate'
}


/** aggregate fields of "partners" */
export interface partners_aggregate_fields {
    count: Scalars['Int']
    max?: partners_max_fields
    min?: partners_min_fields
    __typename: 'partners_aggregate_fields'
}


/** unique or primary key constraints on table "partners" */
export type partners_constraint = 'partners_pkey'


/** aggregate max on columns */
export interface partners_max_fields {
    id?: Scalars['uuid']
    name?: Scalars['String']
    __typename: 'partners_max_fields'
}


/** aggregate min on columns */
export interface partners_min_fields {
    id?: Scalars['uuid']
    name?: Scalars['String']
    __typename: 'partners_min_fields'
}


/** response of any mutation on the table "partners" */
export interface partners_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: partners[]
    __typename: 'partners_mutation_response'
}


/** select columns of table "partners" */
export type partners_select_column = 'id' | 'name'


/** update columns of table "partners" */
export type partners_update_column = 'id' | 'name'

export interface query_root {
    /** fetch data from the table: "admins" */
    admins: admins[]
    /** fetch aggregated fields from the table: "admins" */
    admins_aggregate: admins_aggregate
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs: admins_auth_logs[]
    /** An aggregate relationship */
    admins_auth_logs_aggregate: admins_auth_logs_aggregate
    /** fetch data from the table: "admins_auth_logs" using primary key columns */
    admins_auth_logs_by_pk?: admins_auth_logs
    /** fetch data from the table: "admins" using primary key columns */
    admins_by_pk?: admins
    /** fetch data from the table: "auth_methods" */
    auth_methods: auth_methods[]
    /** fetch aggregated fields from the table: "auth_methods" */
    auth_methods_aggregate: auth_methods_aggregate
    /** fetch data from the table: "auth_methods" using primary key columns */
    auth_methods_by_pk?: auth_methods
    /** fetch data from the table: "blacklist_refresh_token" */
    blacklist_refresh_token: blacklist_refresh_token[]
    /** fetch aggregated fields from the table: "blacklist_refresh_token" */
    blacklist_refresh_token_aggregate: blacklist_refresh_token_aggregate
    /** fetch data from the table: "blacklist_refresh_token" using primary key columns */
    blacklist_refresh_token_by_pk?: blacklist_refresh_token
    /** fetch data from the table: "connectors" */
    connectors: connectors[]
    /** fetch aggregated fields from the table: "connectors" */
    connectors_aggregate: connectors_aggregate
    /** fetch data from the table: "connectors" using primary key columns */
    connectors_by_pk?: connectors
    /** fetch data from the table: "customer_user" */
    customer_user: customer_user[]
    /** fetch aggregated fields from the table: "customer_user" */
    customer_user_aggregate: customer_user_aggregate
    /** fetch data from the table: "customer_user" using primary key columns */
    customer_user_by_pk?: customer_user
    /** fetch data from the table: "customer_user_service" */
    customer_user_service: customer_user_service[]
    /** fetch aggregated fields from the table: "customer_user_service" */
    customer_user_service_aggregate: customer_user_service_aggregate
    /** fetch data from the table: "customer_user_service" using primary key columns */
    customer_user_service_by_pk?: customer_user_service
    /** fetch data from the table: "customer_user_sub_service" */
    customer_user_sub_service: customer_user_sub_service[]
    /** fetch aggregated fields from the table: "customer_user_sub_service" */
    customer_user_sub_service_aggregate: customer_user_sub_service_aggregate
    /** fetch data from the table: "customer_user_sub_service" using primary key columns */
    customer_user_sub_service_by_pk?: customer_user_sub_service
    /** An array relationship */
    customers: customers[]
    /** An aggregate relationship */
    customers_aggregate: customers_aggregate
    /** fetch data from the table: "customers" using primary key columns */
    customers_by_pk?: customers
    /** fetch data from the table: "customers_contact" */
    customers_contact: customers_contact[]
    /** fetch aggregated fields from the table: "customers_contact" */
    customers_contact_aggregate: customers_contact_aggregate
    /** fetch data from the table: "customers_contact" using primary key columns */
    customers_contact_by_pk?: customers_contact
    /** fetch data from the table: "feature_names" */
    feature_names: feature_names[]
    /** fetch aggregated fields from the table: "feature_names" */
    feature_names_aggregate: feature_names_aggregate
    /** fetch data from the table: "feature_names" using primary key columns */
    feature_names_by_pk?: feature_names
    /** An array relationship */
    features: features[]
    /** An aggregate relationship */
    features_aggregate: features_aggregate
    /** fetch data from the table: "features" using primary key columns */
    features_by_pk?: features
    getCustomerById?: getCustomersAndCountUsersOutput
    getCustomersAndCountUsers?: (getCustomersAndCountUsersOutput | undefined)[]
    /** fetch data from the table: "partners" */
    partners: partners[]
    /** fetch aggregated fields from the table: "partners" */
    partners_aggregate: partners_aggregate
    /** fetch data from the table: "partners" using primary key columns */
    partners_by_pk?: partners
    /** fetch data from the table: "roles" */
    roles: roles[]
    /** fetch aggregated fields from the table: "roles" */
    roles_aggregate: roles_aggregate
    /** fetch data from the table: "roles" using primary key columns */
    roles_by_pk?: roles
    /** fetch data from the table: "services" */
    services: services[]
    /** fetch aggregated fields from the table: "services" */
    services_aggregate: services_aggregate
    /** fetch data from the table: "services" using primary key columns */
    services_by_pk?: services
    /** fetch data from the table: "srv_names" */
    srv_names: srv_names[]
    /** fetch aggregated fields from the table: "srv_names" */
    srv_names_aggregate: srv_names_aggregate
    /** fetch data from the table: "srv_names" using primary key columns */
    srv_names_by_pk?: srv_names
    /** An array relationship */
    srv_urls: srv_urls[]
    /** An aggregate relationship */
    srv_urls_aggregate: srv_urls_aggregate
    /** fetch data from the table: "srv_urls" using primary key columns */
    srv_urls_by_pk?: srv_urls
    /** fetch data from the table: "status" */
    status: status[]
    /** fetch aggregated fields from the table: "status" */
    status_aggregate: status_aggregate
    /** fetch data from the table: "status" using primary key columns */
    status_by_pk?: status
    /** fetch data from the table: "sub_services" */
    sub_services: sub_services[]
    /** An aggregate relationship */
    sub_services_aggregate: sub_services_aggregate
    /** fetch data from the table: "sub_services" using primary key columns */
    sub_services_by_pk?: sub_services
    /** An array relationship */
    user_basic_data: user_basic_data[]
    /** An aggregate relationship */
    user_basic_data_aggregate: user_basic_data_aggregate
    /** fetch data from the table: "user_basic_data" using primary key columns */
    user_basic_data_by_pk?: user_basic_data
    /** An array relationship */
    users: users[]
    /** An aggregate relationship */
    users_aggregate: users_aggregate
    /** An array relationship */
    users_auth_logs: users_auth_logs[]
    /** An aggregate relationship */
    users_auth_logs_aggregate: users_auth_logs_aggregate
    /** fetch data from the table: "users_auth_logs" using primary key columns */
    users_auth_logs_by_pk?: users_auth_logs
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: users
    __typename: 'query_root'
}


/** columns and relationships of "roles" */
export interface roles {
    comment?: Scalars['String']
    name: Scalars['String']
    /** An array relationship */
    users: users[]
    /** An aggregate relationship */
    users_aggregate: users_aggregate
    __typename: 'roles'
}


/** aggregated selection of "roles" */
export interface roles_aggregate {
    aggregate?: roles_aggregate_fields
    nodes: roles[]
    __typename: 'roles_aggregate'
}


/** aggregate fields of "roles" */
export interface roles_aggregate_fields {
    count: Scalars['Int']
    max?: roles_max_fields
    min?: roles_min_fields
    __typename: 'roles_aggregate_fields'
}


/** unique or primary key constraints on table "roles" */
export type roles_constraint = 'roles_pkey'

export type roles_enum = 'ADMIN' | 'RECIPIENT' | 'SUPER_USER' | 'THERAPIST' | 'USER'


/** aggregate max on columns */
export interface roles_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'roles_max_fields'
}


/** aggregate min on columns */
export interface roles_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'roles_min_fields'
}


/** response of any mutation on the table "roles" */
export interface roles_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: roles[]
    __typename: 'roles_mutation_response'
}


/** select columns of table "roles" */
export type roles_select_column = 'comment' | 'name'


/** update columns of table "roles" */
export type roles_update_column = 'comment' | 'name'


/** columns and relationships of "services" */
export interface services {
    comment?: Scalars['String']
    /** An array relationship */
    customer_user_services: customer_user_service[]
    /** An aggregate relationship */
    customer_user_services_aggregate: customer_user_service_aggregate
    /** An array relationship */
    customer_user_sub_services: customer_user_sub_service[]
    /** An aggregate relationship */
    customer_user_sub_services_aggregate: customer_user_sub_service_aggregate
    name: Scalars['String']
    /** fetch data from the table: "sub_services" */
    sub_services: sub_services[]
    /** An aggregate relationship */
    sub_services_aggregate: sub_services_aggregate
    __typename: 'services'
}


/** aggregated selection of "services" */
export interface services_aggregate {
    aggregate?: services_aggregate_fields
    nodes: services[]
    __typename: 'services_aggregate'
}


/** aggregate fields of "services" */
export interface services_aggregate_fields {
    count: Scalars['Int']
    max?: services_max_fields
    min?: services_min_fields
    __typename: 'services_aggregate_fields'
}


/** unique or primary key constraints on table "services" */
export type services_constraint = 'accessible_services_name_key' | 'accessible_services_pkey'

export type services_enum = 'designer' | 'microsoft_office'


/** aggregate max on columns */
export interface services_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'services_max_fields'
}


/** aggregate min on columns */
export interface services_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'services_min_fields'
}


/** response of any mutation on the table "services" */
export interface services_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: services[]
    __typename: 'services_mutation_response'
}


/** select columns of table "services" */
export type services_select_column = 'comment' | 'name'


/** update columns of table "services" */
export type services_update_column = 'comment' | 'name'


/** columns and relationships of "srv_names" */
export interface srv_names {
    description: Scalars['String']
    name: Scalars['String']
    /** An array relationship */
    srv_urls: srv_urls[]
    /** An aggregate relationship */
    srv_urls_aggregate: srv_urls_aggregate
    __typename: 'srv_names'
}


/** aggregated selection of "srv_names" */
export interface srv_names_aggregate {
    aggregate?: srv_names_aggregate_fields
    nodes: srv_names[]
    __typename: 'srv_names_aggregate'
}


/** aggregate fields of "srv_names" */
export interface srv_names_aggregate_fields {
    count: Scalars['Int']
    max?: srv_names_max_fields
    min?: srv_names_min_fields
    __typename: 'srv_names_aggregate_fields'
}


/** unique or primary key constraints on table "srv_names" */
export type srv_names_constraint = 'srv_names_pkey'

export type srv_names_enum = 'connector'


/** aggregate max on columns */
export interface srv_names_max_fields {
    description?: Scalars['String']
    name?: Scalars['String']
    __typename: 'srv_names_max_fields'
}


/** aggregate min on columns */
export interface srv_names_min_fields {
    description?: Scalars['String']
    name?: Scalars['String']
    __typename: 'srv_names_min_fields'
}


/** response of any mutation on the table "srv_names" */
export interface srv_names_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: srv_names[]
    __typename: 'srv_names_mutation_response'
}


/** select columns of table "srv_names" */
export type srv_names_select_column = 'description' | 'name'


/** update columns of table "srv_names" */
export type srv_names_update_column = 'description' | 'name'


/** columns and relationships of "srv_urls" */
export interface srv_urls {
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    name: srv_names_enum
    /** An object relationship */
    srv_name: srv_names
    url: Scalars['String']
    __typename: 'srv_urls'
}


/** aggregated selection of "srv_urls" */
export interface srv_urls_aggregate {
    aggregate?: srv_urls_aggregate_fields
    nodes: srv_urls[]
    __typename: 'srv_urls_aggregate'
}


/** aggregate fields of "srv_urls" */
export interface srv_urls_aggregate_fields {
    count: Scalars['Int']
    max?: srv_urls_max_fields
    min?: srv_urls_min_fields
    __typename: 'srv_urls_aggregate_fields'
}


/** unique or primary key constraints on table "srv_urls" */
export type srv_urls_constraint = 'srv_urls_pkey'


/** aggregate max on columns */
export interface srv_urls_max_fields {
    customer_id?: Scalars['uuid']
    url?: Scalars['String']
    __typename: 'srv_urls_max_fields'
}


/** aggregate min on columns */
export interface srv_urls_min_fields {
    customer_id?: Scalars['uuid']
    url?: Scalars['String']
    __typename: 'srv_urls_min_fields'
}


/** response of any mutation on the table "srv_urls" */
export interface srv_urls_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: srv_urls[]
    __typename: 'srv_urls_mutation_response'
}


/** select columns of table "srv_urls" */
export type srv_urls_select_column = 'customer_id' | 'name' | 'url'


/** update columns of table "srv_urls" */
export type srv_urls_update_column = 'customer_id' | 'name' | 'url'


/** columns and relationships of "status" */
export interface status {
    comment?: Scalars['String']
    /** An array relationship */
    customers: customers[]
    /** An aggregate relationship */
    customers_aggregate: customers_aggregate
    name: Scalars['String']
    /** An array relationship */
    user_basic_data: user_basic_data[]
    /** An aggregate relationship */
    user_basic_data_aggregate: user_basic_data_aggregate
    __typename: 'status'
}


/** aggregated selection of "status" */
export interface status_aggregate {
    aggregate?: status_aggregate_fields
    nodes: status[]
    __typename: 'status_aggregate'
}


/** aggregate fields of "status" */
export interface status_aggregate_fields {
    count: Scalars['Int']
    max?: status_max_fields
    min?: status_min_fields
    __typename: 'status_aggregate_fields'
}


/** unique or primary key constraints on table "status" */
export type status_constraint = 'status_name_key' | 'status_pkey'

export type status_enum = 'ACTIVE' | 'INACTIVE'


/** aggregate max on columns */
export interface status_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'status_max_fields'
}


/** aggregate min on columns */
export interface status_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'status_min_fields'
}


/** response of any mutation on the table "status" */
export interface status_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: status[]
    __typename: 'status_mutation_response'
}


/** select columns of table "status" */
export type status_select_column = 'comment' | 'name'


/** update columns of table "status" */
export type status_update_column = 'comment' | 'name'


/** columns and relationships of "sub_services" */
export interface sub_services {
    comment?: Scalars['String']
    /** An array relationship */
    customer_user_sub_services: customer_user_sub_service[]
    /** An aggregate relationship */
    customer_user_sub_services_aggregate: customer_user_sub_service_aggregate
    name: Scalars['String']
    service: services_enum
    /** An object relationship */
    serviceByService: services
    __typename: 'sub_services'
}


/** aggregated selection of "sub_services" */
export interface sub_services_aggregate {
    aggregate?: sub_services_aggregate_fields
    nodes: sub_services[]
    __typename: 'sub_services_aggregate'
}


/** aggregate fields of "sub_services" */
export interface sub_services_aggregate_fields {
    count: Scalars['Int']
    max?: sub_services_max_fields
    min?: sub_services_min_fields
    __typename: 'sub_services_aggregate_fields'
}


/** unique or primary key constraints on table "sub_services" */
export type sub_services_constraint = 'sub_services_pkey'


/** aggregate max on columns */
export interface sub_services_max_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'sub_services_max_fields'
}


/** aggregate min on columns */
export interface sub_services_min_fields {
    comment?: Scalars['String']
    name?: Scalars['String']
    __typename: 'sub_services_min_fields'
}


/** response of any mutation on the table "sub_services" */
export interface sub_services_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: sub_services[]
    __typename: 'sub_services_mutation_response'
}


/** select columns of table "sub_services" */
export type sub_services_select_column = 'comment' | 'name' | 'service'


/** update columns of table "sub_services" */
export type sub_services_update_column = 'comment' | 'name' | 'service'

export interface subscription_root {
    /** fetch data from the table: "admins" */
    admins: admins[]
    /** fetch aggregated fields from the table: "admins" */
    admins_aggregate: admins_aggregate
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs: admins_auth_logs[]
    /** An aggregate relationship */
    admins_auth_logs_aggregate: admins_auth_logs_aggregate
    /** fetch data from the table: "admins_auth_logs" using primary key columns */
    admins_auth_logs_by_pk?: admins_auth_logs
    /** fetch data from the table: "admins" using primary key columns */
    admins_by_pk?: admins
    /** fetch data from the table: "auth_methods" */
    auth_methods: auth_methods[]
    /** fetch aggregated fields from the table: "auth_methods" */
    auth_methods_aggregate: auth_methods_aggregate
    /** fetch data from the table: "auth_methods" using primary key columns */
    auth_methods_by_pk?: auth_methods
    /** fetch data from the table: "blacklist_refresh_token" */
    blacklist_refresh_token: blacklist_refresh_token[]
    /** fetch aggregated fields from the table: "blacklist_refresh_token" */
    blacklist_refresh_token_aggregate: blacklist_refresh_token_aggregate
    /** fetch data from the table: "blacklist_refresh_token" using primary key columns */
    blacklist_refresh_token_by_pk?: blacklist_refresh_token
    /** fetch data from the table: "connectors" */
    connectors: connectors[]
    /** fetch aggregated fields from the table: "connectors" */
    connectors_aggregate: connectors_aggregate
    /** fetch data from the table: "connectors" using primary key columns */
    connectors_by_pk?: connectors
    /** fetch data from the table: "customer_user" */
    customer_user: customer_user[]
    /** fetch aggregated fields from the table: "customer_user" */
    customer_user_aggregate: customer_user_aggregate
    /** fetch data from the table: "customer_user" using primary key columns */
    customer_user_by_pk?: customer_user
    /** fetch data from the table: "customer_user_service" */
    customer_user_service: customer_user_service[]
    /** fetch aggregated fields from the table: "customer_user_service" */
    customer_user_service_aggregate: customer_user_service_aggregate
    /** fetch data from the table: "customer_user_service" using primary key columns */
    customer_user_service_by_pk?: customer_user_service
    /** fetch data from the table: "customer_user_sub_service" */
    customer_user_sub_service: customer_user_sub_service[]
    /** fetch aggregated fields from the table: "customer_user_sub_service" */
    customer_user_sub_service_aggregate: customer_user_sub_service_aggregate
    /** fetch data from the table: "customer_user_sub_service" using primary key columns */
    customer_user_sub_service_by_pk?: customer_user_sub_service
    /** An array relationship */
    customers: customers[]
    /** An aggregate relationship */
    customers_aggregate: customers_aggregate
    /** fetch data from the table: "customers" using primary key columns */
    customers_by_pk?: customers
    /** fetch data from the table: "customers_contact" */
    customers_contact: customers_contact[]
    /** fetch aggregated fields from the table: "customers_contact" */
    customers_contact_aggregate: customers_contact_aggregate
    /** fetch data from the table: "customers_contact" using primary key columns */
    customers_contact_by_pk?: customers_contact
    /** fetch data from the table: "feature_names" */
    feature_names: feature_names[]
    /** fetch aggregated fields from the table: "feature_names" */
    feature_names_aggregate: feature_names_aggregate
    /** fetch data from the table: "feature_names" using primary key columns */
    feature_names_by_pk?: feature_names
    /** An array relationship */
    features: features[]
    /** An aggregate relationship */
    features_aggregate: features_aggregate
    /** fetch data from the table: "features" using primary key columns */
    features_by_pk?: features
    /** fetch data from the table: "partners" */
    partners: partners[]
    /** fetch aggregated fields from the table: "partners" */
    partners_aggregate: partners_aggregate
    /** fetch data from the table: "partners" using primary key columns */
    partners_by_pk?: partners
    /** fetch data from the table: "roles" */
    roles: roles[]
    /** fetch aggregated fields from the table: "roles" */
    roles_aggregate: roles_aggregate
    /** fetch data from the table: "roles" using primary key columns */
    roles_by_pk?: roles
    /** fetch data from the table: "services" */
    services: services[]
    /** fetch aggregated fields from the table: "services" */
    services_aggregate: services_aggregate
    /** fetch data from the table: "services" using primary key columns */
    services_by_pk?: services
    /** fetch data from the table: "srv_names" */
    srv_names: srv_names[]
    /** fetch aggregated fields from the table: "srv_names" */
    srv_names_aggregate: srv_names_aggregate
    /** fetch data from the table: "srv_names" using primary key columns */
    srv_names_by_pk?: srv_names
    /** An array relationship */
    srv_urls: srv_urls[]
    /** An aggregate relationship */
    srv_urls_aggregate: srv_urls_aggregate
    /** fetch data from the table: "srv_urls" using primary key columns */
    srv_urls_by_pk?: srv_urls
    /** fetch data from the table: "status" */
    status: status[]
    /** fetch aggregated fields from the table: "status" */
    status_aggregate: status_aggregate
    /** fetch data from the table: "status" using primary key columns */
    status_by_pk?: status
    /** fetch data from the table: "sub_services" */
    sub_services: sub_services[]
    /** An aggregate relationship */
    sub_services_aggregate: sub_services_aggregate
    /** fetch data from the table: "sub_services" using primary key columns */
    sub_services_by_pk?: sub_services
    /** An array relationship */
    user_basic_data: user_basic_data[]
    /** An aggregate relationship */
    user_basic_data_aggregate: user_basic_data_aggregate
    /** fetch data from the table: "user_basic_data" using primary key columns */
    user_basic_data_by_pk?: user_basic_data
    /** An array relationship */
    users: users[]
    /** An aggregate relationship */
    users_aggregate: users_aggregate
    /** An array relationship */
    users_auth_logs: users_auth_logs[]
    /** An aggregate relationship */
    users_auth_logs_aggregate: users_auth_logs_aggregate
    /** fetch data from the table: "users_auth_logs" using primary key columns */
    users_auth_logs_by_pk?: users_auth_logs
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: users
    __typename: 'subscription_root'
}


/** columns and relationships of "user_basic_data" */
export interface user_basic_data {
    email: Scalars['bpchar']
    name: Scalars['bpchar']
    password: Scalars['bpchar']
    status: status_enum
    /** An object relationship */
    statusByStatus: status
    /** An object relationship */
    user: users
    user_id: Scalars['uuid']
    __typename: 'user_basic_data'
}


/** aggregated selection of "user_basic_data" */
export interface user_basic_data_aggregate {
    aggregate?: user_basic_data_aggregate_fields
    nodes: user_basic_data[]
    __typename: 'user_basic_data_aggregate'
}


/** aggregate fields of "user_basic_data" */
export interface user_basic_data_aggregate_fields {
    count: Scalars['Int']
    max?: user_basic_data_max_fields
    min?: user_basic_data_min_fields
    __typename: 'user_basic_data_aggregate_fields'
}


/** unique or primary key constraints on table "user_basic_data" */
export type user_basic_data_constraint = 'user_basic_data_pkey' | 'user_basic_data_user_id_key'


/** aggregate max on columns */
export interface user_basic_data_max_fields {
    email?: Scalars['bpchar']
    name?: Scalars['bpchar']
    password?: Scalars['bpchar']
    user_id?: Scalars['uuid']
    __typename: 'user_basic_data_max_fields'
}


/** aggregate min on columns */
export interface user_basic_data_min_fields {
    email?: Scalars['bpchar']
    name?: Scalars['bpchar']
    password?: Scalars['bpchar']
    user_id?: Scalars['uuid']
    __typename: 'user_basic_data_min_fields'
}


/** response of any mutation on the table "user_basic_data" */
export interface user_basic_data_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: user_basic_data[]
    __typename: 'user_basic_data_mutation_response'
}


/** select columns of table "user_basic_data" */
export type user_basic_data_select_column = 'email' | 'name' | 'password' | 'status' | 'user_id'


/** update columns of table "user_basic_data" */
export type user_basic_data_update_column = 'email' | 'name' | 'password' | 'status' | 'user_id'


/** columns and relationships of "users" */
export interface users {
    created_at?: Scalars['timestamptz']
    /** An array relationship */
    customer_user_services: customer_user_service[]
    /** An aggregate relationship */
    customer_user_services_aggregate: customer_user_service_aggregate
    /** An array relationship */
    customer_user_sub_services: customer_user_sub_service[]
    /** An aggregate relationship */
    customer_user_sub_services_aggregate: customer_user_sub_service_aggregate
    /** An array relationship */
    customer_users: customer_user[]
    /** An aggregate relationship */
    customer_users_aggregate: customer_user_aggregate
    id: Scalars['uuid']
    phone?: Scalars['String']
    role: roles_enum
    /** An object relationship */
    roleByRole: roles
    token?: Scalars['bpchar']
    updated_at?: Scalars['timestamptz']
    /** An object relationship */
    user_basic_data?: user_basic_data
    /** An object relationship */
    user_refresh_tokens?: blacklist_refresh_token
    /** An array relationship */
    users_auth_logs: users_auth_logs[]
    /** An aggregate relationship */
    users_auth_logs_aggregate: users_auth_logs_aggregate
    __typename: 'users'
}


/** aggregated selection of "users" */
export interface users_aggregate {
    aggregate?: users_aggregate_fields
    nodes: users[]
    __typename: 'users_aggregate'
}


/** aggregate fields of "users" */
export interface users_aggregate_fields {
    count: Scalars['Int']
    max?: users_max_fields
    min?: users_min_fields
    __typename: 'users_aggregate_fields'
}


/** columns and relationships of "users_auth_logs" */
export interface users_auth_logs {
    /** An object relationship */
    authMethodByAuthMethod: auth_methods
    auth_method: auth_methods_enum
    authenticated_at: Scalars['timestamptz']
    /** An object relationship */
    customer: customers
    customer_id: Scalars['uuid']
    id: Scalars['Int']
    /** An object relationship */
    user: users
    user_id: Scalars['uuid']
    __typename: 'users_auth_logs'
}


/** aggregated selection of "users_auth_logs" */
export interface users_auth_logs_aggregate {
    aggregate?: users_auth_logs_aggregate_fields
    nodes: users_auth_logs[]
    __typename: 'users_auth_logs_aggregate'
}


/** aggregate fields of "users_auth_logs" */
export interface users_auth_logs_aggregate_fields {
    avg?: users_auth_logs_avg_fields
    count: Scalars['Int']
    max?: users_auth_logs_max_fields
    min?: users_auth_logs_min_fields
    stddev?: users_auth_logs_stddev_fields
    stddev_pop?: users_auth_logs_stddev_pop_fields
    stddev_samp?: users_auth_logs_stddev_samp_fields
    sum?: users_auth_logs_sum_fields
    var_pop?: users_auth_logs_var_pop_fields
    var_samp?: users_auth_logs_var_samp_fields
    variance?: users_auth_logs_variance_fields
    __typename: 'users_auth_logs_aggregate_fields'
}


/** aggregate avg on columns */
export interface users_auth_logs_avg_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_avg_fields'
}


/** unique or primary key constraints on table "users_auth_logs" */
export type users_auth_logs_constraint = 'login_logs_pkey'


/** aggregate max on columns */
export interface users_auth_logs_max_fields {
    authenticated_at?: Scalars['timestamptz']
    customer_id?: Scalars['uuid']
    id?: Scalars['Int']
    user_id?: Scalars['uuid']
    __typename: 'users_auth_logs_max_fields'
}


/** aggregate min on columns */
export interface users_auth_logs_min_fields {
    authenticated_at?: Scalars['timestamptz']
    customer_id?: Scalars['uuid']
    id?: Scalars['Int']
    user_id?: Scalars['uuid']
    __typename: 'users_auth_logs_min_fields'
}


/** response of any mutation on the table "users_auth_logs" */
export interface users_auth_logs_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: users_auth_logs[]
    __typename: 'users_auth_logs_mutation_response'
}


/** select columns of table "users_auth_logs" */
export type users_auth_logs_select_column = 'auth_method' | 'authenticated_at' | 'customer_id' | 'id' | 'user_id'


/** aggregate stddev on columns */
export interface users_auth_logs_stddev_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface users_auth_logs_stddev_pop_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface users_auth_logs_stddev_samp_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface users_auth_logs_sum_fields {
    id?: Scalars['Int']
    __typename: 'users_auth_logs_sum_fields'
}


/** update columns of table "users_auth_logs" */
export type users_auth_logs_update_column = 'auth_method' | 'authenticated_at' | 'customer_id' | 'id' | 'user_id'


/** aggregate var_pop on columns */
export interface users_auth_logs_var_pop_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface users_auth_logs_var_samp_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_var_samp_fields'
}


/** aggregate variance on columns */
export interface users_auth_logs_variance_fields {
    id?: Scalars['Float']
    __typename: 'users_auth_logs_variance_fields'
}


/** unique or primary key constraints on table "users" */
export type users_constraint = 'phone_role' | 'users_id_key' | 'users_pkey' | 'users_token_key'


/** aggregate max on columns */
export interface users_max_fields {
    created_at?: Scalars['timestamptz']
    id?: Scalars['uuid']
    phone?: Scalars['String']
    token?: Scalars['bpchar']
    updated_at?: Scalars['timestamptz']
    __typename: 'users_max_fields'
}


/** aggregate min on columns */
export interface users_min_fields {
    created_at?: Scalars['timestamptz']
    id?: Scalars['uuid']
    phone?: Scalars['String']
    token?: Scalars['bpchar']
    updated_at?: Scalars['timestamptz']
    __typename: 'users_min_fields'
}


/** response of any mutation on the table "users" */
export interface users_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: users[]
    __typename: 'users_mutation_response'
}


/** select columns of table "users" */
export type users_select_column = 'created_at' | 'id' | 'phone' | 'role' | 'token' | 'updated_at'


/** update columns of table "users" */
export type users_update_column = 'created_at' | 'id' | 'phone' | 'role' | 'token' | 'updated_at'

export type Query = query_root
export type Mutation = mutation_root
export type Subscription = subscription_root

export interface InsertUserData {brukerBrukerNavn?: (Scalars['String'] | null),brukerRegion?: (Scalars['Int'] | null),customer_id?: (Scalars['uuid'] | null),email: Scalars['String'],name: Scalars['String'],password: Scalars['String'],phone: Scalars['String'],role?: (Scalars['String'] | null),token?: (Scalars['String'] | null)}

export interface InsertUserOrWarnIfExistsOutputRequest{
    affected_rows?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export interface Int_comparison_exp {_eq?: (Scalars['Int'] | null),_gt?: (Scalars['Int'] | null),_gte?: (Scalars['Int'] | null),_in?: (Scalars['Int'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['Int'] | null),_lte?: (Scalars['Int'] | null),_neq?: (Scalars['Int'] | null),_nin?: (Scalars['Int'][] | null)}

export interface ReturnAffectedItemIdRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReturnAffectedRowsRequest{
    affected_rows?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SigninOutputRequest{
    message?: boolean | number
    token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SinginOutputWithRefreshTokenRequest{
    message?: boolean | number
    refresh_token?: boolean | number
    token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export interface String_comparison_exp {_eq?: (Scalars['String'] | null),_gt?: (Scalars['String'] | null),_gte?: (Scalars['String'] | null),
/** does the column match the given case-insensitive pattern */
_ilike?: (Scalars['String'] | null),_in?: (Scalars['String'][] | null),
/** does the column match the given POSIX regular expression, case insensitive */
_iregex?: (Scalars['String'] | null),_is_null?: (Scalars['Boolean'] | null),
/** does the column match the given pattern */
_like?: (Scalars['String'] | null),_lt?: (Scalars['String'] | null),_lte?: (Scalars['String'] | null),_neq?: (Scalars['String'] | null),
/** does the column NOT match the given case-insensitive pattern */
_nilike?: (Scalars['String'] | null),_nin?: (Scalars['String'][] | null),
/** does the column NOT match the given POSIX regular expression, case insensitive */
_niregex?: (Scalars['String'] | null),
/** does the column NOT match the given pattern */
_nlike?: (Scalars['String'] | null),
/** does the column NOT match the given POSIX regular expression, case sensitive */
_nregex?: (Scalars['String'] | null),
/** does the column NOT match the given SQL regular expression */
_nsimilar?: (Scalars['String'] | null),
/** does the column match the given POSIX regular expression, case sensitive */
_regex?: (Scalars['String'] | null),
/** does the column match the given SQL regular expression */
_similar?: (Scalars['String'] | null)}

export interface UpdateUserOutputRequest{
    affected_rows?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "admins" */
export interface adminsRequest{
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logsRequest] | admins_auth_logsRequest
    /** An aggregate relationship */
    admins_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logs_aggregateRequest] | admins_auth_logs_aggregateRequest
    created_at?: boolean | number
    email?: boolean | number
    id?: boolean | number
    name?: boolean | number
    password?: boolean | number
    phone?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "admins" */
export interface admins_aggregateRequest{
    aggregate?: admins_aggregate_fieldsRequest
    nodes?: adminsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "admins" */
export interface admins_aggregate_fieldsRequest{
    count?: [{columns?: (admins_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: admins_max_fieldsRequest
    min?: admins_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "admins_auth_logs" */
export interface admins_auth_logsRequest{
    /** An object relationship */
    admin?: adminsRequest
    admin_id?: boolean | number
    authenticated_at?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "admins_auth_logs" */
export interface admins_auth_logs_aggregateRequest{
    aggregate?: admins_auth_logs_aggregate_fieldsRequest
    nodes?: admins_auth_logsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "admins_auth_logs" */
export interface admins_auth_logs_aggregate_fieldsRequest{
    avg?: admins_auth_logs_avg_fieldsRequest
    count?: [{columns?: (admins_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: admins_auth_logs_max_fieldsRequest
    min?: admins_auth_logs_min_fieldsRequest
    stddev?: admins_auth_logs_stddev_fieldsRequest
    stddev_pop?: admins_auth_logs_stddev_pop_fieldsRequest
    stddev_samp?: admins_auth_logs_stddev_samp_fieldsRequest
    sum?: admins_auth_logs_sum_fieldsRequest
    var_pop?: admins_auth_logs_var_pop_fieldsRequest
    var_samp?: admins_auth_logs_var_samp_fieldsRequest
    variance?: admins_auth_logs_variance_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "admins_auth_logs" */
export interface admins_auth_logs_aggregate_order_by {avg?: (admins_auth_logs_avg_order_by | null),count?: (order_by | null),max?: (admins_auth_logs_max_order_by | null),min?: (admins_auth_logs_min_order_by | null),stddev?: (admins_auth_logs_stddev_order_by | null),stddev_pop?: (admins_auth_logs_stddev_pop_order_by | null),stddev_samp?: (admins_auth_logs_stddev_samp_order_by | null),sum?: (admins_auth_logs_sum_order_by | null),var_pop?: (admins_auth_logs_var_pop_order_by | null),var_samp?: (admins_auth_logs_var_samp_order_by | null),variance?: (admins_auth_logs_variance_order_by | null)}


/** input type for inserting array relation for remote table "admins_auth_logs" */
export interface admins_auth_logs_arr_rel_insert_input {data: admins_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (admins_auth_logs_on_conflict | null)}


/** aggregate avg on columns */
export interface admins_auth_logs_avg_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_avg_order_by {id?: (order_by | null)}


/** Boolean expression to filter rows from the table "admins_auth_logs". All fields are combined with a logical 'AND'. */
export interface admins_auth_logs_bool_exp {_and?: (admins_auth_logs_bool_exp[] | null),_not?: (admins_auth_logs_bool_exp | null),_or?: (admins_auth_logs_bool_exp[] | null),admin?: (admins_bool_exp | null),admin_id?: (uuid_comparison_exp | null),authenticated_at?: (timestamptz_comparison_exp | null),id?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "admins_auth_logs" */
export interface admins_auth_logs_inc_input {id?: (Scalars['Int'] | null)}


/** input type for inserting data into table "admins_auth_logs" */
export interface admins_auth_logs_insert_input {admin?: (admins_obj_rel_insert_input | null),admin_id?: (Scalars['uuid'] | null),authenticated_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface admins_auth_logs_max_fieldsRequest{
    admin_id?: boolean | number
    authenticated_at?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_max_order_by {admin_id?: (order_by | null),authenticated_at?: (order_by | null),id?: (order_by | null)}


/** aggregate min on columns */
export interface admins_auth_logs_min_fieldsRequest{
    admin_id?: boolean | number
    authenticated_at?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_min_order_by {admin_id?: (order_by | null),authenticated_at?: (order_by | null),id?: (order_by | null)}


/** response of any mutation on the table "admins_auth_logs" */
export interface admins_auth_logs_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: admins_auth_logsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "admins_auth_logs" */
export interface admins_auth_logs_on_conflict {constraint: admins_auth_logs_constraint,update_columns: admins_auth_logs_update_column[],where?: (admins_auth_logs_bool_exp | null)}


/** Ordering options when selecting data from "admins_auth_logs". */
export interface admins_auth_logs_order_by {admin?: (admins_order_by | null),admin_id?: (order_by | null),authenticated_at?: (order_by | null),id?: (order_by | null)}


/** primary key columns input for table: admins_auth_logs */
export interface admins_auth_logs_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "admins_auth_logs" */
export interface admins_auth_logs_set_input {admin_id?: (Scalars['uuid'] | null),authenticated_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface admins_auth_logs_stddev_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_stddev_order_by {id?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface admins_auth_logs_stddev_pop_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_stddev_pop_order_by {id?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface admins_auth_logs_stddev_samp_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_stddev_samp_order_by {id?: (order_by | null)}


/** aggregate sum on columns */
export interface admins_auth_logs_sum_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_sum_order_by {id?: (order_by | null)}


/** aggregate var_pop on columns */
export interface admins_auth_logs_var_pop_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_var_pop_order_by {id?: (order_by | null)}


/** aggregate var_samp on columns */
export interface admins_auth_logs_var_samp_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_var_samp_order_by {id?: (order_by | null)}


/** aggregate variance on columns */
export interface admins_auth_logs_variance_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "admins_auth_logs" */
export interface admins_auth_logs_variance_order_by {id?: (order_by | null)}


/** Boolean expression to filter rows from the table "admins". All fields are combined with a logical 'AND'. */
export interface admins_bool_exp {_and?: (admins_bool_exp[] | null),_not?: (admins_bool_exp | null),_or?: (admins_bool_exp[] | null),admins_auth_logs?: (admins_auth_logs_bool_exp | null),created_at?: (timestamptz_comparison_exp | null),email?: (bpchar_comparison_exp | null),id?: (uuid_comparison_exp | null),name?: (bpchar_comparison_exp | null),password?: (bpchar_comparison_exp | null),phone?: (String_comparison_exp | null),updated_at?: (timestamptz_comparison_exp | null)}


/** input type for inserting data into table "admins" */
export interface admins_insert_input {admins_auth_logs?: (admins_auth_logs_arr_rel_insert_input | null),created_at?: (Scalars['timestamptz'] | null),email?: (Scalars['bpchar'] | null),id?: (Scalars['uuid'] | null),name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),phone?: (Scalars['String'] | null),updated_at?: (Scalars['timestamptz'] | null)}


/** aggregate max on columns */
export interface admins_max_fieldsRequest{
    created_at?: boolean | number
    email?: boolean | number
    id?: boolean | number
    name?: boolean | number
    password?: boolean | number
    phone?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface admins_min_fieldsRequest{
    created_at?: boolean | number
    email?: boolean | number
    id?: boolean | number
    name?: boolean | number
    password?: boolean | number
    phone?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "admins" */
export interface admins_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: adminsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "admins" */
export interface admins_obj_rel_insert_input {data: admins_insert_input,
/** on conflict condition */
on_conflict?: (admins_on_conflict | null)}


/** on conflict condition type for table "admins" */
export interface admins_on_conflict {constraint: admins_constraint,update_columns: admins_update_column[],where?: (admins_bool_exp | null)}


/** Ordering options when selecting data from "admins". */
export interface admins_order_by {admins_auth_logs_aggregate?: (admins_auth_logs_aggregate_order_by | null),created_at?: (order_by | null),email?: (order_by | null),id?: (order_by | null),name?: (order_by | null),password?: (order_by | null),phone?: (order_by | null),updated_at?: (order_by | null)}


/** primary key columns input for table: admins */
export interface admins_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "admins" */
export interface admins_set_input {created_at?: (Scalars['timestamptz'] | null),email?: (Scalars['bpchar'] | null),id?: (Scalars['uuid'] | null),name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),phone?: (Scalars['String'] | null),updated_at?: (Scalars['timestamptz'] | null)}


/** columns and relationships of "auth_methods" */
export interface auth_methodsRequest{
    comment?: boolean | number
    name?: boolean | number
    /** An array relationship */
    users_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logsRequest] | users_auth_logsRequest
    /** An aggregate relationship */
    users_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logs_aggregateRequest] | users_auth_logs_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "auth_methods" */
export interface auth_methods_aggregateRequest{
    aggregate?: auth_methods_aggregate_fieldsRequest
    nodes?: auth_methodsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "auth_methods" */
export interface auth_methods_aggregate_fieldsRequest{
    count?: [{columns?: (auth_methods_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: auth_methods_max_fieldsRequest
    min?: auth_methods_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "auth_methods". All fields are combined with a logical 'AND'. */
export interface auth_methods_bool_exp {_and?: (auth_methods_bool_exp[] | null),_not?: (auth_methods_bool_exp | null),_or?: (auth_methods_bool_exp[] | null),comment?: (String_comparison_exp | null),name?: (String_comparison_exp | null),users_auth_logs?: (users_auth_logs_bool_exp | null)}


/** Boolean expression to compare columns of type "auth_methods_enum". All fields are combined with logical 'AND'. */
export interface auth_methods_enum_comparison_exp {_eq?: (auth_methods_enum | null),_in?: (auth_methods_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (auth_methods_enum | null),_nin?: (auth_methods_enum[] | null)}


/** input type for inserting data into table "auth_methods" */
export interface auth_methods_insert_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null),users_auth_logs?: (users_auth_logs_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface auth_methods_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface auth_methods_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "auth_methods" */
export interface auth_methods_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: auth_methodsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "auth_methods" */
export interface auth_methods_obj_rel_insert_input {data: auth_methods_insert_input,
/** on conflict condition */
on_conflict?: (auth_methods_on_conflict | null)}


/** on conflict condition type for table "auth_methods" */
export interface auth_methods_on_conflict {constraint: auth_methods_constraint,update_columns: auth_methods_update_column[],where?: (auth_methods_bool_exp | null)}


/** Ordering options when selecting data from "auth_methods". */
export interface auth_methods_order_by {comment?: (order_by | null),name?: (order_by | null),users_auth_logs_aggregate?: (users_auth_logs_aggregate_order_by | null)}


/** primary key columns input for table: auth_methods */
export interface auth_methods_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "auth_methods" */
export interface auth_methods_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "blacklist_refresh_token" */
export interface blacklist_refresh_tokenRequest{
    sig?: boolean | number
    user_id?: boolean | number
    valid_till?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregateRequest{
    aggregate?: blacklist_refresh_token_aggregate_fieldsRequest
    nodes?: blacklist_refresh_tokenRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregate_fieldsRequest{
    count?: [{columns?: (blacklist_refresh_token_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: blacklist_refresh_token_max_fieldsRequest
    min?: blacklist_refresh_token_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "blacklist_refresh_token". All fields are combined with a logical 'AND'. */
export interface blacklist_refresh_token_bool_exp {_and?: (blacklist_refresh_token_bool_exp[] | null),_not?: (blacklist_refresh_token_bool_exp | null),_or?: (blacklist_refresh_token_bool_exp[] | null),sig?: (String_comparison_exp | null),user_id?: (uuid_comparison_exp | null),valid_till?: (timestamptz_comparison_exp | null)}


/** input type for inserting data into table "blacklist_refresh_token" */
export interface blacklist_refresh_token_insert_input {sig?: (Scalars['String'] | null),user_id?: (Scalars['uuid'] | null),valid_till?: (Scalars['timestamptz'] | null)}


/** aggregate max on columns */
export interface blacklist_refresh_token_max_fieldsRequest{
    sig?: boolean | number
    user_id?: boolean | number
    valid_till?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface blacklist_refresh_token_min_fieldsRequest{
    sig?: boolean | number
    user_id?: boolean | number
    valid_till?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "blacklist_refresh_token" */
export interface blacklist_refresh_token_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: blacklist_refresh_tokenRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "blacklist_refresh_token" */
export interface blacklist_refresh_token_obj_rel_insert_input {data: blacklist_refresh_token_insert_input,
/** on conflict condition */
on_conflict?: (blacklist_refresh_token_on_conflict | null)}


/** on conflict condition type for table "blacklist_refresh_token" */
export interface blacklist_refresh_token_on_conflict {constraint: blacklist_refresh_token_constraint,update_columns: blacklist_refresh_token_update_column[],where?: (blacklist_refresh_token_bool_exp | null)}


/** Ordering options when selecting data from "blacklist_refresh_token". */
export interface blacklist_refresh_token_order_by {sig?: (order_by | null),user_id?: (order_by | null),valid_till?: (order_by | null)}


/** primary key columns input for table: blacklist_refresh_token */
export interface blacklist_refresh_token_pk_columns_input {sig: Scalars['String']}


/** input type for updating data in table "blacklist_refresh_token" */
export interface blacklist_refresh_token_set_input {sig?: (Scalars['String'] | null),user_id?: (Scalars['uuid'] | null),valid_till?: (Scalars['timestamptz'] | null)}


/** Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'. */
export interface bpchar_comparison_exp {_eq?: (Scalars['bpchar'] | null),_gt?: (Scalars['bpchar'] | null),_gte?: (Scalars['bpchar'] | null),
/** does the column match the given case-insensitive pattern */
_ilike?: (Scalars['bpchar'] | null),_in?: (Scalars['bpchar'][] | null),
/** does the column match the given POSIX regular expression, case insensitive */
_iregex?: (Scalars['bpchar'] | null),_is_null?: (Scalars['Boolean'] | null),
/** does the column match the given pattern */
_like?: (Scalars['bpchar'] | null),_lt?: (Scalars['bpchar'] | null),_lte?: (Scalars['bpchar'] | null),_neq?: (Scalars['bpchar'] | null),
/** does the column NOT match the given case-insensitive pattern */
_nilike?: (Scalars['bpchar'] | null),_nin?: (Scalars['bpchar'][] | null),
/** does the column NOT match the given POSIX regular expression, case insensitive */
_niregex?: (Scalars['bpchar'] | null),
/** does the column NOT match the given pattern */
_nlike?: (Scalars['bpchar'] | null),
/** does the column NOT match the given POSIX regular expression, case sensitive */
_nregex?: (Scalars['bpchar'] | null),
/** does the column NOT match the given SQL regular expression */
_nsimilar?: (Scalars['bpchar'] | null),
/** does the column match the given POSIX regular expression, case sensitive */
_regex?: (Scalars['bpchar'] | null),
/** does the column match the given SQL regular expression */
_similar?: (Scalars['bpchar'] | null)}


/** columns and relationships of "connectors" */
export interface connectorsRequest{
    comment?: boolean | number
    /** An array relationship */
    customers?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customersRequest] | customersRequest
    /** An aggregate relationship */
    customers_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customers_aggregateRequest] | customers_aggregateRequest
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "connectors" */
export interface connectors_aggregateRequest{
    aggregate?: connectors_aggregate_fieldsRequest
    nodes?: connectorsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "connectors" */
export interface connectors_aggregate_fieldsRequest{
    count?: [{columns?: (connectors_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: connectors_max_fieldsRequest
    min?: connectors_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "connectors". All fields are combined with a logical 'AND'. */
export interface connectors_bool_exp {_and?: (connectors_bool_exp[] | null),_not?: (connectors_bool_exp | null),_or?: (connectors_bool_exp[] | null),comment?: (String_comparison_exp | null),customers?: (customers_bool_exp | null),name?: (String_comparison_exp | null)}


/** Boolean expression to compare columns of type "connectors_enum". All fields are combined with logical 'AND'. */
export interface connectors_enum_comparison_exp {_eq?: (connectors_enum | null),_in?: (connectors_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (connectors_enum | null),_nin?: (connectors_enum[] | null)}


/** input type for inserting data into table "connectors" */
export interface connectors_insert_input {comment?: (Scalars['String'] | null),customers?: (customers_arr_rel_insert_input | null),name?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface connectors_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface connectors_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "connectors" */
export interface connectors_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: connectorsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "connectors" */
export interface connectors_obj_rel_insert_input {data: connectors_insert_input,
/** on conflict condition */
on_conflict?: (connectors_on_conflict | null)}


/** on conflict condition type for table "connectors" */
export interface connectors_on_conflict {constraint: connectors_constraint,update_columns: connectors_update_column[],where?: (connectors_bool_exp | null)}


/** Ordering options when selecting data from "connectors". */
export interface connectors_order_by {comment?: (order_by | null),customers_aggregate?: (customers_aggregate_order_by | null),name?: (order_by | null)}


/** primary key columns input for table: connectors */
export interface connectors_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "connectors" */
export interface connectors_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "customer_user" */
export interface customer_userRequest{
    brukerBrukerNavn?: boolean | number
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    region?: boolean | number
    /** An object relationship */
    user?: usersRequest
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "customer_user" */
export interface customer_user_aggregateRequest{
    aggregate?: customer_user_aggregate_fieldsRequest
    nodes?: customer_userRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "customer_user" */
export interface customer_user_aggregate_fieldsRequest{
    avg?: customer_user_avg_fieldsRequest
    count?: [{columns?: (customer_user_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: customer_user_max_fieldsRequest
    min?: customer_user_min_fieldsRequest
    stddev?: customer_user_stddev_fieldsRequest
    stddev_pop?: customer_user_stddev_pop_fieldsRequest
    stddev_samp?: customer_user_stddev_samp_fieldsRequest
    sum?: customer_user_sum_fieldsRequest
    var_pop?: customer_user_var_pop_fieldsRequest
    var_samp?: customer_user_var_samp_fieldsRequest
    variance?: customer_user_variance_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "customer_user" */
export interface customer_user_aggregate_order_by {avg?: (customer_user_avg_order_by | null),count?: (order_by | null),max?: (customer_user_max_order_by | null),min?: (customer_user_min_order_by | null),stddev?: (customer_user_stddev_order_by | null),stddev_pop?: (customer_user_stddev_pop_order_by | null),stddev_samp?: (customer_user_stddev_samp_order_by | null),sum?: (customer_user_sum_order_by | null),var_pop?: (customer_user_var_pop_order_by | null),var_samp?: (customer_user_var_samp_order_by | null),variance?: (customer_user_variance_order_by | null)}


/** input type for inserting array relation for remote table "customer_user" */
export interface customer_user_arr_rel_insert_input {data: customer_user_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_on_conflict | null)}


/** aggregate avg on columns */
export interface customer_user_avg_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "customer_user" */
export interface customer_user_avg_order_by {region?: (order_by | null)}


/** Boolean expression to filter rows from the table "customer_user". All fields are combined with a logical 'AND'. */
export interface customer_user_bool_exp {_and?: (customer_user_bool_exp[] | null),_not?: (customer_user_bool_exp | null),_or?: (customer_user_bool_exp[] | null),brukerBrukerNavn?: (String_comparison_exp | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),region?: (Int_comparison_exp | null),user?: (users_bool_exp | null),user_id?: (uuid_comparison_exp | null)}


/** input type for incrementing numeric columns in table "customer_user" */
export interface customer_user_inc_input {region?: (Scalars['Int'] | null)}


/** input type for inserting data into table "customer_user" */
export interface customer_user_insert_input {brukerBrukerNavn?: (Scalars['String'] | null),customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),region?: (Scalars['Int'] | null),user?: (users_obj_rel_insert_input | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate max on columns */
export interface customer_user_max_fieldsRequest{
    brukerBrukerNavn?: boolean | number
    customer_id?: boolean | number
    region?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "customer_user" */
export interface customer_user_max_order_by {brukerBrukerNavn?: (order_by | null),customer_id?: (order_by | null),region?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface customer_user_min_fieldsRequest{
    brukerBrukerNavn?: boolean | number
    customer_id?: boolean | number
    region?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "customer_user" */
export interface customer_user_min_order_by {brukerBrukerNavn?: (order_by | null),customer_id?: (order_by | null),region?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "customer_user" */
export interface customer_user_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: customer_userRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "customer_user" */
export interface customer_user_on_conflict {constraint: customer_user_constraint,update_columns: customer_user_update_column[],where?: (customer_user_bool_exp | null)}


/** Ordering options when selecting data from "customer_user". */
export interface customer_user_order_by {brukerBrukerNavn?: (order_by | null),customer?: (customers_order_by | null),customer_id?: (order_by | null),region?: (order_by | null),user?: (users_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: customer_user */
export interface customer_user_pk_columns_input {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}


/** columns and relationships of "customer_user_service" */
export interface customer_user_serviceRequest{
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    service?: boolean | number
    /** An object relationship */
    serviceByService?: servicesRequest
    /** An object relationship */
    user?: usersRequest
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "customer_user_service" */
export interface customer_user_service_aggregateRequest{
    aggregate?: customer_user_service_aggregate_fieldsRequest
    nodes?: customer_user_serviceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "customer_user_service" */
export interface customer_user_service_aggregate_fieldsRequest{
    count?: [{columns?: (customer_user_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: customer_user_service_max_fieldsRequest
    min?: customer_user_service_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "customer_user_service" */
export interface customer_user_service_aggregate_order_by {count?: (order_by | null),max?: (customer_user_service_max_order_by | null),min?: (customer_user_service_min_order_by | null)}


/** input type for inserting array relation for remote table "customer_user_service" */
export interface customer_user_service_arr_rel_insert_input {data: customer_user_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_service_on_conflict | null)}


/** Boolean expression to filter rows from the table "customer_user_service". All fields are combined with a logical 'AND'. */
export interface customer_user_service_bool_exp {_and?: (customer_user_service_bool_exp[] | null),_not?: (customer_user_service_bool_exp | null),_or?: (customer_user_service_bool_exp[] | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),service?: (services_enum_comparison_exp | null),serviceByService?: (services_bool_exp | null),user?: (users_bool_exp | null),user_id?: (uuid_comparison_exp | null)}


/** input type for inserting data into table "customer_user_service" */
export interface customer_user_service_insert_input {customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),service?: (services_enum | null),serviceByService?: (services_obj_rel_insert_input | null),user?: (users_obj_rel_insert_input | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate max on columns */
export interface customer_user_service_max_fieldsRequest{
    customer_id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "customer_user_service" */
export interface customer_user_service_max_order_by {customer_id?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface customer_user_service_min_fieldsRequest{
    customer_id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "customer_user_service" */
export interface customer_user_service_min_order_by {customer_id?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "customer_user_service" */
export interface customer_user_service_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: customer_user_serviceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "customer_user_service" */
export interface customer_user_service_on_conflict {constraint: customer_user_service_constraint,update_columns: customer_user_service_update_column[],where?: (customer_user_service_bool_exp | null)}


/** Ordering options when selecting data from "customer_user_service". */
export interface customer_user_service_order_by {customer?: (customers_order_by | null),customer_id?: (order_by | null),service?: (order_by | null),serviceByService?: (services_order_by | null),user?: (users_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: customer_user_service */
export interface customer_user_service_pk_columns_input {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}


/** input type for updating data in table "customer_user_service" */
export interface customer_user_service_set_input {customer_id?: (Scalars['uuid'] | null),service?: (services_enum | null),user_id?: (Scalars['uuid'] | null)}


/** input type for updating data in table "customer_user" */
export interface customer_user_set_input {brukerBrukerNavn?: (Scalars['String'] | null),customer_id?: (Scalars['uuid'] | null),region?: (Scalars['Int'] | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate stddev on columns */
export interface customer_user_stddev_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "customer_user" */
export interface customer_user_stddev_order_by {region?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface customer_user_stddev_pop_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "customer_user" */
export interface customer_user_stddev_pop_order_by {region?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface customer_user_stddev_samp_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "customer_user" */
export interface customer_user_stddev_samp_order_by {region?: (order_by | null)}


/** columns and relationships of "customer_user_sub_service" */
export interface customer_user_sub_serviceRequest{
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    service?: boolean | number
    /** An object relationship */
    serviceByService?: servicesRequest
    /** An object relationship */
    subServiceByServiceSubService?: sub_servicesRequest
    /** An object relationship */
    subServiceBySubService?: sub_servicesRequest
    sub_service?: boolean | number
    /** An object relationship */
    user?: usersRequest
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregateRequest{
    aggregate?: customer_user_sub_service_aggregate_fieldsRequest
    nodes?: customer_user_sub_serviceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate_fieldsRequest{
    count?: [{columns?: (customer_user_sub_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: customer_user_sub_service_max_fieldsRequest
    min?: customer_user_sub_service_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate_order_by {count?: (order_by | null),max?: (customer_user_sub_service_max_order_by | null),min?: (customer_user_sub_service_min_order_by | null)}


/** input type for inserting array relation for remote table "customer_user_sub_service" */
export interface customer_user_sub_service_arr_rel_insert_input {data: customer_user_sub_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_sub_service_on_conflict | null)}


/** Boolean expression to filter rows from the table "customer_user_sub_service". All fields are combined with a logical 'AND'. */
export interface customer_user_sub_service_bool_exp {_and?: (customer_user_sub_service_bool_exp[] | null),_not?: (customer_user_sub_service_bool_exp | null),_or?: (customer_user_sub_service_bool_exp[] | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),service?: (services_enum_comparison_exp | null),serviceByService?: (services_bool_exp | null),subServiceByServiceSubService?: (sub_services_bool_exp | null),subServiceBySubService?: (sub_services_bool_exp | null),sub_service?: (String_comparison_exp | null),user?: (users_bool_exp | null),user_id?: (uuid_comparison_exp | null)}


/** input type for inserting data into table "customer_user_sub_service" */
export interface customer_user_sub_service_insert_input {customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),service?: (services_enum | null),serviceByService?: (services_obj_rel_insert_input | null),subServiceByServiceSubService?: (sub_services_obj_rel_insert_input | null),subServiceBySubService?: (sub_services_obj_rel_insert_input | null),sub_service?: (Scalars['String'] | null),user?: (users_obj_rel_insert_input | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate max on columns */
export interface customer_user_sub_service_max_fieldsRequest{
    customer_id?: boolean | number
    sub_service?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "customer_user_sub_service" */
export interface customer_user_sub_service_max_order_by {customer_id?: (order_by | null),sub_service?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface customer_user_sub_service_min_fieldsRequest{
    customer_id?: boolean | number
    sub_service?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "customer_user_sub_service" */
export interface customer_user_sub_service_min_order_by {customer_id?: (order_by | null),sub_service?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "customer_user_sub_service" */
export interface customer_user_sub_service_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: customer_user_sub_serviceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "customer_user_sub_service" */
export interface customer_user_sub_service_on_conflict {constraint: customer_user_sub_service_constraint,update_columns: customer_user_sub_service_update_column[],where?: (customer_user_sub_service_bool_exp | null)}


/** Ordering options when selecting data from "customer_user_sub_service". */
export interface customer_user_sub_service_order_by {customer?: (customers_order_by | null),customer_id?: (order_by | null),service?: (order_by | null),serviceByService?: (services_order_by | null),subServiceByServiceSubService?: (sub_services_order_by | null),subServiceBySubService?: (sub_services_order_by | null),sub_service?: (order_by | null),user?: (users_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: customer_user_sub_service */
export interface customer_user_sub_service_pk_columns_input {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}


/** input type for updating data in table "customer_user_sub_service" */
export interface customer_user_sub_service_set_input {customer_id?: (Scalars['uuid'] | null),service?: (services_enum | null),sub_service?: (Scalars['String'] | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate sum on columns */
export interface customer_user_sum_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "customer_user" */
export interface customer_user_sum_order_by {region?: (order_by | null)}


/** aggregate var_pop on columns */
export interface customer_user_var_pop_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "customer_user" */
export interface customer_user_var_pop_order_by {region?: (order_by | null)}


/** aggregate var_samp on columns */
export interface customer_user_var_samp_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "customer_user" */
export interface customer_user_var_samp_order_by {region?: (order_by | null)}


/** aggregate variance on columns */
export interface customer_user_variance_fieldsRequest{
    region?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "customer_user" */
export interface customer_user_variance_order_by {region?: (order_by | null)}


/** columns and relationships of "customers" */
export interface customersRequest{
    conn_string?: boolean | number
    connector?: boolean | number
    /** An object relationship */
    connectorByConnector?: connectorsRequest
    created_at?: boolean | number
    /** An array relationship */
    customer_srv_urls?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urlsRequest] | srv_urlsRequest
    /** An aggregate relationship */
    customer_srv_urls_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urls_aggregateRequest] | srv_urls_aggregateRequest
    /** An array relationship */
    customer_user_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_serviceRequest] | customer_user_serviceRequest
    /** An aggregate relationship */
    customer_user_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_service_aggregateRequest] | customer_user_service_aggregateRequest
    /** An array relationship */
    customer_user_sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** An aggregate relationship */
    customer_user_sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    /** An array relationship */
    customer_users?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_userRequest] | customer_userRequest
    /** An aggregate relationship */
    customer_users_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_user_aggregateRequest] | customer_user_aggregateRequest
    /** An object relationship */
    customers_contact?: customers_contactRequest
    deleted_at?: boolean | number
    /** An array relationship */
    features?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},featuresRequest] | featuresRequest
    /** An aggregate relationship */
    features_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},features_aggregateRequest] | features_aggregateRequest
    id?: boolean | number
    name?: boolean | number
    org_nr?: boolean | number
    /** An object relationship */
    partner?: partnersRequest
    partner_id?: boolean | number
    refresh_token_validity?: boolean | number
    status?: boolean | number
    /** An object relationship */
    statusByStatus?: statusRequest
    updated_at?: boolean | number
    /** An array relationship */
    users_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logsRequest] | users_auth_logsRequest
    /** An aggregate relationship */
    users_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logs_aggregateRequest] | users_auth_logs_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "customers" */
export interface customers_aggregateRequest{
    aggregate?: customers_aggregate_fieldsRequest
    nodes?: customersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "customers" */
export interface customers_aggregate_fieldsRequest{
    avg?: customers_avg_fieldsRequest
    count?: [{columns?: (customers_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: customers_max_fieldsRequest
    min?: customers_min_fieldsRequest
    stddev?: customers_stddev_fieldsRequest
    stddev_pop?: customers_stddev_pop_fieldsRequest
    stddev_samp?: customers_stddev_samp_fieldsRequest
    sum?: customers_sum_fieldsRequest
    var_pop?: customers_var_pop_fieldsRequest
    var_samp?: customers_var_samp_fieldsRequest
    variance?: customers_variance_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "customers" */
export interface customers_aggregate_order_by {avg?: (customers_avg_order_by | null),count?: (order_by | null),max?: (customers_max_order_by | null),min?: (customers_min_order_by | null),stddev?: (customers_stddev_order_by | null),stddev_pop?: (customers_stddev_pop_order_by | null),stddev_samp?: (customers_stddev_samp_order_by | null),sum?: (customers_sum_order_by | null),var_pop?: (customers_var_pop_order_by | null),var_samp?: (customers_var_samp_order_by | null),variance?: (customers_variance_order_by | null)}


/** input type for inserting array relation for remote table "customers" */
export interface customers_arr_rel_insert_input {data: customers_insert_input[],
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}


/** aggregate avg on columns */
export interface customers_avg_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "customers" */
export interface customers_avg_order_by {refresh_token_validity?: (order_by | null)}


/** Boolean expression to filter rows from the table "customers". All fields are combined with a logical 'AND'. */
export interface customers_bool_exp {_and?: (customers_bool_exp[] | null),_not?: (customers_bool_exp | null),_or?: (customers_bool_exp[] | null),conn_string?: (String_comparison_exp | null),connector?: (connectors_enum_comparison_exp | null),connectorByConnector?: (connectors_bool_exp | null),created_at?: (timestamptz_comparison_exp | null),customer_srv_urls?: (srv_urls_bool_exp | null),customer_user_services?: (customer_user_service_bool_exp | null),customer_user_sub_services?: (customer_user_sub_service_bool_exp | null),customer_users?: (customer_user_bool_exp | null),customers_contact?: (customers_contact_bool_exp | null),deleted_at?: (timestamptz_comparison_exp | null),features?: (features_bool_exp | null),id?: (uuid_comparison_exp | null),name?: (String_comparison_exp | null),org_nr?: (String_comparison_exp | null),partner?: (partners_bool_exp | null),partner_id?: (uuid_comparison_exp | null),refresh_token_validity?: (Int_comparison_exp | null),status?: (status_enum_comparison_exp | null),statusByStatus?: (status_bool_exp | null),updated_at?: (timestamptz_comparison_exp | null),users_auth_logs?: (users_auth_logs_bool_exp | null)}


/** columns and relationships of "customers_contact" */
export interface customers_contactRequest{
    comm_consents_descr?: boolean | number
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    email?: boolean | number
    logo?: boolean | number
    message?: boolean | number
    tel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "customers_contact" */
export interface customers_contact_aggregateRequest{
    aggregate?: customers_contact_aggregate_fieldsRequest
    nodes?: customers_contactRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "customers_contact" */
export interface customers_contact_aggregate_fieldsRequest{
    count?: [{columns?: (customers_contact_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: customers_contact_max_fieldsRequest
    min?: customers_contact_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "customers_contact". All fields are combined with a logical 'AND'. */
export interface customers_contact_bool_exp {_and?: (customers_contact_bool_exp[] | null),_not?: (customers_contact_bool_exp | null),_or?: (customers_contact_bool_exp[] | null),comm_consents_descr?: (String_comparison_exp | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),email?: (String_comparison_exp | null),logo?: (String_comparison_exp | null),message?: (String_comparison_exp | null),tel?: (String_comparison_exp | null)}


/** input type for inserting data into table "customers_contact" */
export interface customers_contact_insert_input {comm_consents_descr?: (Scalars['String'] | null),customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),email?: (Scalars['String'] | null),logo?: (Scalars['String'] | null),message?: (Scalars['String'] | null),tel?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface customers_contact_max_fieldsRequest{
    comm_consents_descr?: boolean | number
    customer_id?: boolean | number
    email?: boolean | number
    logo?: boolean | number
    message?: boolean | number
    tel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface customers_contact_min_fieldsRequest{
    comm_consents_descr?: boolean | number
    customer_id?: boolean | number
    email?: boolean | number
    logo?: boolean | number
    message?: boolean | number
    tel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "customers_contact" */
export interface customers_contact_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: customers_contactRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "customers_contact" */
export interface customers_contact_obj_rel_insert_input {data: customers_contact_insert_input,
/** on conflict condition */
on_conflict?: (customers_contact_on_conflict | null)}


/** on conflict condition type for table "customers_contact" */
export interface customers_contact_on_conflict {constraint: customers_contact_constraint,update_columns: customers_contact_update_column[],where?: (customers_contact_bool_exp | null)}


/** Ordering options when selecting data from "customers_contact". */
export interface customers_contact_order_by {comm_consents_descr?: (order_by | null),customer?: (customers_order_by | null),customer_id?: (order_by | null),email?: (order_by | null),logo?: (order_by | null),message?: (order_by | null),tel?: (order_by | null)}


/** primary key columns input for table: customers_contact */
export interface customers_contact_pk_columns_input {customer_id: Scalars['uuid']}


/** input type for updating data in table "customers_contact" */
export interface customers_contact_set_input {comm_consents_descr?: (Scalars['String'] | null),customer_id?: (Scalars['uuid'] | null),email?: (Scalars['String'] | null),logo?: (Scalars['String'] | null),message?: (Scalars['String'] | null),tel?: (Scalars['String'] | null)}


/** input type for incrementing numeric columns in table "customers" */
export interface customers_inc_input {refresh_token_validity?: (Scalars['Int'] | null)}


/** input type for inserting data into table "customers" */
export interface customers_insert_input {conn_string?: (Scalars['String'] | null),connector?: (connectors_enum | null),connectorByConnector?: (connectors_obj_rel_insert_input | null),created_at?: (Scalars['timestamptz'] | null),customer_srv_urls?: (srv_urls_arr_rel_insert_input | null),customer_user_services?: (customer_user_service_arr_rel_insert_input | null),customer_user_sub_services?: (customer_user_sub_service_arr_rel_insert_input | null),customer_users?: (customer_user_arr_rel_insert_input | null),customers_contact?: (customers_contact_obj_rel_insert_input | null),deleted_at?: (Scalars['timestamptz'] | null),features?: (features_arr_rel_insert_input | null),id?: (Scalars['uuid'] | null),name?: (Scalars['String'] | null),org_nr?: (Scalars['String'] | null),partner?: (partners_obj_rel_insert_input | null),partner_id?: (Scalars['uuid'] | null),refresh_token_validity?: (Scalars['Int'] | null),status?: (status_enum | null),statusByStatus?: (status_obj_rel_insert_input | null),updated_at?: (Scalars['timestamptz'] | null),users_auth_logs?: (users_auth_logs_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface customers_max_fieldsRequest{
    conn_string?: boolean | number
    created_at?: boolean | number
    deleted_at?: boolean | number
    id?: boolean | number
    name?: boolean | number
    org_nr?: boolean | number
    partner_id?: boolean | number
    refresh_token_validity?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "customers" */
export interface customers_max_order_by {conn_string?: (order_by | null),created_at?: (order_by | null),deleted_at?: (order_by | null),id?: (order_by | null),name?: (order_by | null),org_nr?: (order_by | null),partner_id?: (order_by | null),refresh_token_validity?: (order_by | null),updated_at?: (order_by | null)}


/** aggregate min on columns */
export interface customers_min_fieldsRequest{
    conn_string?: boolean | number
    created_at?: boolean | number
    deleted_at?: boolean | number
    id?: boolean | number
    name?: boolean | number
    org_nr?: boolean | number
    partner_id?: boolean | number
    refresh_token_validity?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "customers" */
export interface customers_min_order_by {conn_string?: (order_by | null),created_at?: (order_by | null),deleted_at?: (order_by | null),id?: (order_by | null),name?: (order_by | null),org_nr?: (order_by | null),partner_id?: (order_by | null),refresh_token_validity?: (order_by | null),updated_at?: (order_by | null)}


/** response of any mutation on the table "customers" */
export interface customers_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: customersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "customers" */
export interface customers_obj_rel_insert_input {data: customers_insert_input,
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}


/** on conflict condition type for table "customers" */
export interface customers_on_conflict {constraint: customers_constraint,update_columns: customers_update_column[],where?: (customers_bool_exp | null)}


/** Ordering options when selecting data from "customers". */
export interface customers_order_by {conn_string?: (order_by | null),connector?: (order_by | null),connectorByConnector?: (connectors_order_by | null),created_at?: (order_by | null),customer_srv_urls_aggregate?: (srv_urls_aggregate_order_by | null),customer_user_services_aggregate?: (customer_user_service_aggregate_order_by | null),customer_user_sub_services_aggregate?: (customer_user_sub_service_aggregate_order_by | null),customer_users_aggregate?: (customer_user_aggregate_order_by | null),customers_contact?: (customers_contact_order_by | null),deleted_at?: (order_by | null),features_aggregate?: (features_aggregate_order_by | null),id?: (order_by | null),name?: (order_by | null),org_nr?: (order_by | null),partner?: (partners_order_by | null),partner_id?: (order_by | null),refresh_token_validity?: (order_by | null),status?: (order_by | null),statusByStatus?: (status_order_by | null),updated_at?: (order_by | null),users_auth_logs_aggregate?: (users_auth_logs_aggregate_order_by | null)}


/** primary key columns input for table: customers */
export interface customers_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "customers" */
export interface customers_set_input {conn_string?: (Scalars['String'] | null),connector?: (connectors_enum | null),created_at?: (Scalars['timestamptz'] | null),deleted_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),name?: (Scalars['String'] | null),org_nr?: (Scalars['String'] | null),partner_id?: (Scalars['uuid'] | null),refresh_token_validity?: (Scalars['Int'] | null),status?: (status_enum | null),updated_at?: (Scalars['timestamptz'] | null)}


/** aggregate stddev on columns */
export interface customers_stddev_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "customers" */
export interface customers_stddev_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface customers_stddev_pop_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "customers" */
export interface customers_stddev_pop_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface customers_stddev_samp_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "customers" */
export interface customers_stddev_samp_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate sum on columns */
export interface customers_sum_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "customers" */
export interface customers_sum_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate var_pop on columns */
export interface customers_var_pop_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "customers" */
export interface customers_var_pop_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate var_samp on columns */
export interface customers_var_samp_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "customers" */
export interface customers_var_samp_order_by {refresh_token_validity?: (order_by | null)}


/** aggregate variance on columns */
export interface customers_variance_fieldsRequest{
    refresh_token_validity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "customers" */
export interface customers_variance_order_by {refresh_token_validity?: (order_by | null)}


/** columns and relationships of "feature_names" */
export interface feature_namesRequest{
    description?: boolean | number
    /** An array relationship */
    features?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},featuresRequest] | featuresRequest
    /** An aggregate relationship */
    features_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},features_aggregateRequest] | features_aggregateRequest
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "feature_names" */
export interface feature_names_aggregateRequest{
    aggregate?: feature_names_aggregate_fieldsRequest
    nodes?: feature_namesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "feature_names" */
export interface feature_names_aggregate_fieldsRequest{
    count?: [{columns?: (feature_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: feature_names_max_fieldsRequest
    min?: feature_names_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "feature_names". All fields are combined with a logical 'AND'. */
export interface feature_names_bool_exp {_and?: (feature_names_bool_exp[] | null),_not?: (feature_names_bool_exp | null),_or?: (feature_names_bool_exp[] | null),description?: (String_comparison_exp | null),features?: (features_bool_exp | null),name?: (String_comparison_exp | null)}


/** Boolean expression to compare columns of type "feature_names_enum". All fields are combined with logical 'AND'. */
export interface feature_names_enum_comparison_exp {_eq?: (feature_names_enum | null),_in?: (feature_names_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (feature_names_enum | null),_nin?: (feature_names_enum[] | null)}


/** input type for inserting data into table "feature_names" */
export interface feature_names_insert_input {description?: (Scalars['String'] | null),features?: (features_arr_rel_insert_input | null),name?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface feature_names_max_fieldsRequest{
    description?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface feature_names_min_fieldsRequest{
    description?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "feature_names" */
export interface feature_names_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: feature_namesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "feature_names" */
export interface feature_names_obj_rel_insert_input {data: feature_names_insert_input,
/** on conflict condition */
on_conflict?: (feature_names_on_conflict | null)}


/** on conflict condition type for table "feature_names" */
export interface feature_names_on_conflict {constraint: feature_names_constraint,update_columns: feature_names_update_column[],where?: (feature_names_bool_exp | null)}


/** Ordering options when selecting data from "feature_names". */
export interface feature_names_order_by {description?: (order_by | null),features_aggregate?: (features_aggregate_order_by | null),name?: (order_by | null)}


/** primary key columns input for table: feature_names */
export interface feature_names_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "feature_names" */
export interface feature_names_set_input {description?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "features" */
export interface featuresRequest{
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    /** An object relationship */
    feature_name?: feature_namesRequest
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "features" */
export interface features_aggregateRequest{
    aggregate?: features_aggregate_fieldsRequest
    nodes?: featuresRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "features" */
export interface features_aggregate_fieldsRequest{
    count?: [{columns?: (features_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: features_max_fieldsRequest
    min?: features_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "features" */
export interface features_aggregate_order_by {count?: (order_by | null),max?: (features_max_order_by | null),min?: (features_min_order_by | null)}


/** input type for inserting array relation for remote table "features" */
export interface features_arr_rel_insert_input {data: features_insert_input[],
/** on conflict condition */
on_conflict?: (features_on_conflict | null)}


/** Boolean expression to filter rows from the table "features". All fields are combined with a logical 'AND'. */
export interface features_bool_exp {_and?: (features_bool_exp[] | null),_not?: (features_bool_exp | null),_or?: (features_bool_exp[] | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),feature_name?: (feature_names_bool_exp | null),name?: (feature_names_enum_comparison_exp | null)}


/** input type for inserting data into table "features" */
export interface features_insert_input {customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),feature_name?: (feature_names_obj_rel_insert_input | null),name?: (feature_names_enum | null)}


/** aggregate max on columns */
export interface features_max_fieldsRequest{
    customer_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "features" */
export interface features_max_order_by {customer_id?: (order_by | null)}


/** aggregate min on columns */
export interface features_min_fieldsRequest{
    customer_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "features" */
export interface features_min_order_by {customer_id?: (order_by | null)}


/** response of any mutation on the table "features" */
export interface features_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: featuresRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "features" */
export interface features_on_conflict {constraint: features_constraint,update_columns: features_update_column[],where?: (features_bool_exp | null)}


/** Ordering options when selecting data from "features". */
export interface features_order_by {customer?: (customers_order_by | null),customer_id?: (order_by | null),feature_name?: (feature_names_order_by | null),name?: (order_by | null)}


/** primary key columns input for table: features */
export interface features_pk_columns_input {customer_id: Scalars['uuid'],name: feature_names_enum}


/** input type for updating data in table "features" */
export interface features_set_input {customer_id?: (Scalars['uuid'] | null),name?: (feature_names_enum | null)}

export interface getCustomersAndCountUsersOutputRequest{
    conn_string?: boolean | number
    connector?: boolean | number
    /** An array relationship */
    customerFeatures?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},featuresRequest] | featuresRequest
    /** An aggregate relationship */
    customerFeatures_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},features_aggregateRequest] | features_aggregateRequest
    /** An array relationship */
    customerSrvUrls?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urlsRequest] | srv_urlsRequest
    /** An aggregate relationship */
    customerSrvUrls_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urls_aggregateRequest] | srv_urls_aggregateRequest
    /** An object relationship */
    customersContact?: customers_contactRequest
    id?: boolean | number
    name?: boolean | number
    refresh_token_validity?: boolean | number
    users_count?: boolean | number
    x_api_key?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** mutation root */
export interface mutation_rootRequest{
    /** delete data from the table: "admins" */
    delete_admins?: [{
    /** filter the rows which have to be deleted */
    where: admins_bool_exp},admins_mutation_responseRequest]
    /** delete data from the table: "admins_auth_logs" */
    delete_admins_auth_logs?: [{
    /** filter the rows which have to be deleted */
    where: admins_auth_logs_bool_exp},admins_auth_logs_mutation_responseRequest]
    /** delete single row from the table: "admins_auth_logs" */
    delete_admins_auth_logs_by_pk?: [{id: Scalars['Int']},admins_auth_logsRequest]
    /** delete single row from the table: "admins" */
    delete_admins_by_pk?: [{id: Scalars['uuid']},adminsRequest]
    /** delete data from the table: "auth_methods" */
    delete_auth_methods?: [{
    /** filter the rows which have to be deleted */
    where: auth_methods_bool_exp},auth_methods_mutation_responseRequest]
    /** delete single row from the table: "auth_methods" */
    delete_auth_methods_by_pk?: [{name: Scalars['String']},auth_methodsRequest]
    /** delete data from the table: "blacklist_refresh_token" */
    delete_blacklist_refresh_token?: [{
    /** filter the rows which have to be deleted */
    where: blacklist_refresh_token_bool_exp},blacklist_refresh_token_mutation_responseRequest]
    /** delete single row from the table: "blacklist_refresh_token" */
    delete_blacklist_refresh_token_by_pk?: [{sig: Scalars['String']},blacklist_refresh_tokenRequest]
    /** delete data from the table: "connectors" */
    delete_connectors?: [{
    /** filter the rows which have to be deleted */
    where: connectors_bool_exp},connectors_mutation_responseRequest]
    /** delete single row from the table: "connectors" */
    delete_connectors_by_pk?: [{name: Scalars['String']},connectorsRequest]
    /** delete data from the table: "customer_user" */
    delete_customer_user?: [{
    /** filter the rows which have to be deleted */
    where: customer_user_bool_exp},customer_user_mutation_responseRequest]
    /** delete single row from the table: "customer_user" */
    delete_customer_user_by_pk?: [{customer_id: Scalars['uuid'],user_id: Scalars['uuid']},customer_userRequest]
    /** delete data from the table: "customer_user_service" */
    delete_customer_user_service?: [{
    /** filter the rows which have to be deleted */
    where: customer_user_service_bool_exp},customer_user_service_mutation_responseRequest]
    /** delete single row from the table: "customer_user_service" */
    delete_customer_user_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']},customer_user_serviceRequest]
    /** delete data from the table: "customer_user_sub_service" */
    delete_customer_user_sub_service?: [{
    /** filter the rows which have to be deleted */
    where: customer_user_sub_service_bool_exp},customer_user_sub_service_mutation_responseRequest]
    /** delete single row from the table: "customer_user_sub_service" */
    delete_customer_user_sub_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']},customer_user_sub_serviceRequest]
    /** delete data from the table: "customers" */
    delete_customers?: [{
    /** filter the rows which have to be deleted */
    where: customers_bool_exp},customers_mutation_responseRequest]
    /** delete single row from the table: "customers" */
    delete_customers_by_pk?: [{id: Scalars['uuid']},customersRequest]
    /** delete data from the table: "customers_contact" */
    delete_customers_contact?: [{
    /** filter the rows which have to be deleted */
    where: customers_contact_bool_exp},customers_contact_mutation_responseRequest]
    /** delete single row from the table: "customers_contact" */
    delete_customers_contact_by_pk?: [{customer_id: Scalars['uuid']},customers_contactRequest]
    /** delete data from the table: "feature_names" */
    delete_feature_names?: [{
    /** filter the rows which have to be deleted */
    where: feature_names_bool_exp},feature_names_mutation_responseRequest]
    /** delete single row from the table: "feature_names" */
    delete_feature_names_by_pk?: [{name: Scalars['String']},feature_namesRequest]
    /** delete data from the table: "features" */
    delete_features?: [{
    /** filter the rows which have to be deleted */
    where: features_bool_exp},features_mutation_responseRequest]
    /** delete single row from the table: "features" */
    delete_features_by_pk?: [{customer_id: Scalars['uuid'],name: feature_names_enum},featuresRequest]
    /** delete data from the table: "partners" */
    delete_partners?: [{
    /** filter the rows which have to be deleted */
    where: partners_bool_exp},partners_mutation_responseRequest]
    /** delete single row from the table: "partners" */
    delete_partners_by_pk?: [{id: Scalars['uuid']},partnersRequest]
    /** delete data from the table: "roles" */
    delete_roles?: [{
    /** filter the rows which have to be deleted */
    where: roles_bool_exp},roles_mutation_responseRequest]
    /** delete single row from the table: "roles" */
    delete_roles_by_pk?: [{name: Scalars['String']},rolesRequest]
    /** delete data from the table: "services" */
    delete_services?: [{
    /** filter the rows which have to be deleted */
    where: services_bool_exp},services_mutation_responseRequest]
    /** delete single row from the table: "services" */
    delete_services_by_pk?: [{name: Scalars['String']},servicesRequest]
    /** delete data from the table: "srv_names" */
    delete_srv_names?: [{
    /** filter the rows which have to be deleted */
    where: srv_names_bool_exp},srv_names_mutation_responseRequest]
    /** delete single row from the table: "srv_names" */
    delete_srv_names_by_pk?: [{name: Scalars['String']},srv_namesRequest]
    /** delete data from the table: "srv_urls" */
    delete_srv_urls?: [{
    /** filter the rows which have to be deleted */
    where: srv_urls_bool_exp},srv_urls_mutation_responseRequest]
    /** delete single row from the table: "srv_urls" */
    delete_srv_urls_by_pk?: [{customer_id: Scalars['uuid'],name: srv_names_enum},srv_urlsRequest]
    /** delete data from the table: "status" */
    delete_status?: [{
    /** filter the rows which have to be deleted */
    where: status_bool_exp},status_mutation_responseRequest]
    /** delete single row from the table: "status" */
    delete_status_by_pk?: [{name: Scalars['String']},statusRequest]
    /** delete data from the table: "sub_services" */
    delete_sub_services?: [{
    /** filter the rows which have to be deleted */
    where: sub_services_bool_exp},sub_services_mutation_responseRequest]
    /** delete single row from the table: "sub_services" */
    delete_sub_services_by_pk?: [{name: Scalars['String'],service: services_enum},sub_servicesRequest]
    /** delete data from the table: "user_basic_data" */
    delete_user_basic_data?: [{
    /** filter the rows which have to be deleted */
    where: user_basic_data_bool_exp},user_basic_data_mutation_responseRequest]
    /** delete single row from the table: "user_basic_data" */
    delete_user_basic_data_by_pk?: [{user_id: Scalars['uuid']},user_basic_dataRequest]
    /** delete data from the table: "users" */
    delete_users?: [{
    /** filter the rows which have to be deleted */
    where: users_bool_exp},users_mutation_responseRequest]
    /** delete data from the table: "users_auth_logs" */
    delete_users_auth_logs?: [{
    /** filter the rows which have to be deleted */
    where: users_auth_logs_bool_exp},users_auth_logs_mutation_responseRequest]
    /** delete single row from the table: "users_auth_logs" */
    delete_users_auth_logs_by_pk?: [{id: Scalars['Int']},users_auth_logsRequest]
    /** delete single row from the table: "users" */
    delete_users_by_pk?: [{id: Scalars['uuid']},usersRequest]
    insertAdmin?: [{email: Scalars['bpchar'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']},ReturnAffectedItemIdRequest]
    insertCustomer?: [{conn_string: Scalars['String'],connector?: (Scalars['String'] | null),contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),name: Scalars['String'],refresh_token_validity: Scalars['Int']},getCustomersAndCountUsersOutputRequest]
    insertUserOrWarnIfExists?: [{brukerBrukerNavn?: (Scalars['String'] | null),brukerRegion?: (Scalars['Int'] | null),customer_id?: (Scalars['uuid'] | null),email: Scalars['String'],name: Scalars['String'],password: Scalars['String'],phone: Scalars['String'],role?: (Scalars['String'] | null),token?: (Scalars['String'] | null)},InsertUserOrWarnIfExistsOutputRequest]
    insertUsersOrWarnIfExists?: [{objects?: (InsertUserData[] | null)},InsertUserOrWarnIfExistsOutputRequest] | InsertUserOrWarnIfExistsOutputRequest
    /** insert data into the table: "admins" */
    insert_admins?: [{
    /** the rows to be inserted */
    objects: admins_insert_input[],
    /** on conflict condition */
    on_conflict?: (admins_on_conflict | null)},admins_mutation_responseRequest]
    /** insert data into the table: "admins_auth_logs" */
    insert_admins_auth_logs?: [{
    /** the rows to be inserted */
    objects: admins_auth_logs_insert_input[],
    /** on conflict condition */
    on_conflict?: (admins_auth_logs_on_conflict | null)},admins_auth_logs_mutation_responseRequest]
    /** insert a single row into the table: "admins_auth_logs" */
    insert_admins_auth_logs_one?: [{
    /** the row to be inserted */
    object: admins_auth_logs_insert_input,
    /** on conflict condition */
    on_conflict?: (admins_auth_logs_on_conflict | null)},admins_auth_logsRequest]
    /** insert a single row into the table: "admins" */
    insert_admins_one?: [{
    /** the row to be inserted */
    object: admins_insert_input,
    /** on conflict condition */
    on_conflict?: (admins_on_conflict | null)},adminsRequest]
    /** insert data into the table: "auth_methods" */
    insert_auth_methods?: [{
    /** the rows to be inserted */
    objects: auth_methods_insert_input[],
    /** on conflict condition */
    on_conflict?: (auth_methods_on_conflict | null)},auth_methods_mutation_responseRequest]
    /** insert a single row into the table: "auth_methods" */
    insert_auth_methods_one?: [{
    /** the row to be inserted */
    object: auth_methods_insert_input,
    /** on conflict condition */
    on_conflict?: (auth_methods_on_conflict | null)},auth_methodsRequest]
    /** insert data into the table: "blacklist_refresh_token" */
    insert_blacklist_refresh_token?: [{
    /** the rows to be inserted */
    objects: blacklist_refresh_token_insert_input[],
    /** on conflict condition */
    on_conflict?: (blacklist_refresh_token_on_conflict | null)},blacklist_refresh_token_mutation_responseRequest]
    /** insert a single row into the table: "blacklist_refresh_token" */
    insert_blacklist_refresh_token_one?: [{
    /** the row to be inserted */
    object: blacklist_refresh_token_insert_input,
    /** on conflict condition */
    on_conflict?: (blacklist_refresh_token_on_conflict | null)},blacklist_refresh_tokenRequest]
    /** insert data into the table: "connectors" */
    insert_connectors?: [{
    /** the rows to be inserted */
    objects: connectors_insert_input[],
    /** on conflict condition */
    on_conflict?: (connectors_on_conflict | null)},connectors_mutation_responseRequest]
    /** insert a single row into the table: "connectors" */
    insert_connectors_one?: [{
    /** the row to be inserted */
    object: connectors_insert_input,
    /** on conflict condition */
    on_conflict?: (connectors_on_conflict | null)},connectorsRequest]
    /** insert data into the table: "customer_user" */
    insert_customer_user?: [{
    /** the rows to be inserted */
    objects: customer_user_insert_input[],
    /** on conflict condition */
    on_conflict?: (customer_user_on_conflict | null)},customer_user_mutation_responseRequest]
    /** insert a single row into the table: "customer_user" */
    insert_customer_user_one?: [{
    /** the row to be inserted */
    object: customer_user_insert_input,
    /** on conflict condition */
    on_conflict?: (customer_user_on_conflict | null)},customer_userRequest]
    /** insert data into the table: "customer_user_service" */
    insert_customer_user_service?: [{
    /** the rows to be inserted */
    objects: customer_user_service_insert_input[],
    /** on conflict condition */
    on_conflict?: (customer_user_service_on_conflict | null)},customer_user_service_mutation_responseRequest]
    /** insert a single row into the table: "customer_user_service" */
    insert_customer_user_service_one?: [{
    /** the row to be inserted */
    object: customer_user_service_insert_input,
    /** on conflict condition */
    on_conflict?: (customer_user_service_on_conflict | null)},customer_user_serviceRequest]
    /** insert data into the table: "customer_user_sub_service" */
    insert_customer_user_sub_service?: [{
    /** the rows to be inserted */
    objects: customer_user_sub_service_insert_input[],
    /** on conflict condition */
    on_conflict?: (customer_user_sub_service_on_conflict | null)},customer_user_sub_service_mutation_responseRequest]
    /** insert a single row into the table: "customer_user_sub_service" */
    insert_customer_user_sub_service_one?: [{
    /** the row to be inserted */
    object: customer_user_sub_service_insert_input,
    /** on conflict condition */
    on_conflict?: (customer_user_sub_service_on_conflict | null)},customer_user_sub_serviceRequest]
    /** insert data into the table: "customers" */
    insert_customers?: [{
    /** the rows to be inserted */
    objects: customers_insert_input[],
    /** on conflict condition */
    on_conflict?: (customers_on_conflict | null)},customers_mutation_responseRequest]
    /** insert data into the table: "customers_contact" */
    insert_customers_contact?: [{
    /** the rows to be inserted */
    objects: customers_contact_insert_input[],
    /** on conflict condition */
    on_conflict?: (customers_contact_on_conflict | null)},customers_contact_mutation_responseRequest]
    /** insert a single row into the table: "customers_contact" */
    insert_customers_contact_one?: [{
    /** the row to be inserted */
    object: customers_contact_insert_input,
    /** on conflict condition */
    on_conflict?: (customers_contact_on_conflict | null)},customers_contactRequest]
    /** insert a single row into the table: "customers" */
    insert_customers_one?: [{
    /** the row to be inserted */
    object: customers_insert_input,
    /** on conflict condition */
    on_conflict?: (customers_on_conflict | null)},customersRequest]
    /** insert data into the table: "feature_names" */
    insert_feature_names?: [{
    /** the rows to be inserted */
    objects: feature_names_insert_input[],
    /** on conflict condition */
    on_conflict?: (feature_names_on_conflict | null)},feature_names_mutation_responseRequest]
    /** insert a single row into the table: "feature_names" */
    insert_feature_names_one?: [{
    /** the row to be inserted */
    object: feature_names_insert_input,
    /** on conflict condition */
    on_conflict?: (feature_names_on_conflict | null)},feature_namesRequest]
    /** insert data into the table: "features" */
    insert_features?: [{
    /** the rows to be inserted */
    objects: features_insert_input[],
    /** on conflict condition */
    on_conflict?: (features_on_conflict | null)},features_mutation_responseRequest]
    /** insert a single row into the table: "features" */
    insert_features_one?: [{
    /** the row to be inserted */
    object: features_insert_input,
    /** on conflict condition */
    on_conflict?: (features_on_conflict | null)},featuresRequest]
    /** insert data into the table: "partners" */
    insert_partners?: [{
    /** the rows to be inserted */
    objects: partners_insert_input[],
    /** on conflict condition */
    on_conflict?: (partners_on_conflict | null)},partners_mutation_responseRequest]
    /** insert a single row into the table: "partners" */
    insert_partners_one?: [{
    /** the row to be inserted */
    object: partners_insert_input,
    /** on conflict condition */
    on_conflict?: (partners_on_conflict | null)},partnersRequest]
    /** insert data into the table: "roles" */
    insert_roles?: [{
    /** the rows to be inserted */
    objects: roles_insert_input[],
    /** on conflict condition */
    on_conflict?: (roles_on_conflict | null)},roles_mutation_responseRequest]
    /** insert a single row into the table: "roles" */
    insert_roles_one?: [{
    /** the row to be inserted */
    object: roles_insert_input,
    /** on conflict condition */
    on_conflict?: (roles_on_conflict | null)},rolesRequest]
    /** insert data into the table: "services" */
    insert_services?: [{
    /** the rows to be inserted */
    objects: services_insert_input[],
    /** on conflict condition */
    on_conflict?: (services_on_conflict | null)},services_mutation_responseRequest]
    /** insert a single row into the table: "services" */
    insert_services_one?: [{
    /** the row to be inserted */
    object: services_insert_input,
    /** on conflict condition */
    on_conflict?: (services_on_conflict | null)},servicesRequest]
    /** insert data into the table: "srv_names" */
    insert_srv_names?: [{
    /** the rows to be inserted */
    objects: srv_names_insert_input[],
    /** on conflict condition */
    on_conflict?: (srv_names_on_conflict | null)},srv_names_mutation_responseRequest]
    /** insert a single row into the table: "srv_names" */
    insert_srv_names_one?: [{
    /** the row to be inserted */
    object: srv_names_insert_input,
    /** on conflict condition */
    on_conflict?: (srv_names_on_conflict | null)},srv_namesRequest]
    /** insert data into the table: "srv_urls" */
    insert_srv_urls?: [{
    /** the rows to be inserted */
    objects: srv_urls_insert_input[],
    /** on conflict condition */
    on_conflict?: (srv_urls_on_conflict | null)},srv_urls_mutation_responseRequest]
    /** insert a single row into the table: "srv_urls" */
    insert_srv_urls_one?: [{
    /** the row to be inserted */
    object: srv_urls_insert_input,
    /** on conflict condition */
    on_conflict?: (srv_urls_on_conflict | null)},srv_urlsRequest]
    /** insert data into the table: "status" */
    insert_status?: [{
    /** the rows to be inserted */
    objects: status_insert_input[],
    /** on conflict condition */
    on_conflict?: (status_on_conflict | null)},status_mutation_responseRequest]
    /** insert a single row into the table: "status" */
    insert_status_one?: [{
    /** the row to be inserted */
    object: status_insert_input,
    /** on conflict condition */
    on_conflict?: (status_on_conflict | null)},statusRequest]
    /** insert data into the table: "sub_services" */
    insert_sub_services?: [{
    /** the rows to be inserted */
    objects: sub_services_insert_input[],
    /** on conflict condition */
    on_conflict?: (sub_services_on_conflict | null)},sub_services_mutation_responseRequest]
    /** insert a single row into the table: "sub_services" */
    insert_sub_services_one?: [{
    /** the row to be inserted */
    object: sub_services_insert_input,
    /** on conflict condition */
    on_conflict?: (sub_services_on_conflict | null)},sub_servicesRequest]
    /** insert data into the table: "user_basic_data" */
    insert_user_basic_data?: [{
    /** the rows to be inserted */
    objects: user_basic_data_insert_input[],
    /** on conflict condition */
    on_conflict?: (user_basic_data_on_conflict | null)},user_basic_data_mutation_responseRequest]
    /** insert a single row into the table: "user_basic_data" */
    insert_user_basic_data_one?: [{
    /** the row to be inserted */
    object: user_basic_data_insert_input,
    /** on conflict condition */
    on_conflict?: (user_basic_data_on_conflict | null)},user_basic_dataRequest]
    /** insert data into the table: "users" */
    insert_users?: [{
    /** the rows to be inserted */
    objects: users_insert_input[],
    /** on conflict condition */
    on_conflict?: (users_on_conflict | null)},users_mutation_responseRequest]
    /** insert data into the table: "users_auth_logs" */
    insert_users_auth_logs?: [{
    /** the rows to be inserted */
    objects: users_auth_logs_insert_input[],
    /** on conflict condition */
    on_conflict?: (users_auth_logs_on_conflict | null)},users_auth_logs_mutation_responseRequest]
    /** insert a single row into the table: "users_auth_logs" */
    insert_users_auth_logs_one?: [{
    /** the row to be inserted */
    object: users_auth_logs_insert_input,
    /** on conflict condition */
    on_conflict?: (users_auth_logs_on_conflict | null)},users_auth_logsRequest]
    /** insert a single row into the table: "users" */
    insert_users_one?: [{
    /** the row to be inserted */
    object: users_insert_input,
    /** on conflict condition */
    on_conflict?: (users_on_conflict | null)},usersRequest]
    signin?: [{customer_name: Scalars['String'],email: Scalars['String'],password: Scalars['String']},SigninOutputRequest]
    singinAvansAdmin?: [{email: Scalars['String'],password: Scalars['String']},SinginOutputWithRefreshTokenRequest]
    singinAvansAdminByRefreshToken?: [{id: Scalars['uuid']},SinginOutputWithRefreshTokenRequest]
    updateAdmin?: [{email: Scalars['bpchar'],id: Scalars['uuid'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']},ReturnAffectedItemIdRequest]
    updateCustomer?: [{conn_string?: (Scalars['String'] | null),connector: Scalars['String'],contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),id: Scalars['uuid'],name: Scalars['String'],refresh_token_validity: Scalars['Int']},ReturnAffectedRowsRequest]
    updateUser?: [{email?: (Scalars['bpchar'] | null),id: Scalars['uuid'],name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),phone?: (Scalars['String'] | null),role?: (Scalars['String'] | null)},UpdateUserOutputRequest]
    /** update data of the table: "admins" */
    update_admins?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (admins_set_input | null),
    /** filter the rows which have to be updated */
    where: admins_bool_exp},admins_mutation_responseRequest]
    /** update data of the table: "admins_auth_logs" */
    update_admins_auth_logs?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (admins_auth_logs_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (admins_auth_logs_set_input | null),
    /** filter the rows which have to be updated */
    where: admins_auth_logs_bool_exp},admins_auth_logs_mutation_responseRequest]
    /** update single row of the table: "admins_auth_logs" */
    update_admins_auth_logs_by_pk?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (admins_auth_logs_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (admins_auth_logs_set_input | null),pk_columns: admins_auth_logs_pk_columns_input},admins_auth_logsRequest]
    /** update single row of the table: "admins" */
    update_admins_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (admins_set_input | null),pk_columns: admins_pk_columns_input},adminsRequest]
    /** update data of the table: "auth_methods" */
    update_auth_methods?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (auth_methods_set_input | null),
    /** filter the rows which have to be updated */
    where: auth_methods_bool_exp},auth_methods_mutation_responseRequest]
    /** update single row of the table: "auth_methods" */
    update_auth_methods_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (auth_methods_set_input | null),pk_columns: auth_methods_pk_columns_input},auth_methodsRequest]
    /** update data of the table: "blacklist_refresh_token" */
    update_blacklist_refresh_token?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (blacklist_refresh_token_set_input | null),
    /** filter the rows which have to be updated */
    where: blacklist_refresh_token_bool_exp},blacklist_refresh_token_mutation_responseRequest]
    /** update single row of the table: "blacklist_refresh_token" */
    update_blacklist_refresh_token_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (blacklist_refresh_token_set_input | null),pk_columns: blacklist_refresh_token_pk_columns_input},blacklist_refresh_tokenRequest]
    /** update data of the table: "connectors" */
    update_connectors?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (connectors_set_input | null),
    /** filter the rows which have to be updated */
    where: connectors_bool_exp},connectors_mutation_responseRequest]
    /** update single row of the table: "connectors" */
    update_connectors_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (connectors_set_input | null),pk_columns: connectors_pk_columns_input},connectorsRequest]
    /** update data of the table: "customer_user" */
    update_customer_user?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (customer_user_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_set_input | null),
    /** filter the rows which have to be updated */
    where: customer_user_bool_exp},customer_user_mutation_responseRequest]
    /** update single row of the table: "customer_user" */
    update_customer_user_by_pk?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (customer_user_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_set_input | null),pk_columns: customer_user_pk_columns_input},customer_userRequest]
    /** update data of the table: "customer_user_service" */
    update_customer_user_service?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_service_set_input | null),
    /** filter the rows which have to be updated */
    where: customer_user_service_bool_exp},customer_user_service_mutation_responseRequest]
    /** update single row of the table: "customer_user_service" */
    update_customer_user_service_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_service_set_input | null),pk_columns: customer_user_service_pk_columns_input},customer_user_serviceRequest]
    /** update data of the table: "customer_user_sub_service" */
    update_customer_user_sub_service?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_sub_service_set_input | null),
    /** filter the rows which have to be updated */
    where: customer_user_sub_service_bool_exp},customer_user_sub_service_mutation_responseRequest]
    /** update single row of the table: "customer_user_sub_service" */
    update_customer_user_sub_service_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customer_user_sub_service_set_input | null),pk_columns: customer_user_sub_service_pk_columns_input},customer_user_sub_serviceRequest]
    /** update data of the table: "customers" */
    update_customers?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (customers_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (customers_set_input | null),
    /** filter the rows which have to be updated */
    where: customers_bool_exp},customers_mutation_responseRequest]
    /** update single row of the table: "customers" */
    update_customers_by_pk?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (customers_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (customers_set_input | null),pk_columns: customers_pk_columns_input},customersRequest]
    /** update data of the table: "customers_contact" */
    update_customers_contact?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customers_contact_set_input | null),
    /** filter the rows which have to be updated */
    where: customers_contact_bool_exp},customers_contact_mutation_responseRequest]
    /** update single row of the table: "customers_contact" */
    update_customers_contact_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (customers_contact_set_input | null),pk_columns: customers_contact_pk_columns_input},customers_contactRequest]
    /** update data of the table: "feature_names" */
    update_feature_names?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (feature_names_set_input | null),
    /** filter the rows which have to be updated */
    where: feature_names_bool_exp},feature_names_mutation_responseRequest]
    /** update single row of the table: "feature_names" */
    update_feature_names_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (feature_names_set_input | null),pk_columns: feature_names_pk_columns_input},feature_namesRequest]
    /** update data of the table: "features" */
    update_features?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (features_set_input | null),
    /** filter the rows which have to be updated */
    where: features_bool_exp},features_mutation_responseRequest]
    /** update single row of the table: "features" */
    update_features_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (features_set_input | null),pk_columns: features_pk_columns_input},featuresRequest]
    /** update data of the table: "partners" */
    update_partners?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (partners_set_input | null),
    /** filter the rows which have to be updated */
    where: partners_bool_exp},partners_mutation_responseRequest]
    /** update single row of the table: "partners" */
    update_partners_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (partners_set_input | null),pk_columns: partners_pk_columns_input},partnersRequest]
    /** update data of the table: "roles" */
    update_roles?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (roles_set_input | null),
    /** filter the rows which have to be updated */
    where: roles_bool_exp},roles_mutation_responseRequest]
    /** update single row of the table: "roles" */
    update_roles_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (roles_set_input | null),pk_columns: roles_pk_columns_input},rolesRequest]
    /** update data of the table: "services" */
    update_services?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (services_set_input | null),
    /** filter the rows which have to be updated */
    where: services_bool_exp},services_mutation_responseRequest]
    /** update single row of the table: "services" */
    update_services_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (services_set_input | null),pk_columns: services_pk_columns_input},servicesRequest]
    /** update data of the table: "srv_names" */
    update_srv_names?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (srv_names_set_input | null),
    /** filter the rows which have to be updated */
    where: srv_names_bool_exp},srv_names_mutation_responseRequest]
    /** update single row of the table: "srv_names" */
    update_srv_names_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (srv_names_set_input | null),pk_columns: srv_names_pk_columns_input},srv_namesRequest]
    /** update data of the table: "srv_urls" */
    update_srv_urls?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (srv_urls_set_input | null),
    /** filter the rows which have to be updated */
    where: srv_urls_bool_exp},srv_urls_mutation_responseRequest]
    /** update single row of the table: "srv_urls" */
    update_srv_urls_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (srv_urls_set_input | null),pk_columns: srv_urls_pk_columns_input},srv_urlsRequest]
    /** update data of the table: "status" */
    update_status?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (status_set_input | null),
    /** filter the rows which have to be updated */
    where: status_bool_exp},status_mutation_responseRequest]
    /** update single row of the table: "status" */
    update_status_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (status_set_input | null),pk_columns: status_pk_columns_input},statusRequest]
    /** update data of the table: "sub_services" */
    update_sub_services?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (sub_services_set_input | null),
    /** filter the rows which have to be updated */
    where: sub_services_bool_exp},sub_services_mutation_responseRequest]
    /** update single row of the table: "sub_services" */
    update_sub_services_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (sub_services_set_input | null),pk_columns: sub_services_pk_columns_input},sub_servicesRequest]
    /** update data of the table: "user_basic_data" */
    update_user_basic_data?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_basic_data_set_input | null),
    /** filter the rows which have to be updated */
    where: user_basic_data_bool_exp},user_basic_data_mutation_responseRequest]
    /** update single row of the table: "user_basic_data" */
    update_user_basic_data_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_basic_data_set_input | null),pk_columns: user_basic_data_pk_columns_input},user_basic_dataRequest]
    /** update data of the table: "users" */
    update_users?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (users_set_input | null),
    /** filter the rows which have to be updated */
    where: users_bool_exp},users_mutation_responseRequest]
    /** update data of the table: "users_auth_logs" */
    update_users_auth_logs?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (users_auth_logs_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (users_auth_logs_set_input | null),
    /** filter the rows which have to be updated */
    where: users_auth_logs_bool_exp},users_auth_logs_mutation_responseRequest]
    /** update single row of the table: "users_auth_logs" */
    update_users_auth_logs_by_pk?: [{
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (users_auth_logs_inc_input | null),
    /** sets the columns of the filtered rows to the given values */
    _set?: (users_auth_logs_set_input | null),pk_columns: users_auth_logs_pk_columns_input},users_auth_logsRequest]
    /** update single row of the table: "users" */
    update_users_by_pk?: [{
    /** sets the columns of the filtered rows to the given values */
    _set?: (users_set_input | null),pk_columns: users_pk_columns_input},usersRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "partners" */
export interface partnersRequest{
    /** An array relationship */
    customers?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customersRequest] | customersRequest
    /** An aggregate relationship */
    customers_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customers_aggregateRequest] | customers_aggregateRequest
    id?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "partners" */
export interface partners_aggregateRequest{
    aggregate?: partners_aggregate_fieldsRequest
    nodes?: partnersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "partners" */
export interface partners_aggregate_fieldsRequest{
    count?: [{columns?: (partners_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: partners_max_fieldsRequest
    min?: partners_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "partners". All fields are combined with a logical 'AND'. */
export interface partners_bool_exp {_and?: (partners_bool_exp[] | null),_not?: (partners_bool_exp | null),_or?: (partners_bool_exp[] | null),customers?: (customers_bool_exp | null),id?: (uuid_comparison_exp | null),name?: (String_comparison_exp | null)}


/** input type for inserting data into table "partners" */
export interface partners_insert_input {customers?: (customers_arr_rel_insert_input | null),id?: (Scalars['uuid'] | null),name?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface partners_max_fieldsRequest{
    id?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface partners_min_fieldsRequest{
    id?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "partners" */
export interface partners_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: partnersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "partners" */
export interface partners_obj_rel_insert_input {data: partners_insert_input,
/** on conflict condition */
on_conflict?: (partners_on_conflict | null)}


/** on conflict condition type for table "partners" */
export interface partners_on_conflict {constraint: partners_constraint,update_columns: partners_update_column[],where?: (partners_bool_exp | null)}


/** Ordering options when selecting data from "partners". */
export interface partners_order_by {customers_aggregate?: (customers_aggregate_order_by | null),id?: (order_by | null),name?: (order_by | null)}


/** primary key columns input for table: partners */
export interface partners_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "partners" */
export interface partners_set_input {id?: (Scalars['uuid'] | null),name?: (Scalars['String'] | null)}

export interface query_rootRequest{
    /** fetch data from the table: "admins" */
    admins?: [{
    /** distinct select on columns */
    distinct_on?: (admins_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_bool_exp | null)},adminsRequest] | adminsRequest
    /** fetch aggregated fields from the table: "admins" */
    admins_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (admins_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_bool_exp | null)},admins_aggregateRequest] | admins_aggregateRequest
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logsRequest] | admins_auth_logsRequest
    /** An aggregate relationship */
    admins_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logs_aggregateRequest] | admins_auth_logs_aggregateRequest
    /** fetch data from the table: "admins_auth_logs" using primary key columns */
    admins_auth_logs_by_pk?: [{id: Scalars['Int']},admins_auth_logsRequest]
    /** fetch data from the table: "admins" using primary key columns */
    admins_by_pk?: [{id: Scalars['uuid']},adminsRequest]
    /** fetch data from the table: "auth_methods" */
    auth_methods?: [{
    /** distinct select on columns */
    distinct_on?: (auth_methods_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (auth_methods_order_by[] | null),
    /** filter the rows returned */
    where?: (auth_methods_bool_exp | null)},auth_methodsRequest] | auth_methodsRequest
    /** fetch aggregated fields from the table: "auth_methods" */
    auth_methods_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (auth_methods_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (auth_methods_order_by[] | null),
    /** filter the rows returned */
    where?: (auth_methods_bool_exp | null)},auth_methods_aggregateRequest] | auth_methods_aggregateRequest
    /** fetch data from the table: "auth_methods" using primary key columns */
    auth_methods_by_pk?: [{name: Scalars['String']},auth_methodsRequest]
    /** fetch data from the table: "blacklist_refresh_token" */
    blacklist_refresh_token?: [{
    /** distinct select on columns */
    distinct_on?: (blacklist_refresh_token_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (blacklist_refresh_token_order_by[] | null),
    /** filter the rows returned */
    where?: (blacklist_refresh_token_bool_exp | null)},blacklist_refresh_tokenRequest] | blacklist_refresh_tokenRequest
    /** fetch aggregated fields from the table: "blacklist_refresh_token" */
    blacklist_refresh_token_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (blacklist_refresh_token_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (blacklist_refresh_token_order_by[] | null),
    /** filter the rows returned */
    where?: (blacklist_refresh_token_bool_exp | null)},blacklist_refresh_token_aggregateRequest] | blacklist_refresh_token_aggregateRequest
    /** fetch data from the table: "blacklist_refresh_token" using primary key columns */
    blacklist_refresh_token_by_pk?: [{sig: Scalars['String']},blacklist_refresh_tokenRequest]
    /** fetch data from the table: "connectors" */
    connectors?: [{
    /** distinct select on columns */
    distinct_on?: (connectors_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (connectors_order_by[] | null),
    /** filter the rows returned */
    where?: (connectors_bool_exp | null)},connectorsRequest] | connectorsRequest
    /** fetch aggregated fields from the table: "connectors" */
    connectors_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (connectors_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (connectors_order_by[] | null),
    /** filter the rows returned */
    where?: (connectors_bool_exp | null)},connectors_aggregateRequest] | connectors_aggregateRequest
    /** fetch data from the table: "connectors" using primary key columns */
    connectors_by_pk?: [{name: Scalars['String']},connectorsRequest]
    /** fetch data from the table: "customer_user" */
    customer_user?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_userRequest] | customer_userRequest
    /** fetch aggregated fields from the table: "customer_user" */
    customer_user_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_user_aggregateRequest] | customer_user_aggregateRequest
    /** fetch data from the table: "customer_user" using primary key columns */
    customer_user_by_pk?: [{customer_id: Scalars['uuid'],user_id: Scalars['uuid']},customer_userRequest]
    /** fetch data from the table: "customer_user_service" */
    customer_user_service?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_serviceRequest] | customer_user_serviceRequest
    /** fetch aggregated fields from the table: "customer_user_service" */
    customer_user_service_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_service_aggregateRequest] | customer_user_service_aggregateRequest
    /** fetch data from the table: "customer_user_service" using primary key columns */
    customer_user_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']},customer_user_serviceRequest]
    /** fetch data from the table: "customer_user_sub_service" */
    customer_user_sub_service?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** fetch aggregated fields from the table: "customer_user_sub_service" */
    customer_user_sub_service_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    /** fetch data from the table: "customer_user_sub_service" using primary key columns */
    customer_user_sub_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']},customer_user_sub_serviceRequest]
    /** An array relationship */
    customers?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customersRequest] | customersRequest
    /** An aggregate relationship */
    customers_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customers_aggregateRequest] | customers_aggregateRequest
    /** fetch data from the table: "customers" using primary key columns */
    customers_by_pk?: [{id: Scalars['uuid']},customersRequest]
    /** fetch data from the table: "customers_contact" */
    customers_contact?: [{
    /** distinct select on columns */
    distinct_on?: (customers_contact_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_contact_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_contact_bool_exp | null)},customers_contactRequest] | customers_contactRequest
    /** fetch aggregated fields from the table: "customers_contact" */
    customers_contact_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_contact_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_contact_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_contact_bool_exp | null)},customers_contact_aggregateRequest] | customers_contact_aggregateRequest
    /** fetch data from the table: "customers_contact" using primary key columns */
    customers_contact_by_pk?: [{customer_id: Scalars['uuid']},customers_contactRequest]
    /** fetch data from the table: "feature_names" */
    feature_names?: [{
    /** distinct select on columns */
    distinct_on?: (feature_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (feature_names_order_by[] | null),
    /** filter the rows returned */
    where?: (feature_names_bool_exp | null)},feature_namesRequest] | feature_namesRequest
    /** fetch aggregated fields from the table: "feature_names" */
    feature_names_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (feature_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (feature_names_order_by[] | null),
    /** filter the rows returned */
    where?: (feature_names_bool_exp | null)},feature_names_aggregateRequest] | feature_names_aggregateRequest
    /** fetch data from the table: "feature_names" using primary key columns */
    feature_names_by_pk?: [{name: Scalars['String']},feature_namesRequest]
    /** An array relationship */
    features?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},featuresRequest] | featuresRequest
    /** An aggregate relationship */
    features_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},features_aggregateRequest] | features_aggregateRequest
    /** fetch data from the table: "features" using primary key columns */
    features_by_pk?: [{customer_id: Scalars['uuid'],name: feature_names_enum},featuresRequest]
    getCustomerById?: [{id: Scalars['uuid']},getCustomersAndCountUsersOutputRequest]
    getCustomersAndCountUsers?: getCustomersAndCountUsersOutputRequest
    /** fetch data from the table: "partners" */
    partners?: [{
    /** distinct select on columns */
    distinct_on?: (partners_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (partners_order_by[] | null),
    /** filter the rows returned */
    where?: (partners_bool_exp | null)},partnersRequest] | partnersRequest
    /** fetch aggregated fields from the table: "partners" */
    partners_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (partners_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (partners_order_by[] | null),
    /** filter the rows returned */
    where?: (partners_bool_exp | null)},partners_aggregateRequest] | partners_aggregateRequest
    /** fetch data from the table: "partners" using primary key columns */
    partners_by_pk?: [{id: Scalars['uuid']},partnersRequest]
    /** fetch data from the table: "roles" */
    roles?: [{
    /** distinct select on columns */
    distinct_on?: (roles_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (roles_order_by[] | null),
    /** filter the rows returned */
    where?: (roles_bool_exp | null)},rolesRequest] | rolesRequest
    /** fetch aggregated fields from the table: "roles" */
    roles_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (roles_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (roles_order_by[] | null),
    /** filter the rows returned */
    where?: (roles_bool_exp | null)},roles_aggregateRequest] | roles_aggregateRequest
    /** fetch data from the table: "roles" using primary key columns */
    roles_by_pk?: [{name: Scalars['String']},rolesRequest]
    /** fetch data from the table: "services" */
    services?: [{
    /** distinct select on columns */
    distinct_on?: (services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (services_order_by[] | null),
    /** filter the rows returned */
    where?: (services_bool_exp | null)},servicesRequest] | servicesRequest
    /** fetch aggregated fields from the table: "services" */
    services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (services_order_by[] | null),
    /** filter the rows returned */
    where?: (services_bool_exp | null)},services_aggregateRequest] | services_aggregateRequest
    /** fetch data from the table: "services" using primary key columns */
    services_by_pk?: [{name: Scalars['String']},servicesRequest]
    /** fetch data from the table: "srv_names" */
    srv_names?: [{
    /** distinct select on columns */
    distinct_on?: (srv_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_names_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_names_bool_exp | null)},srv_namesRequest] | srv_namesRequest
    /** fetch aggregated fields from the table: "srv_names" */
    srv_names_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_names_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_names_bool_exp | null)},srv_names_aggregateRequest] | srv_names_aggregateRequest
    /** fetch data from the table: "srv_names" using primary key columns */
    srv_names_by_pk?: [{name: Scalars['String']},srv_namesRequest]
    /** An array relationship */
    srv_urls?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urlsRequest] | srv_urlsRequest
    /** An aggregate relationship */
    srv_urls_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urls_aggregateRequest] | srv_urls_aggregateRequest
    /** fetch data from the table: "srv_urls" using primary key columns */
    srv_urls_by_pk?: [{customer_id: Scalars['uuid'],name: srv_names_enum},srv_urlsRequest]
    /** fetch data from the table: "status" */
    status?: [{
    /** distinct select on columns */
    distinct_on?: (status_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (status_order_by[] | null),
    /** filter the rows returned */
    where?: (status_bool_exp | null)},statusRequest] | statusRequest
    /** fetch aggregated fields from the table: "status" */
    status_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (status_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (status_order_by[] | null),
    /** filter the rows returned */
    where?: (status_bool_exp | null)},status_aggregateRequest] | status_aggregateRequest
    /** fetch data from the table: "status" using primary key columns */
    status_by_pk?: [{name: Scalars['String']},statusRequest]
    /** fetch data from the table: "sub_services" */
    sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_servicesRequest] | sub_servicesRequest
    /** An aggregate relationship */
    sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_services_aggregateRequest] | sub_services_aggregateRequest
    /** fetch data from the table: "sub_services" using primary key columns */
    sub_services_by_pk?: [{name: Scalars['String'],service: services_enum},sub_servicesRequest]
    /** An array relationship */
    user_basic_data?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_dataRequest] | user_basic_dataRequest
    /** An aggregate relationship */
    user_basic_data_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_data_aggregateRequest] | user_basic_data_aggregateRequest
    /** fetch data from the table: "user_basic_data" using primary key columns */
    user_basic_data_by_pk?: [{user_id: Scalars['uuid']},user_basic_dataRequest]
    /** An array relationship */
    users?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},usersRequest] | usersRequest
    /** An aggregate relationship */
    users_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},users_aggregateRequest] | users_aggregateRequest
    /** An array relationship */
    users_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logsRequest] | users_auth_logsRequest
    /** An aggregate relationship */
    users_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logs_aggregateRequest] | users_auth_logs_aggregateRequest
    /** fetch data from the table: "users_auth_logs" using primary key columns */
    users_auth_logs_by_pk?: [{id: Scalars['Int']},users_auth_logsRequest]
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: [{id: Scalars['uuid']},usersRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "roles" */
export interface rolesRequest{
    comment?: boolean | number
    name?: boolean | number
    /** An array relationship */
    users?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},usersRequest] | usersRequest
    /** An aggregate relationship */
    users_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},users_aggregateRequest] | users_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "roles" */
export interface roles_aggregateRequest{
    aggregate?: roles_aggregate_fieldsRequest
    nodes?: rolesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "roles" */
export interface roles_aggregate_fieldsRequest{
    count?: [{columns?: (roles_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: roles_max_fieldsRequest
    min?: roles_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "roles". All fields are combined with a logical 'AND'. */
export interface roles_bool_exp {_and?: (roles_bool_exp[] | null),_not?: (roles_bool_exp | null),_or?: (roles_bool_exp[] | null),comment?: (String_comparison_exp | null),name?: (String_comparison_exp | null),users?: (users_bool_exp | null)}


/** Boolean expression to compare columns of type "roles_enum". All fields are combined with logical 'AND'. */
export interface roles_enum_comparison_exp {_eq?: (roles_enum | null),_in?: (roles_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (roles_enum | null),_nin?: (roles_enum[] | null)}


/** input type for inserting data into table "roles" */
export interface roles_insert_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null),users?: (users_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface roles_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface roles_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "roles" */
export interface roles_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: rolesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "roles" */
export interface roles_obj_rel_insert_input {data: roles_insert_input,
/** on conflict condition */
on_conflict?: (roles_on_conflict | null)}


/** on conflict condition type for table "roles" */
export interface roles_on_conflict {constraint: roles_constraint,update_columns: roles_update_column[],where?: (roles_bool_exp | null)}


/** Ordering options when selecting data from "roles". */
export interface roles_order_by {comment?: (order_by | null),name?: (order_by | null),users_aggregate?: (users_aggregate_order_by | null)}


/** primary key columns input for table: roles */
export interface roles_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "roles" */
export interface roles_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "services" */
export interface servicesRequest{
    comment?: boolean | number
    /** An array relationship */
    customer_user_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_serviceRequest] | customer_user_serviceRequest
    /** An aggregate relationship */
    customer_user_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_service_aggregateRequest] | customer_user_service_aggregateRequest
    /** An array relationship */
    customer_user_sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** An aggregate relationship */
    customer_user_sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    name?: boolean | number
    /** fetch data from the table: "sub_services" */
    sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_servicesRequest] | sub_servicesRequest
    /** An aggregate relationship */
    sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_services_aggregateRequest] | sub_services_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "services" */
export interface services_aggregateRequest{
    aggregate?: services_aggregate_fieldsRequest
    nodes?: servicesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "services" */
export interface services_aggregate_fieldsRequest{
    count?: [{columns?: (services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: services_max_fieldsRequest
    min?: services_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "services". All fields are combined with a logical 'AND'. */
export interface services_bool_exp {_and?: (services_bool_exp[] | null),_not?: (services_bool_exp | null),_or?: (services_bool_exp[] | null),comment?: (String_comparison_exp | null),customer_user_services?: (customer_user_service_bool_exp | null),customer_user_sub_services?: (customer_user_sub_service_bool_exp | null),name?: (String_comparison_exp | null),sub_services?: (sub_services_bool_exp | null)}


/** Boolean expression to compare columns of type "services_enum". All fields are combined with logical 'AND'. */
export interface services_enum_comparison_exp {_eq?: (services_enum | null),_in?: (services_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (services_enum | null),_nin?: (services_enum[] | null)}


/** input type for inserting data into table "services" */
export interface services_insert_input {comment?: (Scalars['String'] | null),customer_user_services?: (customer_user_service_arr_rel_insert_input | null),customer_user_sub_services?: (customer_user_sub_service_arr_rel_insert_input | null),name?: (Scalars['String'] | null),sub_services?: (sub_services_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface services_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface services_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "services" */
export interface services_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: servicesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "services" */
export interface services_obj_rel_insert_input {data: services_insert_input,
/** on conflict condition */
on_conflict?: (services_on_conflict | null)}


/** on conflict condition type for table "services" */
export interface services_on_conflict {constraint: services_constraint,update_columns: services_update_column[],where?: (services_bool_exp | null)}


/** Ordering options when selecting data from "services". */
export interface services_order_by {comment?: (order_by | null),customer_user_services_aggregate?: (customer_user_service_aggregate_order_by | null),customer_user_sub_services_aggregate?: (customer_user_sub_service_aggregate_order_by | null),name?: (order_by | null),sub_services_aggregate?: (sub_services_aggregate_order_by | null)}


/** primary key columns input for table: services */
export interface services_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "services" */
export interface services_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "srv_names" */
export interface srv_namesRequest{
    description?: boolean | number
    name?: boolean | number
    /** An array relationship */
    srv_urls?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urlsRequest] | srv_urlsRequest
    /** An aggregate relationship */
    srv_urls_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urls_aggregateRequest] | srv_urls_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "srv_names" */
export interface srv_names_aggregateRequest{
    aggregate?: srv_names_aggregate_fieldsRequest
    nodes?: srv_namesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "srv_names" */
export interface srv_names_aggregate_fieldsRequest{
    count?: [{columns?: (srv_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: srv_names_max_fieldsRequest
    min?: srv_names_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "srv_names". All fields are combined with a logical 'AND'. */
export interface srv_names_bool_exp {_and?: (srv_names_bool_exp[] | null),_not?: (srv_names_bool_exp | null),_or?: (srv_names_bool_exp[] | null),description?: (String_comparison_exp | null),name?: (String_comparison_exp | null),srv_urls?: (srv_urls_bool_exp | null)}


/** Boolean expression to compare columns of type "srv_names_enum". All fields are combined with logical 'AND'. */
export interface srv_names_enum_comparison_exp {_eq?: (srv_names_enum | null),_in?: (srv_names_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (srv_names_enum | null),_nin?: (srv_names_enum[] | null)}


/** input type for inserting data into table "srv_names" */
export interface srv_names_insert_input {description?: (Scalars['String'] | null),name?: (Scalars['String'] | null),srv_urls?: (srv_urls_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface srv_names_max_fieldsRequest{
    description?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface srv_names_min_fieldsRequest{
    description?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "srv_names" */
export interface srv_names_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: srv_namesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "srv_names" */
export interface srv_names_obj_rel_insert_input {data: srv_names_insert_input,
/** on conflict condition */
on_conflict?: (srv_names_on_conflict | null)}


/** on conflict condition type for table "srv_names" */
export interface srv_names_on_conflict {constraint: srv_names_constraint,update_columns: srv_names_update_column[],where?: (srv_names_bool_exp | null)}


/** Ordering options when selecting data from "srv_names". */
export interface srv_names_order_by {description?: (order_by | null),name?: (order_by | null),srv_urls_aggregate?: (srv_urls_aggregate_order_by | null)}


/** primary key columns input for table: srv_names */
export interface srv_names_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "srv_names" */
export interface srv_names_set_input {description?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "srv_urls" */
export interface srv_urlsRequest{
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    name?: boolean | number
    /** An object relationship */
    srv_name?: srv_namesRequest
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "srv_urls" */
export interface srv_urls_aggregateRequest{
    aggregate?: srv_urls_aggregate_fieldsRequest
    nodes?: srv_urlsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "srv_urls" */
export interface srv_urls_aggregate_fieldsRequest{
    count?: [{columns?: (srv_urls_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: srv_urls_max_fieldsRequest
    min?: srv_urls_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "srv_urls" */
export interface srv_urls_aggregate_order_by {count?: (order_by | null),max?: (srv_urls_max_order_by | null),min?: (srv_urls_min_order_by | null)}


/** input type for inserting array relation for remote table "srv_urls" */
export interface srv_urls_arr_rel_insert_input {data: srv_urls_insert_input[],
/** on conflict condition */
on_conflict?: (srv_urls_on_conflict | null)}


/** Boolean expression to filter rows from the table "srv_urls". All fields are combined with a logical 'AND'. */
export interface srv_urls_bool_exp {_and?: (srv_urls_bool_exp[] | null),_not?: (srv_urls_bool_exp | null),_or?: (srv_urls_bool_exp[] | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),name?: (srv_names_enum_comparison_exp | null),srv_name?: (srv_names_bool_exp | null),url?: (String_comparison_exp | null)}


/** input type for inserting data into table "srv_urls" */
export interface srv_urls_insert_input {customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),name?: (srv_names_enum | null),srv_name?: (srv_names_obj_rel_insert_input | null),url?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface srv_urls_max_fieldsRequest{
    customer_id?: boolean | number
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "srv_urls" */
export interface srv_urls_max_order_by {customer_id?: (order_by | null),url?: (order_by | null)}


/** aggregate min on columns */
export interface srv_urls_min_fieldsRequest{
    customer_id?: boolean | number
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "srv_urls" */
export interface srv_urls_min_order_by {customer_id?: (order_by | null),url?: (order_by | null)}


/** response of any mutation on the table "srv_urls" */
export interface srv_urls_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: srv_urlsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "srv_urls" */
export interface srv_urls_on_conflict {constraint: srv_urls_constraint,update_columns: srv_urls_update_column[],where?: (srv_urls_bool_exp | null)}


/** Ordering options when selecting data from "srv_urls". */
export interface srv_urls_order_by {customer?: (customers_order_by | null),customer_id?: (order_by | null),name?: (order_by | null),srv_name?: (srv_names_order_by | null),url?: (order_by | null)}


/** primary key columns input for table: srv_urls */
export interface srv_urls_pk_columns_input {customer_id: Scalars['uuid'],name: srv_names_enum}


/** input type for updating data in table "srv_urls" */
export interface srv_urls_set_input {customer_id?: (Scalars['uuid'] | null),name?: (srv_names_enum | null),url?: (Scalars['String'] | null)}


/** columns and relationships of "status" */
export interface statusRequest{
    comment?: boolean | number
    /** An array relationship */
    customers?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customersRequest] | customersRequest
    /** An aggregate relationship */
    customers_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customers_aggregateRequest] | customers_aggregateRequest
    name?: boolean | number
    /** An array relationship */
    user_basic_data?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_dataRequest] | user_basic_dataRequest
    /** An aggregate relationship */
    user_basic_data_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_data_aggregateRequest] | user_basic_data_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "status" */
export interface status_aggregateRequest{
    aggregate?: status_aggregate_fieldsRequest
    nodes?: statusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "status" */
export interface status_aggregate_fieldsRequest{
    count?: [{columns?: (status_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: status_max_fieldsRequest
    min?: status_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "status". All fields are combined with a logical 'AND'. */
export interface status_bool_exp {_and?: (status_bool_exp[] | null),_not?: (status_bool_exp | null),_or?: (status_bool_exp[] | null),comment?: (String_comparison_exp | null),customers?: (customers_bool_exp | null),name?: (String_comparison_exp | null),user_basic_data?: (user_basic_data_bool_exp | null)}


/** Boolean expression to compare columns of type "status_enum". All fields are combined with logical 'AND'. */
export interface status_enum_comparison_exp {_eq?: (status_enum | null),_in?: (status_enum[] | null),_is_null?: (Scalars['Boolean'] | null),_neq?: (status_enum | null),_nin?: (status_enum[] | null)}


/** input type for inserting data into table "status" */
export interface status_insert_input {comment?: (Scalars['String'] | null),customers?: (customers_arr_rel_insert_input | null),name?: (Scalars['String'] | null),user_basic_data?: (user_basic_data_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface status_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface status_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "status" */
export interface status_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: statusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "status" */
export interface status_obj_rel_insert_input {data: status_insert_input,
/** on conflict condition */
on_conflict?: (status_on_conflict | null)}


/** on conflict condition type for table "status" */
export interface status_on_conflict {constraint: status_constraint,update_columns: status_update_column[],where?: (status_bool_exp | null)}


/** Ordering options when selecting data from "status". */
export interface status_order_by {comment?: (order_by | null),customers_aggregate?: (customers_aggregate_order_by | null),name?: (order_by | null),user_basic_data_aggregate?: (user_basic_data_aggregate_order_by | null)}


/** primary key columns input for table: status */
export interface status_pk_columns_input {name: Scalars['String']}


/** input type for updating data in table "status" */
export interface status_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** columns and relationships of "sub_services" */
export interface sub_servicesRequest{
    comment?: boolean | number
    /** An array relationship */
    customer_user_sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** An aggregate relationship */
    customer_user_sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    name?: boolean | number
    service?: boolean | number
    /** An object relationship */
    serviceByService?: servicesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "sub_services" */
export interface sub_services_aggregateRequest{
    aggregate?: sub_services_aggregate_fieldsRequest
    nodes?: sub_servicesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "sub_services" */
export interface sub_services_aggregate_fieldsRequest{
    count?: [{columns?: (sub_services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: sub_services_max_fieldsRequest
    min?: sub_services_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "sub_services" */
export interface sub_services_aggregate_order_by {count?: (order_by | null),max?: (sub_services_max_order_by | null),min?: (sub_services_min_order_by | null)}


/** input type for inserting array relation for remote table "sub_services" */
export interface sub_services_arr_rel_insert_input {data: sub_services_insert_input[],
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}


/** Boolean expression to filter rows from the table "sub_services". All fields are combined with a logical 'AND'. */
export interface sub_services_bool_exp {_and?: (sub_services_bool_exp[] | null),_not?: (sub_services_bool_exp | null),_or?: (sub_services_bool_exp[] | null),comment?: (String_comparison_exp | null),customer_user_sub_services?: (customer_user_sub_service_bool_exp | null),name?: (String_comparison_exp | null),service?: (services_enum_comparison_exp | null),serviceByService?: (services_bool_exp | null)}


/** input type for inserting data into table "sub_services" */
export interface sub_services_insert_input {comment?: (Scalars['String'] | null),customer_user_sub_services?: (customer_user_sub_service_arr_rel_insert_input | null),name?: (Scalars['String'] | null),service?: (services_enum | null),serviceByService?: (services_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface sub_services_max_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "sub_services" */
export interface sub_services_max_order_by {comment?: (order_by | null),name?: (order_by | null)}


/** aggregate min on columns */
export interface sub_services_min_fieldsRequest{
    comment?: boolean | number
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "sub_services" */
export interface sub_services_min_order_by {comment?: (order_by | null),name?: (order_by | null)}


/** response of any mutation on the table "sub_services" */
export interface sub_services_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: sub_servicesRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "sub_services" */
export interface sub_services_obj_rel_insert_input {data: sub_services_insert_input,
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}


/** on conflict condition type for table "sub_services" */
export interface sub_services_on_conflict {constraint: sub_services_constraint,update_columns: sub_services_update_column[],where?: (sub_services_bool_exp | null)}


/** Ordering options when selecting data from "sub_services". */
export interface sub_services_order_by {comment?: (order_by | null),customer_user_sub_services_aggregate?: (customer_user_sub_service_aggregate_order_by | null),name?: (order_by | null),service?: (order_by | null),serviceByService?: (services_order_by | null)}


/** primary key columns input for table: sub_services */
export interface sub_services_pk_columns_input {name: Scalars['String'],service: services_enum}


/** input type for updating data in table "sub_services" */
export interface sub_services_set_input {comment?: (Scalars['String'] | null),name?: (Scalars['String'] | null),service?: (services_enum | null)}

export interface subscription_rootRequest{
    /** fetch data from the table: "admins" */
    admins?: [{
    /** distinct select on columns */
    distinct_on?: (admins_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_bool_exp | null)},adminsRequest] | adminsRequest
    /** fetch aggregated fields from the table: "admins" */
    admins_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (admins_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_bool_exp | null)},admins_aggregateRequest] | admins_aggregateRequest
    /** fetch data from the table: "admins_auth_logs" */
    admins_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logsRequest] | admins_auth_logsRequest
    /** An aggregate relationship */
    admins_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (admins_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (admins_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (admins_auth_logs_bool_exp | null)},admins_auth_logs_aggregateRequest] | admins_auth_logs_aggregateRequest
    /** fetch data from the table: "admins_auth_logs" using primary key columns */
    admins_auth_logs_by_pk?: [{id: Scalars['Int']},admins_auth_logsRequest]
    /** fetch data from the table: "admins" using primary key columns */
    admins_by_pk?: [{id: Scalars['uuid']},adminsRequest]
    /** fetch data from the table: "auth_methods" */
    auth_methods?: [{
    /** distinct select on columns */
    distinct_on?: (auth_methods_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (auth_methods_order_by[] | null),
    /** filter the rows returned */
    where?: (auth_methods_bool_exp | null)},auth_methodsRequest] | auth_methodsRequest
    /** fetch aggregated fields from the table: "auth_methods" */
    auth_methods_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (auth_methods_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (auth_methods_order_by[] | null),
    /** filter the rows returned */
    where?: (auth_methods_bool_exp | null)},auth_methods_aggregateRequest] | auth_methods_aggregateRequest
    /** fetch data from the table: "auth_methods" using primary key columns */
    auth_methods_by_pk?: [{name: Scalars['String']},auth_methodsRequest]
    /** fetch data from the table: "blacklist_refresh_token" */
    blacklist_refresh_token?: [{
    /** distinct select on columns */
    distinct_on?: (blacklist_refresh_token_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (blacklist_refresh_token_order_by[] | null),
    /** filter the rows returned */
    where?: (blacklist_refresh_token_bool_exp | null)},blacklist_refresh_tokenRequest] | blacklist_refresh_tokenRequest
    /** fetch aggregated fields from the table: "blacklist_refresh_token" */
    blacklist_refresh_token_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (blacklist_refresh_token_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (blacklist_refresh_token_order_by[] | null),
    /** filter the rows returned */
    where?: (blacklist_refresh_token_bool_exp | null)},blacklist_refresh_token_aggregateRequest] | blacklist_refresh_token_aggregateRequest
    /** fetch data from the table: "blacklist_refresh_token" using primary key columns */
    blacklist_refresh_token_by_pk?: [{sig: Scalars['String']},blacklist_refresh_tokenRequest]
    /** fetch data from the table: "connectors" */
    connectors?: [{
    /** distinct select on columns */
    distinct_on?: (connectors_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (connectors_order_by[] | null),
    /** filter the rows returned */
    where?: (connectors_bool_exp | null)},connectorsRequest] | connectorsRequest
    /** fetch aggregated fields from the table: "connectors" */
    connectors_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (connectors_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (connectors_order_by[] | null),
    /** filter the rows returned */
    where?: (connectors_bool_exp | null)},connectors_aggregateRequest] | connectors_aggregateRequest
    /** fetch data from the table: "connectors" using primary key columns */
    connectors_by_pk?: [{name: Scalars['String']},connectorsRequest]
    /** fetch data from the table: "customer_user" */
    customer_user?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_userRequest] | customer_userRequest
    /** fetch aggregated fields from the table: "customer_user" */
    customer_user_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_user_aggregateRequest] | customer_user_aggregateRequest
    /** fetch data from the table: "customer_user" using primary key columns */
    customer_user_by_pk?: [{customer_id: Scalars['uuid'],user_id: Scalars['uuid']},customer_userRequest]
    /** fetch data from the table: "customer_user_service" */
    customer_user_service?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_serviceRequest] | customer_user_serviceRequest
    /** fetch aggregated fields from the table: "customer_user_service" */
    customer_user_service_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_service_aggregateRequest] | customer_user_service_aggregateRequest
    /** fetch data from the table: "customer_user_service" using primary key columns */
    customer_user_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']},customer_user_serviceRequest]
    /** fetch data from the table: "customer_user_sub_service" */
    customer_user_sub_service?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** fetch aggregated fields from the table: "customer_user_sub_service" */
    customer_user_sub_service_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    /** fetch data from the table: "customer_user_sub_service" using primary key columns */
    customer_user_sub_service_by_pk?: [{customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']},customer_user_sub_serviceRequest]
    /** An array relationship */
    customers?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customersRequest] | customersRequest
    /** An aggregate relationship */
    customers_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_bool_exp | null)},customers_aggregateRequest] | customers_aggregateRequest
    /** fetch data from the table: "customers" using primary key columns */
    customers_by_pk?: [{id: Scalars['uuid']},customersRequest]
    /** fetch data from the table: "customers_contact" */
    customers_contact?: [{
    /** distinct select on columns */
    distinct_on?: (customers_contact_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_contact_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_contact_bool_exp | null)},customers_contactRequest] | customers_contactRequest
    /** fetch aggregated fields from the table: "customers_contact" */
    customers_contact_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customers_contact_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customers_contact_order_by[] | null),
    /** filter the rows returned */
    where?: (customers_contact_bool_exp | null)},customers_contact_aggregateRequest] | customers_contact_aggregateRequest
    /** fetch data from the table: "customers_contact" using primary key columns */
    customers_contact_by_pk?: [{customer_id: Scalars['uuid']},customers_contactRequest]
    /** fetch data from the table: "feature_names" */
    feature_names?: [{
    /** distinct select on columns */
    distinct_on?: (feature_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (feature_names_order_by[] | null),
    /** filter the rows returned */
    where?: (feature_names_bool_exp | null)},feature_namesRequest] | feature_namesRequest
    /** fetch aggregated fields from the table: "feature_names" */
    feature_names_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (feature_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (feature_names_order_by[] | null),
    /** filter the rows returned */
    where?: (feature_names_bool_exp | null)},feature_names_aggregateRequest] | feature_names_aggregateRequest
    /** fetch data from the table: "feature_names" using primary key columns */
    feature_names_by_pk?: [{name: Scalars['String']},feature_namesRequest]
    /** An array relationship */
    features?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},featuresRequest] | featuresRequest
    /** An aggregate relationship */
    features_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (features_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (features_order_by[] | null),
    /** filter the rows returned */
    where?: (features_bool_exp | null)},features_aggregateRequest] | features_aggregateRequest
    /** fetch data from the table: "features" using primary key columns */
    features_by_pk?: [{customer_id: Scalars['uuid'],name: feature_names_enum},featuresRequest]
    /** fetch data from the table: "partners" */
    partners?: [{
    /** distinct select on columns */
    distinct_on?: (partners_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (partners_order_by[] | null),
    /** filter the rows returned */
    where?: (partners_bool_exp | null)},partnersRequest] | partnersRequest
    /** fetch aggregated fields from the table: "partners" */
    partners_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (partners_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (partners_order_by[] | null),
    /** filter the rows returned */
    where?: (partners_bool_exp | null)},partners_aggregateRequest] | partners_aggregateRequest
    /** fetch data from the table: "partners" using primary key columns */
    partners_by_pk?: [{id: Scalars['uuid']},partnersRequest]
    /** fetch data from the table: "roles" */
    roles?: [{
    /** distinct select on columns */
    distinct_on?: (roles_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (roles_order_by[] | null),
    /** filter the rows returned */
    where?: (roles_bool_exp | null)},rolesRequest] | rolesRequest
    /** fetch aggregated fields from the table: "roles" */
    roles_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (roles_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (roles_order_by[] | null),
    /** filter the rows returned */
    where?: (roles_bool_exp | null)},roles_aggregateRequest] | roles_aggregateRequest
    /** fetch data from the table: "roles" using primary key columns */
    roles_by_pk?: [{name: Scalars['String']},rolesRequest]
    /** fetch data from the table: "services" */
    services?: [{
    /** distinct select on columns */
    distinct_on?: (services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (services_order_by[] | null),
    /** filter the rows returned */
    where?: (services_bool_exp | null)},servicesRequest] | servicesRequest
    /** fetch aggregated fields from the table: "services" */
    services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (services_order_by[] | null),
    /** filter the rows returned */
    where?: (services_bool_exp | null)},services_aggregateRequest] | services_aggregateRequest
    /** fetch data from the table: "services" using primary key columns */
    services_by_pk?: [{name: Scalars['String']},servicesRequest]
    /** fetch data from the table: "srv_names" */
    srv_names?: [{
    /** distinct select on columns */
    distinct_on?: (srv_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_names_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_names_bool_exp | null)},srv_namesRequest] | srv_namesRequest
    /** fetch aggregated fields from the table: "srv_names" */
    srv_names_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_names_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_names_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_names_bool_exp | null)},srv_names_aggregateRequest] | srv_names_aggregateRequest
    /** fetch data from the table: "srv_names" using primary key columns */
    srv_names_by_pk?: [{name: Scalars['String']},srv_namesRequest]
    /** An array relationship */
    srv_urls?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urlsRequest] | srv_urlsRequest
    /** An aggregate relationship */
    srv_urls_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (srv_urls_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (srv_urls_order_by[] | null),
    /** filter the rows returned */
    where?: (srv_urls_bool_exp | null)},srv_urls_aggregateRequest] | srv_urls_aggregateRequest
    /** fetch data from the table: "srv_urls" using primary key columns */
    srv_urls_by_pk?: [{customer_id: Scalars['uuid'],name: srv_names_enum},srv_urlsRequest]
    /** fetch data from the table: "status" */
    status?: [{
    /** distinct select on columns */
    distinct_on?: (status_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (status_order_by[] | null),
    /** filter the rows returned */
    where?: (status_bool_exp | null)},statusRequest] | statusRequest
    /** fetch aggregated fields from the table: "status" */
    status_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (status_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (status_order_by[] | null),
    /** filter the rows returned */
    where?: (status_bool_exp | null)},status_aggregateRequest] | status_aggregateRequest
    /** fetch data from the table: "status" using primary key columns */
    status_by_pk?: [{name: Scalars['String']},statusRequest]
    /** fetch data from the table: "sub_services" */
    sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_servicesRequest] | sub_servicesRequest
    /** An aggregate relationship */
    sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (sub_services_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (sub_services_order_by[] | null),
    /** filter the rows returned */
    where?: (sub_services_bool_exp | null)},sub_services_aggregateRequest] | sub_services_aggregateRequest
    /** fetch data from the table: "sub_services" using primary key columns */
    sub_services_by_pk?: [{name: Scalars['String'],service: services_enum},sub_servicesRequest]
    /** An array relationship */
    user_basic_data?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_dataRequest] | user_basic_dataRequest
    /** An aggregate relationship */
    user_basic_data_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (user_basic_data_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (user_basic_data_order_by[] | null),
    /** filter the rows returned */
    where?: (user_basic_data_bool_exp | null)},user_basic_data_aggregateRequest] | user_basic_data_aggregateRequest
    /** fetch data from the table: "user_basic_data" using primary key columns */
    user_basic_data_by_pk?: [{user_id: Scalars['uuid']},user_basic_dataRequest]
    /** An array relationship */
    users?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},usersRequest] | usersRequest
    /** An aggregate relationship */
    users_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_order_by[] | null),
    /** filter the rows returned */
    where?: (users_bool_exp | null)},users_aggregateRequest] | users_aggregateRequest
    /** An array relationship */
    users_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logsRequest] | users_auth_logsRequest
    /** An aggregate relationship */
    users_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logs_aggregateRequest] | users_auth_logs_aggregateRequest
    /** fetch data from the table: "users_auth_logs" using primary key columns */
    users_auth_logs_by_pk?: [{id: Scalars['Int']},users_auth_logsRequest]
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: [{id: Scalars['uuid']},usersRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export interface timestamptz_comparison_exp {_eq?: (Scalars['timestamptz'] | null),_gt?: (Scalars['timestamptz'] | null),_gte?: (Scalars['timestamptz'] | null),_in?: (Scalars['timestamptz'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['timestamptz'] | null),_lte?: (Scalars['timestamptz'] | null),_neq?: (Scalars['timestamptz'] | null),_nin?: (Scalars['timestamptz'][] | null)}


/** columns and relationships of "user_basic_data" */
export interface user_basic_dataRequest{
    email?: boolean | number
    name?: boolean | number
    password?: boolean | number
    status?: boolean | number
    /** An object relationship */
    statusByStatus?: statusRequest
    /** An object relationship */
    user?: usersRequest
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "user_basic_data" */
export interface user_basic_data_aggregateRequest{
    aggregate?: user_basic_data_aggregate_fieldsRequest
    nodes?: user_basic_dataRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "user_basic_data" */
export interface user_basic_data_aggregate_fieldsRequest{
    count?: [{columns?: (user_basic_data_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: user_basic_data_max_fieldsRequest
    min?: user_basic_data_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "user_basic_data" */
export interface user_basic_data_aggregate_order_by {count?: (order_by | null),max?: (user_basic_data_max_order_by | null),min?: (user_basic_data_min_order_by | null)}


/** input type for inserting array relation for remote table "user_basic_data" */
export interface user_basic_data_arr_rel_insert_input {data: user_basic_data_insert_input[],
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}


/** Boolean expression to filter rows from the table "user_basic_data". All fields are combined with a logical 'AND'. */
export interface user_basic_data_bool_exp {_and?: (user_basic_data_bool_exp[] | null),_not?: (user_basic_data_bool_exp | null),_or?: (user_basic_data_bool_exp[] | null),email?: (bpchar_comparison_exp | null),name?: (bpchar_comparison_exp | null),password?: (bpchar_comparison_exp | null),status?: (status_enum_comparison_exp | null),statusByStatus?: (status_bool_exp | null),user?: (users_bool_exp | null),user_id?: (uuid_comparison_exp | null)}


/** input type for inserting data into table "user_basic_data" */
export interface user_basic_data_insert_input {email?: (Scalars['bpchar'] | null),name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),status?: (status_enum | null),statusByStatus?: (status_obj_rel_insert_input | null),user?: (users_obj_rel_insert_input | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate max on columns */
export interface user_basic_data_max_fieldsRequest{
    email?: boolean | number
    name?: boolean | number
    password?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "user_basic_data" */
export interface user_basic_data_max_order_by {email?: (order_by | null),name?: (order_by | null),password?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface user_basic_data_min_fieldsRequest{
    email?: boolean | number
    name?: boolean | number
    password?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "user_basic_data" */
export interface user_basic_data_min_order_by {email?: (order_by | null),name?: (order_by | null),password?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "user_basic_data" */
export interface user_basic_data_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: user_basic_dataRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "user_basic_data" */
export interface user_basic_data_obj_rel_insert_input {data: user_basic_data_insert_input,
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}


/** on conflict condition type for table "user_basic_data" */
export interface user_basic_data_on_conflict {constraint: user_basic_data_constraint,update_columns: user_basic_data_update_column[],where?: (user_basic_data_bool_exp | null)}


/** Ordering options when selecting data from "user_basic_data". */
export interface user_basic_data_order_by {email?: (order_by | null),name?: (order_by | null),password?: (order_by | null),status?: (order_by | null),statusByStatus?: (status_order_by | null),user?: (users_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: user_basic_data */
export interface user_basic_data_pk_columns_input {user_id: Scalars['uuid']}


/** input type for updating data in table "user_basic_data" */
export interface user_basic_data_set_input {email?: (Scalars['bpchar'] | null),name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),status?: (status_enum | null),user_id?: (Scalars['uuid'] | null)}


/** columns and relationships of "users" */
export interface usersRequest{
    created_at?: boolean | number
    /** An array relationship */
    customer_user_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_serviceRequest] | customer_user_serviceRequest
    /** An aggregate relationship */
    customer_user_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_service_bool_exp | null)},customer_user_service_aggregateRequest] | customer_user_service_aggregateRequest
    /** An array relationship */
    customer_user_sub_services?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_serviceRequest] | customer_user_sub_serviceRequest
    /** An aggregate relationship */
    customer_user_sub_services_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_sub_service_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_sub_service_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_sub_service_bool_exp | null)},customer_user_sub_service_aggregateRequest] | customer_user_sub_service_aggregateRequest
    /** An array relationship */
    customer_users?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_userRequest] | customer_userRequest
    /** An aggregate relationship */
    customer_users_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (customer_user_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (customer_user_order_by[] | null),
    /** filter the rows returned */
    where?: (customer_user_bool_exp | null)},customer_user_aggregateRequest] | customer_user_aggregateRequest
    id?: boolean | number
    phone?: boolean | number
    role?: boolean | number
    /** An object relationship */
    roleByRole?: rolesRequest
    token?: boolean | number
    updated_at?: boolean | number
    /** An object relationship */
    user_basic_data?: user_basic_dataRequest
    /** An object relationship */
    user_refresh_tokens?: blacklist_refresh_tokenRequest
    /** An array relationship */
    users_auth_logs?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logsRequest] | users_auth_logsRequest
    /** An aggregate relationship */
    users_auth_logs_aggregate?: [{
    /** distinct select on columns */
    distinct_on?: (users_auth_logs_select_column[] | null),
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null),
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null),
    /** sort the rows by one or more columns */
    order_by?: (users_auth_logs_order_by[] | null),
    /** filter the rows returned */
    where?: (users_auth_logs_bool_exp | null)},users_auth_logs_aggregateRequest] | users_auth_logs_aggregateRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "users" */
export interface users_aggregateRequest{
    aggregate?: users_aggregate_fieldsRequest
    nodes?: usersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "users" */
export interface users_aggregate_fieldsRequest{
    count?: [{columns?: (users_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: users_max_fieldsRequest
    min?: users_min_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "users" */
export interface users_aggregate_order_by {count?: (order_by | null),max?: (users_max_order_by | null),min?: (users_min_order_by | null)}


/** input type for inserting array relation for remote table "users" */
export interface users_arr_rel_insert_input {data: users_insert_input[],
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}


/** columns and relationships of "users_auth_logs" */
export interface users_auth_logsRequest{
    /** An object relationship */
    authMethodByAuthMethod?: auth_methodsRequest
    auth_method?: boolean | number
    authenticated_at?: boolean | number
    /** An object relationship */
    customer?: customersRequest
    customer_id?: boolean | number
    id?: boolean | number
    /** An object relationship */
    user?: usersRequest
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "users_auth_logs" */
export interface users_auth_logs_aggregateRequest{
    aggregate?: users_auth_logs_aggregate_fieldsRequest
    nodes?: users_auth_logsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "users_auth_logs" */
export interface users_auth_logs_aggregate_fieldsRequest{
    avg?: users_auth_logs_avg_fieldsRequest
    count?: [{columns?: (users_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}] | boolean | number
    max?: users_auth_logs_max_fieldsRequest
    min?: users_auth_logs_min_fieldsRequest
    stddev?: users_auth_logs_stddev_fieldsRequest
    stddev_pop?: users_auth_logs_stddev_pop_fieldsRequest
    stddev_samp?: users_auth_logs_stddev_samp_fieldsRequest
    sum?: users_auth_logs_sum_fieldsRequest
    var_pop?: users_auth_logs_var_pop_fieldsRequest
    var_samp?: users_auth_logs_var_samp_fieldsRequest
    variance?: users_auth_logs_variance_fieldsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "users_auth_logs" */
export interface users_auth_logs_aggregate_order_by {avg?: (users_auth_logs_avg_order_by | null),count?: (order_by | null),max?: (users_auth_logs_max_order_by | null),min?: (users_auth_logs_min_order_by | null),stddev?: (users_auth_logs_stddev_order_by | null),stddev_pop?: (users_auth_logs_stddev_pop_order_by | null),stddev_samp?: (users_auth_logs_stddev_samp_order_by | null),sum?: (users_auth_logs_sum_order_by | null),var_pop?: (users_auth_logs_var_pop_order_by | null),var_samp?: (users_auth_logs_var_samp_order_by | null),variance?: (users_auth_logs_variance_order_by | null)}


/** input type for inserting array relation for remote table "users_auth_logs" */
export interface users_auth_logs_arr_rel_insert_input {data: users_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (users_auth_logs_on_conflict | null)}


/** aggregate avg on columns */
export interface users_auth_logs_avg_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "users_auth_logs" */
export interface users_auth_logs_avg_order_by {id?: (order_by | null)}


/** Boolean expression to filter rows from the table "users_auth_logs". All fields are combined with a logical 'AND'. */
export interface users_auth_logs_bool_exp {_and?: (users_auth_logs_bool_exp[] | null),_not?: (users_auth_logs_bool_exp | null),_or?: (users_auth_logs_bool_exp[] | null),authMethodByAuthMethod?: (auth_methods_bool_exp | null),auth_method?: (auth_methods_enum_comparison_exp | null),authenticated_at?: (timestamptz_comparison_exp | null),customer?: (customers_bool_exp | null),customer_id?: (uuid_comparison_exp | null),id?: (Int_comparison_exp | null),user?: (users_bool_exp | null),user_id?: (uuid_comparison_exp | null)}


/** input type for incrementing numeric columns in table "users_auth_logs" */
export interface users_auth_logs_inc_input {id?: (Scalars['Int'] | null)}


/** input type for inserting data into table "users_auth_logs" */
export interface users_auth_logs_insert_input {authMethodByAuthMethod?: (auth_methods_obj_rel_insert_input | null),auth_method?: (auth_methods_enum | null),authenticated_at?: (Scalars['timestamptz'] | null),customer?: (customers_obj_rel_insert_input | null),customer_id?: (Scalars['uuid'] | null),id?: (Scalars['Int'] | null),user?: (users_obj_rel_insert_input | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate max on columns */
export interface users_auth_logs_max_fieldsRequest{
    authenticated_at?: boolean | number
    customer_id?: boolean | number
    id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "users_auth_logs" */
export interface users_auth_logs_max_order_by {authenticated_at?: (order_by | null),customer_id?: (order_by | null),id?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface users_auth_logs_min_fieldsRequest{
    authenticated_at?: boolean | number
    customer_id?: boolean | number
    id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "users_auth_logs" */
export interface users_auth_logs_min_order_by {authenticated_at?: (order_by | null),customer_id?: (order_by | null),id?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "users_auth_logs" */
export interface users_auth_logs_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: users_auth_logsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on conflict condition type for table "users_auth_logs" */
export interface users_auth_logs_on_conflict {constraint: users_auth_logs_constraint,update_columns: users_auth_logs_update_column[],where?: (users_auth_logs_bool_exp | null)}


/** Ordering options when selecting data from "users_auth_logs". */
export interface users_auth_logs_order_by {authMethodByAuthMethod?: (auth_methods_order_by | null),auth_method?: (order_by | null),authenticated_at?: (order_by | null),customer?: (customers_order_by | null),customer_id?: (order_by | null),id?: (order_by | null),user?: (users_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: users_auth_logs */
export interface users_auth_logs_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "users_auth_logs" */
export interface users_auth_logs_set_input {auth_method?: (auth_methods_enum | null),authenticated_at?: (Scalars['timestamptz'] | null),customer_id?: (Scalars['uuid'] | null),id?: (Scalars['Int'] | null),user_id?: (Scalars['uuid'] | null)}


/** aggregate stddev on columns */
export interface users_auth_logs_stddev_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "users_auth_logs" */
export interface users_auth_logs_stddev_order_by {id?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface users_auth_logs_stddev_pop_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "users_auth_logs" */
export interface users_auth_logs_stddev_pop_order_by {id?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface users_auth_logs_stddev_samp_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "users_auth_logs" */
export interface users_auth_logs_stddev_samp_order_by {id?: (order_by | null)}


/** aggregate sum on columns */
export interface users_auth_logs_sum_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "users_auth_logs" */
export interface users_auth_logs_sum_order_by {id?: (order_by | null)}


/** aggregate var_pop on columns */
export interface users_auth_logs_var_pop_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "users_auth_logs" */
export interface users_auth_logs_var_pop_order_by {id?: (order_by | null)}


/** aggregate var_samp on columns */
export interface users_auth_logs_var_samp_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "users_auth_logs" */
export interface users_auth_logs_var_samp_order_by {id?: (order_by | null)}


/** aggregate variance on columns */
export interface users_auth_logs_variance_fieldsRequest{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "users_auth_logs" */
export interface users_auth_logs_variance_order_by {id?: (order_by | null)}


/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export interface users_bool_exp {_and?: (users_bool_exp[] | null),_not?: (users_bool_exp | null),_or?: (users_bool_exp[] | null),created_at?: (timestamptz_comparison_exp | null),customer_user_services?: (customer_user_service_bool_exp | null),customer_user_sub_services?: (customer_user_sub_service_bool_exp | null),customer_users?: (customer_user_bool_exp | null),id?: (uuid_comparison_exp | null),phone?: (String_comparison_exp | null),role?: (roles_enum_comparison_exp | null),roleByRole?: (roles_bool_exp | null),token?: (bpchar_comparison_exp | null),updated_at?: (timestamptz_comparison_exp | null),user_basic_data?: (user_basic_data_bool_exp | null),user_refresh_tokens?: (blacklist_refresh_token_bool_exp | null),users_auth_logs?: (users_auth_logs_bool_exp | null)}


/** input type for inserting data into table "users" */
export interface users_insert_input {created_at?: (Scalars['timestamptz'] | null),customer_user_services?: (customer_user_service_arr_rel_insert_input | null),customer_user_sub_services?: (customer_user_sub_service_arr_rel_insert_input | null),customer_users?: (customer_user_arr_rel_insert_input | null),id?: (Scalars['uuid'] | null),phone?: (Scalars['String'] | null),role?: (roles_enum | null),roleByRole?: (roles_obj_rel_insert_input | null),token?: (Scalars['bpchar'] | null),updated_at?: (Scalars['timestamptz'] | null),user_basic_data?: (user_basic_data_obj_rel_insert_input | null),user_refresh_tokens?: (blacklist_refresh_token_obj_rel_insert_input | null),users_auth_logs?: (users_auth_logs_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface users_max_fieldsRequest{
    created_at?: boolean | number
    id?: boolean | number
    phone?: boolean | number
    token?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "users" */
export interface users_max_order_by {created_at?: (order_by | null),id?: (order_by | null),phone?: (order_by | null),token?: (order_by | null),updated_at?: (order_by | null)}


/** aggregate min on columns */
export interface users_min_fieldsRequest{
    created_at?: boolean | number
    id?: boolean | number
    phone?: boolean | number
    token?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "users" */
export interface users_min_order_by {created_at?: (order_by | null),id?: (order_by | null),phone?: (order_by | null),token?: (order_by | null),updated_at?: (order_by | null)}


/** response of any mutation on the table "users" */
export interface users_mutation_responseRequest{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: usersRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "users" */
export interface users_obj_rel_insert_input {data: users_insert_input,
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}


/** on conflict condition type for table "users" */
export interface users_on_conflict {constraint: users_constraint,update_columns: users_update_column[],where?: (users_bool_exp | null)}


/** Ordering options when selecting data from "users". */
export interface users_order_by {created_at?: (order_by | null),customer_user_services_aggregate?: (customer_user_service_aggregate_order_by | null),customer_user_sub_services_aggregate?: (customer_user_sub_service_aggregate_order_by | null),customer_users_aggregate?: (customer_user_aggregate_order_by | null),id?: (order_by | null),phone?: (order_by | null),role?: (order_by | null),roleByRole?: (roles_order_by | null),token?: (order_by | null),updated_at?: (order_by | null),user_basic_data?: (user_basic_data_order_by | null),user_refresh_tokens?: (blacklist_refresh_token_order_by | null),users_auth_logs_aggregate?: (users_auth_logs_aggregate_order_by | null)}


/** primary key columns input for table: users */
export interface users_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "users" */
export interface users_set_input {created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),phone?: (Scalars['String'] | null),role?: (roles_enum | null),token?: (Scalars['bpchar'] | null),updated_at?: (Scalars['timestamptz'] | null)}


/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export interface uuid_comparison_exp {_eq?: (Scalars['uuid'] | null),_gt?: (Scalars['uuid'] | null),_gte?: (Scalars['uuid'] | null),_in?: (Scalars['uuid'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['uuid'] | null),_lte?: (Scalars['uuid'] | null),_neq?: (Scalars['uuid'] | null),_nin?: (Scalars['uuid'][] | null)}

export type QueryRequest = query_rootRequest
export type MutationRequest = mutation_rootRequest
export type SubscriptionRequest = subscription_rootRequest


const InsertUserOrWarnIfExistsOutput_possibleTypes = ['InsertUserOrWarnIfExistsOutput']
export const isInsertUserOrWarnIfExistsOutput = (obj?: { __typename?: any } | null): obj is InsertUserOrWarnIfExistsOutput => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isInsertUserOrWarnIfExistsOutput"')
  return InsertUserOrWarnIfExistsOutput_possibleTypes.includes(obj.__typename)
}



const ReturnAffectedItemId_possibleTypes = ['ReturnAffectedItemId']
export const isReturnAffectedItemId = (obj?: { __typename?: any } | null): obj is ReturnAffectedItemId => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReturnAffectedItemId"')
  return ReturnAffectedItemId_possibleTypes.includes(obj.__typename)
}



const ReturnAffectedRows_possibleTypes = ['ReturnAffectedRows']
export const isReturnAffectedRows = (obj?: { __typename?: any } | null): obj is ReturnAffectedRows => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReturnAffectedRows"')
  return ReturnAffectedRows_possibleTypes.includes(obj.__typename)
}



const SigninOutput_possibleTypes = ['SigninOutput']
export const isSigninOutput = (obj?: { __typename?: any } | null): obj is SigninOutput => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSigninOutput"')
  return SigninOutput_possibleTypes.includes(obj.__typename)
}



const SinginOutputWithRefreshToken_possibleTypes = ['SinginOutputWithRefreshToken']
export const isSinginOutputWithRefreshToken = (obj?: { __typename?: any } | null): obj is SinginOutputWithRefreshToken => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSinginOutputWithRefreshToken"')
  return SinginOutputWithRefreshToken_possibleTypes.includes(obj.__typename)
}



const UpdateUserOutput_possibleTypes = ['UpdateUserOutput']
export const isUpdateUserOutput = (obj?: { __typename?: any } | null): obj is UpdateUserOutput => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUserOutput"')
  return UpdateUserOutput_possibleTypes.includes(obj.__typename)
}



const admins_possibleTypes = ['admins']
export const isadmins = (obj?: { __typename?: any } | null): obj is admins => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins"')
  return admins_possibleTypes.includes(obj.__typename)
}



const admins_aggregate_possibleTypes = ['admins_aggregate']
export const isadmins_aggregate = (obj?: { __typename?: any } | null): obj is admins_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_aggregate"')
  return admins_aggregate_possibleTypes.includes(obj.__typename)
}



const admins_aggregate_fields_possibleTypes = ['admins_aggregate_fields']
export const isadmins_aggregate_fields = (obj?: { __typename?: any } | null): obj is admins_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_aggregate_fields"')
  return admins_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_possibleTypes = ['admins_auth_logs']
export const isadmins_auth_logs = (obj?: { __typename?: any } | null): obj is admins_auth_logs => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs"')
  return admins_auth_logs_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_aggregate_possibleTypes = ['admins_auth_logs_aggregate']
export const isadmins_auth_logs_aggregate = (obj?: { __typename?: any } | null): obj is admins_auth_logs_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_aggregate"')
  return admins_auth_logs_aggregate_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_aggregate_fields_possibleTypes = ['admins_auth_logs_aggregate_fields']
export const isadmins_auth_logs_aggregate_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_aggregate_fields"')
  return admins_auth_logs_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_avg_fields_possibleTypes = ['admins_auth_logs_avg_fields']
export const isadmins_auth_logs_avg_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_avg_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_avg_fields"')
  return admins_auth_logs_avg_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_max_fields_possibleTypes = ['admins_auth_logs_max_fields']
export const isadmins_auth_logs_max_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_max_fields"')
  return admins_auth_logs_max_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_min_fields_possibleTypes = ['admins_auth_logs_min_fields']
export const isadmins_auth_logs_min_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_min_fields"')
  return admins_auth_logs_min_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_mutation_response_possibleTypes = ['admins_auth_logs_mutation_response']
export const isadmins_auth_logs_mutation_response = (obj?: { __typename?: any } | null): obj is admins_auth_logs_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_mutation_response"')
  return admins_auth_logs_mutation_response_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_stddev_fields_possibleTypes = ['admins_auth_logs_stddev_fields']
export const isadmins_auth_logs_stddev_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_stddev_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_stddev_fields"')
  return admins_auth_logs_stddev_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_stddev_pop_fields_possibleTypes = ['admins_auth_logs_stddev_pop_fields']
export const isadmins_auth_logs_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_stddev_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_stddev_pop_fields"')
  return admins_auth_logs_stddev_pop_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_stddev_samp_fields_possibleTypes = ['admins_auth_logs_stddev_samp_fields']
export const isadmins_auth_logs_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_stddev_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_stddev_samp_fields"')
  return admins_auth_logs_stddev_samp_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_sum_fields_possibleTypes = ['admins_auth_logs_sum_fields']
export const isadmins_auth_logs_sum_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_sum_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_sum_fields"')
  return admins_auth_logs_sum_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_var_pop_fields_possibleTypes = ['admins_auth_logs_var_pop_fields']
export const isadmins_auth_logs_var_pop_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_var_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_var_pop_fields"')
  return admins_auth_logs_var_pop_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_var_samp_fields_possibleTypes = ['admins_auth_logs_var_samp_fields']
export const isadmins_auth_logs_var_samp_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_var_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_var_samp_fields"')
  return admins_auth_logs_var_samp_fields_possibleTypes.includes(obj.__typename)
}



const admins_auth_logs_variance_fields_possibleTypes = ['admins_auth_logs_variance_fields']
export const isadmins_auth_logs_variance_fields = (obj?: { __typename?: any } | null): obj is admins_auth_logs_variance_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_auth_logs_variance_fields"')
  return admins_auth_logs_variance_fields_possibleTypes.includes(obj.__typename)
}



const admins_max_fields_possibleTypes = ['admins_max_fields']
export const isadmins_max_fields = (obj?: { __typename?: any } | null): obj is admins_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_max_fields"')
  return admins_max_fields_possibleTypes.includes(obj.__typename)
}



const admins_min_fields_possibleTypes = ['admins_min_fields']
export const isadmins_min_fields = (obj?: { __typename?: any } | null): obj is admins_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_min_fields"')
  return admins_min_fields_possibleTypes.includes(obj.__typename)
}



const admins_mutation_response_possibleTypes = ['admins_mutation_response']
export const isadmins_mutation_response = (obj?: { __typename?: any } | null): obj is admins_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isadmins_mutation_response"')
  return admins_mutation_response_possibleTypes.includes(obj.__typename)
}



const auth_methods_possibleTypes = ['auth_methods']
export const isauth_methods = (obj?: { __typename?: any } | null): obj is auth_methods => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods"')
  return auth_methods_possibleTypes.includes(obj.__typename)
}



const auth_methods_aggregate_possibleTypes = ['auth_methods_aggregate']
export const isauth_methods_aggregate = (obj?: { __typename?: any } | null): obj is auth_methods_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods_aggregate"')
  return auth_methods_aggregate_possibleTypes.includes(obj.__typename)
}



const auth_methods_aggregate_fields_possibleTypes = ['auth_methods_aggregate_fields']
export const isauth_methods_aggregate_fields = (obj?: { __typename?: any } | null): obj is auth_methods_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods_aggregate_fields"')
  return auth_methods_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const auth_methods_max_fields_possibleTypes = ['auth_methods_max_fields']
export const isauth_methods_max_fields = (obj?: { __typename?: any } | null): obj is auth_methods_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods_max_fields"')
  return auth_methods_max_fields_possibleTypes.includes(obj.__typename)
}



const auth_methods_min_fields_possibleTypes = ['auth_methods_min_fields']
export const isauth_methods_min_fields = (obj?: { __typename?: any } | null): obj is auth_methods_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods_min_fields"')
  return auth_methods_min_fields_possibleTypes.includes(obj.__typename)
}



const auth_methods_mutation_response_possibleTypes = ['auth_methods_mutation_response']
export const isauth_methods_mutation_response = (obj?: { __typename?: any } | null): obj is auth_methods_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isauth_methods_mutation_response"')
  return auth_methods_mutation_response_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_possibleTypes = ['blacklist_refresh_token']
export const isblacklist_refresh_token = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token"')
  return blacklist_refresh_token_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_aggregate_possibleTypes = ['blacklist_refresh_token_aggregate']
export const isblacklist_refresh_token_aggregate = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token_aggregate"')
  return blacklist_refresh_token_aggregate_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_aggregate_fields_possibleTypes = ['blacklist_refresh_token_aggregate_fields']
export const isblacklist_refresh_token_aggregate_fields = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token_aggregate_fields"')
  return blacklist_refresh_token_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_max_fields_possibleTypes = ['blacklist_refresh_token_max_fields']
export const isblacklist_refresh_token_max_fields = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token_max_fields"')
  return blacklist_refresh_token_max_fields_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_min_fields_possibleTypes = ['blacklist_refresh_token_min_fields']
export const isblacklist_refresh_token_min_fields = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token_min_fields"')
  return blacklist_refresh_token_min_fields_possibleTypes.includes(obj.__typename)
}



const blacklist_refresh_token_mutation_response_possibleTypes = ['blacklist_refresh_token_mutation_response']
export const isblacklist_refresh_token_mutation_response = (obj?: { __typename?: any } | null): obj is blacklist_refresh_token_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isblacklist_refresh_token_mutation_response"')
  return blacklist_refresh_token_mutation_response_possibleTypes.includes(obj.__typename)
}



const connectors_possibleTypes = ['connectors']
export const isconnectors = (obj?: { __typename?: any } | null): obj is connectors => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors"')
  return connectors_possibleTypes.includes(obj.__typename)
}



const connectors_aggregate_possibleTypes = ['connectors_aggregate']
export const isconnectors_aggregate = (obj?: { __typename?: any } | null): obj is connectors_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors_aggregate"')
  return connectors_aggregate_possibleTypes.includes(obj.__typename)
}



const connectors_aggregate_fields_possibleTypes = ['connectors_aggregate_fields']
export const isconnectors_aggregate_fields = (obj?: { __typename?: any } | null): obj is connectors_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors_aggregate_fields"')
  return connectors_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const connectors_max_fields_possibleTypes = ['connectors_max_fields']
export const isconnectors_max_fields = (obj?: { __typename?: any } | null): obj is connectors_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors_max_fields"')
  return connectors_max_fields_possibleTypes.includes(obj.__typename)
}



const connectors_min_fields_possibleTypes = ['connectors_min_fields']
export const isconnectors_min_fields = (obj?: { __typename?: any } | null): obj is connectors_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors_min_fields"')
  return connectors_min_fields_possibleTypes.includes(obj.__typename)
}



const connectors_mutation_response_possibleTypes = ['connectors_mutation_response']
export const isconnectors_mutation_response = (obj?: { __typename?: any } | null): obj is connectors_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isconnectors_mutation_response"')
  return connectors_mutation_response_possibleTypes.includes(obj.__typename)
}



const customer_user_possibleTypes = ['customer_user']
export const iscustomer_user = (obj?: { __typename?: any } | null): obj is customer_user => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user"')
  return customer_user_possibleTypes.includes(obj.__typename)
}



const customer_user_aggregate_possibleTypes = ['customer_user_aggregate']
export const iscustomer_user_aggregate = (obj?: { __typename?: any } | null): obj is customer_user_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_aggregate"')
  return customer_user_aggregate_possibleTypes.includes(obj.__typename)
}



const customer_user_aggregate_fields_possibleTypes = ['customer_user_aggregate_fields']
export const iscustomer_user_aggregate_fields = (obj?: { __typename?: any } | null): obj is customer_user_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_aggregate_fields"')
  return customer_user_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_avg_fields_possibleTypes = ['customer_user_avg_fields']
export const iscustomer_user_avg_fields = (obj?: { __typename?: any } | null): obj is customer_user_avg_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_avg_fields"')
  return customer_user_avg_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_max_fields_possibleTypes = ['customer_user_max_fields']
export const iscustomer_user_max_fields = (obj?: { __typename?: any } | null): obj is customer_user_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_max_fields"')
  return customer_user_max_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_min_fields_possibleTypes = ['customer_user_min_fields']
export const iscustomer_user_min_fields = (obj?: { __typename?: any } | null): obj is customer_user_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_min_fields"')
  return customer_user_min_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_mutation_response_possibleTypes = ['customer_user_mutation_response']
export const iscustomer_user_mutation_response = (obj?: { __typename?: any } | null): obj is customer_user_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_mutation_response"')
  return customer_user_mutation_response_possibleTypes.includes(obj.__typename)
}



const customer_user_service_possibleTypes = ['customer_user_service']
export const iscustomer_user_service = (obj?: { __typename?: any } | null): obj is customer_user_service => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service"')
  return customer_user_service_possibleTypes.includes(obj.__typename)
}



const customer_user_service_aggregate_possibleTypes = ['customer_user_service_aggregate']
export const iscustomer_user_service_aggregate = (obj?: { __typename?: any } | null): obj is customer_user_service_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service_aggregate"')
  return customer_user_service_aggregate_possibleTypes.includes(obj.__typename)
}



const customer_user_service_aggregate_fields_possibleTypes = ['customer_user_service_aggregate_fields']
export const iscustomer_user_service_aggregate_fields = (obj?: { __typename?: any } | null): obj is customer_user_service_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service_aggregate_fields"')
  return customer_user_service_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_service_max_fields_possibleTypes = ['customer_user_service_max_fields']
export const iscustomer_user_service_max_fields = (obj?: { __typename?: any } | null): obj is customer_user_service_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service_max_fields"')
  return customer_user_service_max_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_service_min_fields_possibleTypes = ['customer_user_service_min_fields']
export const iscustomer_user_service_min_fields = (obj?: { __typename?: any } | null): obj is customer_user_service_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service_min_fields"')
  return customer_user_service_min_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_service_mutation_response_possibleTypes = ['customer_user_service_mutation_response']
export const iscustomer_user_service_mutation_response = (obj?: { __typename?: any } | null): obj is customer_user_service_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_service_mutation_response"')
  return customer_user_service_mutation_response_possibleTypes.includes(obj.__typename)
}



const customer_user_stddev_fields_possibleTypes = ['customer_user_stddev_fields']
export const iscustomer_user_stddev_fields = (obj?: { __typename?: any } | null): obj is customer_user_stddev_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_stddev_fields"')
  return customer_user_stddev_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_stddev_pop_fields_possibleTypes = ['customer_user_stddev_pop_fields']
export const iscustomer_user_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is customer_user_stddev_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_stddev_pop_fields"')
  return customer_user_stddev_pop_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_stddev_samp_fields_possibleTypes = ['customer_user_stddev_samp_fields']
export const iscustomer_user_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is customer_user_stddev_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_stddev_samp_fields"')
  return customer_user_stddev_samp_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_possibleTypes = ['customer_user_sub_service']
export const iscustomer_user_sub_service = (obj?: { __typename?: any } | null): obj is customer_user_sub_service => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service"')
  return customer_user_sub_service_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_aggregate_possibleTypes = ['customer_user_sub_service_aggregate']
export const iscustomer_user_sub_service_aggregate = (obj?: { __typename?: any } | null): obj is customer_user_sub_service_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service_aggregate"')
  return customer_user_sub_service_aggregate_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_aggregate_fields_possibleTypes = ['customer_user_sub_service_aggregate_fields']
export const iscustomer_user_sub_service_aggregate_fields = (obj?: { __typename?: any } | null): obj is customer_user_sub_service_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service_aggregate_fields"')
  return customer_user_sub_service_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_max_fields_possibleTypes = ['customer_user_sub_service_max_fields']
export const iscustomer_user_sub_service_max_fields = (obj?: { __typename?: any } | null): obj is customer_user_sub_service_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service_max_fields"')
  return customer_user_sub_service_max_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_min_fields_possibleTypes = ['customer_user_sub_service_min_fields']
export const iscustomer_user_sub_service_min_fields = (obj?: { __typename?: any } | null): obj is customer_user_sub_service_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service_min_fields"')
  return customer_user_sub_service_min_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_sub_service_mutation_response_possibleTypes = ['customer_user_sub_service_mutation_response']
export const iscustomer_user_sub_service_mutation_response = (obj?: { __typename?: any } | null): obj is customer_user_sub_service_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sub_service_mutation_response"')
  return customer_user_sub_service_mutation_response_possibleTypes.includes(obj.__typename)
}



const customer_user_sum_fields_possibleTypes = ['customer_user_sum_fields']
export const iscustomer_user_sum_fields = (obj?: { __typename?: any } | null): obj is customer_user_sum_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_sum_fields"')
  return customer_user_sum_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_var_pop_fields_possibleTypes = ['customer_user_var_pop_fields']
export const iscustomer_user_var_pop_fields = (obj?: { __typename?: any } | null): obj is customer_user_var_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_var_pop_fields"')
  return customer_user_var_pop_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_var_samp_fields_possibleTypes = ['customer_user_var_samp_fields']
export const iscustomer_user_var_samp_fields = (obj?: { __typename?: any } | null): obj is customer_user_var_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_var_samp_fields"')
  return customer_user_var_samp_fields_possibleTypes.includes(obj.__typename)
}



const customer_user_variance_fields_possibleTypes = ['customer_user_variance_fields']
export const iscustomer_user_variance_fields = (obj?: { __typename?: any } | null): obj is customer_user_variance_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomer_user_variance_fields"')
  return customer_user_variance_fields_possibleTypes.includes(obj.__typename)
}



const customers_possibleTypes = ['customers']
export const iscustomers = (obj?: { __typename?: any } | null): obj is customers => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers"')
  return customers_possibleTypes.includes(obj.__typename)
}



const customers_aggregate_possibleTypes = ['customers_aggregate']
export const iscustomers_aggregate = (obj?: { __typename?: any } | null): obj is customers_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_aggregate"')
  return customers_aggregate_possibleTypes.includes(obj.__typename)
}



const customers_aggregate_fields_possibleTypes = ['customers_aggregate_fields']
export const iscustomers_aggregate_fields = (obj?: { __typename?: any } | null): obj is customers_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_aggregate_fields"')
  return customers_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const customers_avg_fields_possibleTypes = ['customers_avg_fields']
export const iscustomers_avg_fields = (obj?: { __typename?: any } | null): obj is customers_avg_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_avg_fields"')
  return customers_avg_fields_possibleTypes.includes(obj.__typename)
}



const customers_contact_possibleTypes = ['customers_contact']
export const iscustomers_contact = (obj?: { __typename?: any } | null): obj is customers_contact => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact"')
  return customers_contact_possibleTypes.includes(obj.__typename)
}



const customers_contact_aggregate_possibleTypes = ['customers_contact_aggregate']
export const iscustomers_contact_aggregate = (obj?: { __typename?: any } | null): obj is customers_contact_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact_aggregate"')
  return customers_contact_aggregate_possibleTypes.includes(obj.__typename)
}



const customers_contact_aggregate_fields_possibleTypes = ['customers_contact_aggregate_fields']
export const iscustomers_contact_aggregate_fields = (obj?: { __typename?: any } | null): obj is customers_contact_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact_aggregate_fields"')
  return customers_contact_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const customers_contact_max_fields_possibleTypes = ['customers_contact_max_fields']
export const iscustomers_contact_max_fields = (obj?: { __typename?: any } | null): obj is customers_contact_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact_max_fields"')
  return customers_contact_max_fields_possibleTypes.includes(obj.__typename)
}



const customers_contact_min_fields_possibleTypes = ['customers_contact_min_fields']
export const iscustomers_contact_min_fields = (obj?: { __typename?: any } | null): obj is customers_contact_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact_min_fields"')
  return customers_contact_min_fields_possibleTypes.includes(obj.__typename)
}



const customers_contact_mutation_response_possibleTypes = ['customers_contact_mutation_response']
export const iscustomers_contact_mutation_response = (obj?: { __typename?: any } | null): obj is customers_contact_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_contact_mutation_response"')
  return customers_contact_mutation_response_possibleTypes.includes(obj.__typename)
}



const customers_max_fields_possibleTypes = ['customers_max_fields']
export const iscustomers_max_fields = (obj?: { __typename?: any } | null): obj is customers_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_max_fields"')
  return customers_max_fields_possibleTypes.includes(obj.__typename)
}



const customers_min_fields_possibleTypes = ['customers_min_fields']
export const iscustomers_min_fields = (obj?: { __typename?: any } | null): obj is customers_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_min_fields"')
  return customers_min_fields_possibleTypes.includes(obj.__typename)
}



const customers_mutation_response_possibleTypes = ['customers_mutation_response']
export const iscustomers_mutation_response = (obj?: { __typename?: any } | null): obj is customers_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_mutation_response"')
  return customers_mutation_response_possibleTypes.includes(obj.__typename)
}



const customers_stddev_fields_possibleTypes = ['customers_stddev_fields']
export const iscustomers_stddev_fields = (obj?: { __typename?: any } | null): obj is customers_stddev_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_stddev_fields"')
  return customers_stddev_fields_possibleTypes.includes(obj.__typename)
}



const customers_stddev_pop_fields_possibleTypes = ['customers_stddev_pop_fields']
export const iscustomers_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is customers_stddev_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_stddev_pop_fields"')
  return customers_stddev_pop_fields_possibleTypes.includes(obj.__typename)
}



const customers_stddev_samp_fields_possibleTypes = ['customers_stddev_samp_fields']
export const iscustomers_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is customers_stddev_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_stddev_samp_fields"')
  return customers_stddev_samp_fields_possibleTypes.includes(obj.__typename)
}



const customers_sum_fields_possibleTypes = ['customers_sum_fields']
export const iscustomers_sum_fields = (obj?: { __typename?: any } | null): obj is customers_sum_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_sum_fields"')
  return customers_sum_fields_possibleTypes.includes(obj.__typename)
}



const customers_var_pop_fields_possibleTypes = ['customers_var_pop_fields']
export const iscustomers_var_pop_fields = (obj?: { __typename?: any } | null): obj is customers_var_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_var_pop_fields"')
  return customers_var_pop_fields_possibleTypes.includes(obj.__typename)
}



const customers_var_samp_fields_possibleTypes = ['customers_var_samp_fields']
export const iscustomers_var_samp_fields = (obj?: { __typename?: any } | null): obj is customers_var_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_var_samp_fields"')
  return customers_var_samp_fields_possibleTypes.includes(obj.__typename)
}



const customers_variance_fields_possibleTypes = ['customers_variance_fields']
export const iscustomers_variance_fields = (obj?: { __typename?: any } | null): obj is customers_variance_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "iscustomers_variance_fields"')
  return customers_variance_fields_possibleTypes.includes(obj.__typename)
}



const feature_names_possibleTypes = ['feature_names']
export const isfeature_names = (obj?: { __typename?: any } | null): obj is feature_names => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names"')
  return feature_names_possibleTypes.includes(obj.__typename)
}



const feature_names_aggregate_possibleTypes = ['feature_names_aggregate']
export const isfeature_names_aggregate = (obj?: { __typename?: any } | null): obj is feature_names_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names_aggregate"')
  return feature_names_aggregate_possibleTypes.includes(obj.__typename)
}



const feature_names_aggregate_fields_possibleTypes = ['feature_names_aggregate_fields']
export const isfeature_names_aggregate_fields = (obj?: { __typename?: any } | null): obj is feature_names_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names_aggregate_fields"')
  return feature_names_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const feature_names_max_fields_possibleTypes = ['feature_names_max_fields']
export const isfeature_names_max_fields = (obj?: { __typename?: any } | null): obj is feature_names_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names_max_fields"')
  return feature_names_max_fields_possibleTypes.includes(obj.__typename)
}



const feature_names_min_fields_possibleTypes = ['feature_names_min_fields']
export const isfeature_names_min_fields = (obj?: { __typename?: any } | null): obj is feature_names_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names_min_fields"')
  return feature_names_min_fields_possibleTypes.includes(obj.__typename)
}



const feature_names_mutation_response_possibleTypes = ['feature_names_mutation_response']
export const isfeature_names_mutation_response = (obj?: { __typename?: any } | null): obj is feature_names_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeature_names_mutation_response"')
  return feature_names_mutation_response_possibleTypes.includes(obj.__typename)
}



const features_possibleTypes = ['features']
export const isfeatures = (obj?: { __typename?: any } | null): obj is features => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures"')
  return features_possibleTypes.includes(obj.__typename)
}



const features_aggregate_possibleTypes = ['features_aggregate']
export const isfeatures_aggregate = (obj?: { __typename?: any } | null): obj is features_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures_aggregate"')
  return features_aggregate_possibleTypes.includes(obj.__typename)
}



const features_aggregate_fields_possibleTypes = ['features_aggregate_fields']
export const isfeatures_aggregate_fields = (obj?: { __typename?: any } | null): obj is features_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures_aggregate_fields"')
  return features_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const features_max_fields_possibleTypes = ['features_max_fields']
export const isfeatures_max_fields = (obj?: { __typename?: any } | null): obj is features_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures_max_fields"')
  return features_max_fields_possibleTypes.includes(obj.__typename)
}



const features_min_fields_possibleTypes = ['features_min_fields']
export const isfeatures_min_fields = (obj?: { __typename?: any } | null): obj is features_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures_min_fields"')
  return features_min_fields_possibleTypes.includes(obj.__typename)
}



const features_mutation_response_possibleTypes = ['features_mutation_response']
export const isfeatures_mutation_response = (obj?: { __typename?: any } | null): obj is features_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isfeatures_mutation_response"')
  return features_mutation_response_possibleTypes.includes(obj.__typename)
}



const getCustomersAndCountUsersOutput_possibleTypes = ['getCustomersAndCountUsersOutput']
export const isgetCustomersAndCountUsersOutput = (obj?: { __typename?: any } | null): obj is getCustomersAndCountUsersOutput => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isgetCustomersAndCountUsersOutput"')
  return getCustomersAndCountUsersOutput_possibleTypes.includes(obj.__typename)
}



const mutation_root_possibleTypes = ['mutation_root']
export const ismutation_root = (obj?: { __typename?: any } | null): obj is mutation_root => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ismutation_root"')
  return mutation_root_possibleTypes.includes(obj.__typename)
}



const partners_possibleTypes = ['partners']
export const ispartners = (obj?: { __typename?: any } | null): obj is partners => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners"')
  return partners_possibleTypes.includes(obj.__typename)
}



const partners_aggregate_possibleTypes = ['partners_aggregate']
export const ispartners_aggregate = (obj?: { __typename?: any } | null): obj is partners_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners_aggregate"')
  return partners_aggregate_possibleTypes.includes(obj.__typename)
}



const partners_aggregate_fields_possibleTypes = ['partners_aggregate_fields']
export const ispartners_aggregate_fields = (obj?: { __typename?: any } | null): obj is partners_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners_aggregate_fields"')
  return partners_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const partners_max_fields_possibleTypes = ['partners_max_fields']
export const ispartners_max_fields = (obj?: { __typename?: any } | null): obj is partners_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners_max_fields"')
  return partners_max_fields_possibleTypes.includes(obj.__typename)
}



const partners_min_fields_possibleTypes = ['partners_min_fields']
export const ispartners_min_fields = (obj?: { __typename?: any } | null): obj is partners_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners_min_fields"')
  return partners_min_fields_possibleTypes.includes(obj.__typename)
}



const partners_mutation_response_possibleTypes = ['partners_mutation_response']
export const ispartners_mutation_response = (obj?: { __typename?: any } | null): obj is partners_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "ispartners_mutation_response"')
  return partners_mutation_response_possibleTypes.includes(obj.__typename)
}



const query_root_possibleTypes = ['query_root']
export const isquery_root = (obj?: { __typename?: any } | null): obj is query_root => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isquery_root"')
  return query_root_possibleTypes.includes(obj.__typename)
}



const roles_possibleTypes = ['roles']
export const isroles = (obj?: { __typename?: any } | null): obj is roles => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles"')
  return roles_possibleTypes.includes(obj.__typename)
}



const roles_aggregate_possibleTypes = ['roles_aggregate']
export const isroles_aggregate = (obj?: { __typename?: any } | null): obj is roles_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles_aggregate"')
  return roles_aggregate_possibleTypes.includes(obj.__typename)
}



const roles_aggregate_fields_possibleTypes = ['roles_aggregate_fields']
export const isroles_aggregate_fields = (obj?: { __typename?: any } | null): obj is roles_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles_aggregate_fields"')
  return roles_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const roles_max_fields_possibleTypes = ['roles_max_fields']
export const isroles_max_fields = (obj?: { __typename?: any } | null): obj is roles_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles_max_fields"')
  return roles_max_fields_possibleTypes.includes(obj.__typename)
}



const roles_min_fields_possibleTypes = ['roles_min_fields']
export const isroles_min_fields = (obj?: { __typename?: any } | null): obj is roles_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles_min_fields"')
  return roles_min_fields_possibleTypes.includes(obj.__typename)
}



const roles_mutation_response_possibleTypes = ['roles_mutation_response']
export const isroles_mutation_response = (obj?: { __typename?: any } | null): obj is roles_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isroles_mutation_response"')
  return roles_mutation_response_possibleTypes.includes(obj.__typename)
}



const services_possibleTypes = ['services']
export const isservices = (obj?: { __typename?: any } | null): obj is services => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices"')
  return services_possibleTypes.includes(obj.__typename)
}



const services_aggregate_possibleTypes = ['services_aggregate']
export const isservices_aggregate = (obj?: { __typename?: any } | null): obj is services_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices_aggregate"')
  return services_aggregate_possibleTypes.includes(obj.__typename)
}



const services_aggregate_fields_possibleTypes = ['services_aggregate_fields']
export const isservices_aggregate_fields = (obj?: { __typename?: any } | null): obj is services_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices_aggregate_fields"')
  return services_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const services_max_fields_possibleTypes = ['services_max_fields']
export const isservices_max_fields = (obj?: { __typename?: any } | null): obj is services_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices_max_fields"')
  return services_max_fields_possibleTypes.includes(obj.__typename)
}



const services_min_fields_possibleTypes = ['services_min_fields']
export const isservices_min_fields = (obj?: { __typename?: any } | null): obj is services_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices_min_fields"')
  return services_min_fields_possibleTypes.includes(obj.__typename)
}



const services_mutation_response_possibleTypes = ['services_mutation_response']
export const isservices_mutation_response = (obj?: { __typename?: any } | null): obj is services_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isservices_mutation_response"')
  return services_mutation_response_possibleTypes.includes(obj.__typename)
}



const srv_names_possibleTypes = ['srv_names']
export const issrv_names = (obj?: { __typename?: any } | null): obj is srv_names => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names"')
  return srv_names_possibleTypes.includes(obj.__typename)
}



const srv_names_aggregate_possibleTypes = ['srv_names_aggregate']
export const issrv_names_aggregate = (obj?: { __typename?: any } | null): obj is srv_names_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names_aggregate"')
  return srv_names_aggregate_possibleTypes.includes(obj.__typename)
}



const srv_names_aggregate_fields_possibleTypes = ['srv_names_aggregate_fields']
export const issrv_names_aggregate_fields = (obj?: { __typename?: any } | null): obj is srv_names_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names_aggregate_fields"')
  return srv_names_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const srv_names_max_fields_possibleTypes = ['srv_names_max_fields']
export const issrv_names_max_fields = (obj?: { __typename?: any } | null): obj is srv_names_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names_max_fields"')
  return srv_names_max_fields_possibleTypes.includes(obj.__typename)
}



const srv_names_min_fields_possibleTypes = ['srv_names_min_fields']
export const issrv_names_min_fields = (obj?: { __typename?: any } | null): obj is srv_names_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names_min_fields"')
  return srv_names_min_fields_possibleTypes.includes(obj.__typename)
}



const srv_names_mutation_response_possibleTypes = ['srv_names_mutation_response']
export const issrv_names_mutation_response = (obj?: { __typename?: any } | null): obj is srv_names_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_names_mutation_response"')
  return srv_names_mutation_response_possibleTypes.includes(obj.__typename)
}



const srv_urls_possibleTypes = ['srv_urls']
export const issrv_urls = (obj?: { __typename?: any } | null): obj is srv_urls => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls"')
  return srv_urls_possibleTypes.includes(obj.__typename)
}



const srv_urls_aggregate_possibleTypes = ['srv_urls_aggregate']
export const issrv_urls_aggregate = (obj?: { __typename?: any } | null): obj is srv_urls_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls_aggregate"')
  return srv_urls_aggregate_possibleTypes.includes(obj.__typename)
}



const srv_urls_aggregate_fields_possibleTypes = ['srv_urls_aggregate_fields']
export const issrv_urls_aggregate_fields = (obj?: { __typename?: any } | null): obj is srv_urls_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls_aggregate_fields"')
  return srv_urls_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const srv_urls_max_fields_possibleTypes = ['srv_urls_max_fields']
export const issrv_urls_max_fields = (obj?: { __typename?: any } | null): obj is srv_urls_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls_max_fields"')
  return srv_urls_max_fields_possibleTypes.includes(obj.__typename)
}



const srv_urls_min_fields_possibleTypes = ['srv_urls_min_fields']
export const issrv_urls_min_fields = (obj?: { __typename?: any } | null): obj is srv_urls_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls_min_fields"')
  return srv_urls_min_fields_possibleTypes.includes(obj.__typename)
}



const srv_urls_mutation_response_possibleTypes = ['srv_urls_mutation_response']
export const issrv_urls_mutation_response = (obj?: { __typename?: any } | null): obj is srv_urls_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issrv_urls_mutation_response"')
  return srv_urls_mutation_response_possibleTypes.includes(obj.__typename)
}



const status_possibleTypes = ['status']
export const isstatus = (obj?: { __typename?: any } | null): obj is status => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus"')
  return status_possibleTypes.includes(obj.__typename)
}



const status_aggregate_possibleTypes = ['status_aggregate']
export const isstatus_aggregate = (obj?: { __typename?: any } | null): obj is status_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus_aggregate"')
  return status_aggregate_possibleTypes.includes(obj.__typename)
}



const status_aggregate_fields_possibleTypes = ['status_aggregate_fields']
export const isstatus_aggregate_fields = (obj?: { __typename?: any } | null): obj is status_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus_aggregate_fields"')
  return status_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const status_max_fields_possibleTypes = ['status_max_fields']
export const isstatus_max_fields = (obj?: { __typename?: any } | null): obj is status_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus_max_fields"')
  return status_max_fields_possibleTypes.includes(obj.__typename)
}



const status_min_fields_possibleTypes = ['status_min_fields']
export const isstatus_min_fields = (obj?: { __typename?: any } | null): obj is status_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus_min_fields"')
  return status_min_fields_possibleTypes.includes(obj.__typename)
}



const status_mutation_response_possibleTypes = ['status_mutation_response']
export const isstatus_mutation_response = (obj?: { __typename?: any } | null): obj is status_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isstatus_mutation_response"')
  return status_mutation_response_possibleTypes.includes(obj.__typename)
}



const sub_services_possibleTypes = ['sub_services']
export const issub_services = (obj?: { __typename?: any } | null): obj is sub_services => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services"')
  return sub_services_possibleTypes.includes(obj.__typename)
}



const sub_services_aggregate_possibleTypes = ['sub_services_aggregate']
export const issub_services_aggregate = (obj?: { __typename?: any } | null): obj is sub_services_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services_aggregate"')
  return sub_services_aggregate_possibleTypes.includes(obj.__typename)
}



const sub_services_aggregate_fields_possibleTypes = ['sub_services_aggregate_fields']
export const issub_services_aggregate_fields = (obj?: { __typename?: any } | null): obj is sub_services_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services_aggregate_fields"')
  return sub_services_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const sub_services_max_fields_possibleTypes = ['sub_services_max_fields']
export const issub_services_max_fields = (obj?: { __typename?: any } | null): obj is sub_services_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services_max_fields"')
  return sub_services_max_fields_possibleTypes.includes(obj.__typename)
}



const sub_services_min_fields_possibleTypes = ['sub_services_min_fields']
export const issub_services_min_fields = (obj?: { __typename?: any } | null): obj is sub_services_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services_min_fields"')
  return sub_services_min_fields_possibleTypes.includes(obj.__typename)
}



const sub_services_mutation_response_possibleTypes = ['sub_services_mutation_response']
export const issub_services_mutation_response = (obj?: { __typename?: any } | null): obj is sub_services_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issub_services_mutation_response"')
  return sub_services_mutation_response_possibleTypes.includes(obj.__typename)
}



const subscription_root_possibleTypes = ['subscription_root']
export const issubscription_root = (obj?: { __typename?: any } | null): obj is subscription_root => {
  if (!obj?.__typename) throw new Error('__typename is missing in "issubscription_root"')
  return subscription_root_possibleTypes.includes(obj.__typename)
}



const user_basic_data_possibleTypes = ['user_basic_data']
export const isuser_basic_data = (obj?: { __typename?: any } | null): obj is user_basic_data => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data"')
  return user_basic_data_possibleTypes.includes(obj.__typename)
}



const user_basic_data_aggregate_possibleTypes = ['user_basic_data_aggregate']
export const isuser_basic_data_aggregate = (obj?: { __typename?: any } | null): obj is user_basic_data_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data_aggregate"')
  return user_basic_data_aggregate_possibleTypes.includes(obj.__typename)
}



const user_basic_data_aggregate_fields_possibleTypes = ['user_basic_data_aggregate_fields']
export const isuser_basic_data_aggregate_fields = (obj?: { __typename?: any } | null): obj is user_basic_data_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data_aggregate_fields"')
  return user_basic_data_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const user_basic_data_max_fields_possibleTypes = ['user_basic_data_max_fields']
export const isuser_basic_data_max_fields = (obj?: { __typename?: any } | null): obj is user_basic_data_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data_max_fields"')
  return user_basic_data_max_fields_possibleTypes.includes(obj.__typename)
}



const user_basic_data_min_fields_possibleTypes = ['user_basic_data_min_fields']
export const isuser_basic_data_min_fields = (obj?: { __typename?: any } | null): obj is user_basic_data_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data_min_fields"')
  return user_basic_data_min_fields_possibleTypes.includes(obj.__typename)
}



const user_basic_data_mutation_response_possibleTypes = ['user_basic_data_mutation_response']
export const isuser_basic_data_mutation_response = (obj?: { __typename?: any } | null): obj is user_basic_data_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isuser_basic_data_mutation_response"')
  return user_basic_data_mutation_response_possibleTypes.includes(obj.__typename)
}



const users_possibleTypes = ['users']
export const isusers = (obj?: { __typename?: any } | null): obj is users => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers"')
  return users_possibleTypes.includes(obj.__typename)
}



const users_aggregate_possibleTypes = ['users_aggregate']
export const isusers_aggregate = (obj?: { __typename?: any } | null): obj is users_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_aggregate"')
  return users_aggregate_possibleTypes.includes(obj.__typename)
}



const users_aggregate_fields_possibleTypes = ['users_aggregate_fields']
export const isusers_aggregate_fields = (obj?: { __typename?: any } | null): obj is users_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_aggregate_fields"')
  return users_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_possibleTypes = ['users_auth_logs']
export const isusers_auth_logs = (obj?: { __typename?: any } | null): obj is users_auth_logs => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs"')
  return users_auth_logs_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_aggregate_possibleTypes = ['users_auth_logs_aggregate']
export const isusers_auth_logs_aggregate = (obj?: { __typename?: any } | null): obj is users_auth_logs_aggregate => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_aggregate"')
  return users_auth_logs_aggregate_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_aggregate_fields_possibleTypes = ['users_auth_logs_aggregate_fields']
export const isusers_auth_logs_aggregate_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_aggregate_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_aggregate_fields"')
  return users_auth_logs_aggregate_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_avg_fields_possibleTypes = ['users_auth_logs_avg_fields']
export const isusers_auth_logs_avg_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_avg_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_avg_fields"')
  return users_auth_logs_avg_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_max_fields_possibleTypes = ['users_auth_logs_max_fields']
export const isusers_auth_logs_max_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_max_fields"')
  return users_auth_logs_max_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_min_fields_possibleTypes = ['users_auth_logs_min_fields']
export const isusers_auth_logs_min_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_min_fields"')
  return users_auth_logs_min_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_mutation_response_possibleTypes = ['users_auth_logs_mutation_response']
export const isusers_auth_logs_mutation_response = (obj?: { __typename?: any } | null): obj is users_auth_logs_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_mutation_response"')
  return users_auth_logs_mutation_response_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_stddev_fields_possibleTypes = ['users_auth_logs_stddev_fields']
export const isusers_auth_logs_stddev_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_stddev_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_stddev_fields"')
  return users_auth_logs_stddev_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_stddev_pop_fields_possibleTypes = ['users_auth_logs_stddev_pop_fields']
export const isusers_auth_logs_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_stddev_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_stddev_pop_fields"')
  return users_auth_logs_stddev_pop_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_stddev_samp_fields_possibleTypes = ['users_auth_logs_stddev_samp_fields']
export const isusers_auth_logs_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_stddev_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_stddev_samp_fields"')
  return users_auth_logs_stddev_samp_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_sum_fields_possibleTypes = ['users_auth_logs_sum_fields']
export const isusers_auth_logs_sum_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_sum_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_sum_fields"')
  return users_auth_logs_sum_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_var_pop_fields_possibleTypes = ['users_auth_logs_var_pop_fields']
export const isusers_auth_logs_var_pop_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_var_pop_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_var_pop_fields"')
  return users_auth_logs_var_pop_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_var_samp_fields_possibleTypes = ['users_auth_logs_var_samp_fields']
export const isusers_auth_logs_var_samp_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_var_samp_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_var_samp_fields"')
  return users_auth_logs_var_samp_fields_possibleTypes.includes(obj.__typename)
}



const users_auth_logs_variance_fields_possibleTypes = ['users_auth_logs_variance_fields']
export const isusers_auth_logs_variance_fields = (obj?: { __typename?: any } | null): obj is users_auth_logs_variance_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_auth_logs_variance_fields"')
  return users_auth_logs_variance_fields_possibleTypes.includes(obj.__typename)
}



const users_max_fields_possibleTypes = ['users_max_fields']
export const isusers_max_fields = (obj?: { __typename?: any } | null): obj is users_max_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_max_fields"')
  return users_max_fields_possibleTypes.includes(obj.__typename)
}



const users_min_fields_possibleTypes = ['users_min_fields']
export const isusers_min_fields = (obj?: { __typename?: any } | null): obj is users_min_fields => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_min_fields"')
  return users_min_fields_possibleTypes.includes(obj.__typename)
}



const users_mutation_response_possibleTypes = ['users_mutation_response']
export const isusers_mutation_response = (obj?: { __typename?: any } | null): obj is users_mutation_response => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isusers_mutation_response"')
  return users_mutation_response_possibleTypes.includes(obj.__typename)
}


export interface InsertUserOrWarnIfExistsOutputPromiseChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}

export interface InsertUserOrWarnIfExistsOutputObservableChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}

export interface ReturnAffectedItemIdPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}

export interface ReturnAffectedItemIdObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}

export interface ReturnAffectedRowsPromiseChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}

export interface ReturnAffectedRowsObservableChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}

export interface SigninOutputPromiseChain{
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}

export interface SigninOutputObservableChain{
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}

export interface SinginOutputWithRefreshTokenPromiseChain{
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    refresh_token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}

export interface SinginOutputWithRefreshTokenObservableChain{
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    refresh_token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    token: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}

export interface UpdateUserOutputPromiseChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})
}

export interface UpdateUserOutputObservableChain{
    affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})
}


/** columns and relationships of "admins" */
export interface adminsPromiseChain{
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    password: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** columns and relationships of "admins" */
export interface adminsObservableChain{
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    password: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** aggregated selection of "admins" */
export interface admins_aggregatePromiseChain{
    aggregate: (admins_aggregate_fieldsPromiseChain & {get: <R extends admins_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<admins_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>})
}


/** aggregated selection of "admins" */
export interface admins_aggregateObservableChain{
    aggregate: (admins_aggregate_fieldsObservableChain & {get: <R extends admins_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<admins_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>})
}


/** aggregate fields of "admins" */
export interface admins_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (admins_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (admins_max_fieldsPromiseChain & {get: <R extends admins_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_max_fields, R> | undefined)) => Promise<(FieldsSelection<admins_max_fields, R> | undefined)>}),
    min: (admins_min_fieldsPromiseChain & {get: <R extends admins_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_min_fields, R> | undefined)) => Promise<(FieldsSelection<admins_min_fields, R> | undefined)>})
}


/** aggregate fields of "admins" */
export interface admins_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (admins_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (admins_max_fieldsObservableChain & {get: <R extends admins_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_max_fields, R> | undefined)) => Observable<(FieldsSelection<admins_max_fields, R> | undefined)>}),
    min: (admins_min_fieldsObservableChain & {get: <R extends admins_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_min_fields, R> | undefined)) => Observable<(FieldsSelection<admins_min_fields, R> | undefined)>})
}


/** columns and relationships of "admins_auth_logs" */
export interface admins_auth_logsPromiseChain{
    
/** An object relationship */
admin: (adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>) => Promise<FieldsSelection<admins, R>>}),
    admin_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})
}


/** columns and relationships of "admins_auth_logs" */
export interface admins_auth_logsObservableChain{
    
/** An object relationship */
admin: (adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>) => Observable<FieldsSelection<admins, R>>}),
    admin_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})
}


/** aggregated selection of "admins_auth_logs" */
export interface admins_auth_logs_aggregatePromiseChain{
    aggregate: (admins_auth_logs_aggregate_fieldsPromiseChain & {get: <R extends admins_auth_logs_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>})
}


/** aggregated selection of "admins_auth_logs" */
export interface admins_auth_logs_aggregateObservableChain{
    aggregate: (admins_auth_logs_aggregate_fieldsObservableChain & {get: <R extends admins_auth_logs_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>})
}


/** aggregate fields of "admins_auth_logs" */
export interface admins_auth_logs_aggregate_fieldsPromiseChain{
    avg: (admins_auth_logs_avg_fieldsPromiseChain & {get: <R extends admins_auth_logs_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_avg_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (admins_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (admins_auth_logs_max_fieldsPromiseChain & {get: <R extends admins_auth_logs_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_max_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_max_fields, R> | undefined)>}),
    min: (admins_auth_logs_min_fieldsPromiseChain & {get: <R extends admins_auth_logs_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_min_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_min_fields, R> | undefined)>}),
    stddev: (admins_auth_logs_stddev_fieldsPromiseChain & {get: <R extends admins_auth_logs_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_stddev_fields, R> | undefined)>}),
    stddev_pop: (admins_auth_logs_stddev_pop_fieldsPromiseChain & {get: <R extends admins_auth_logs_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_pop_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (admins_auth_logs_stddev_samp_fieldsPromiseChain & {get: <R extends admins_auth_logs_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_samp_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_stddev_samp_fields, R> | undefined)>}),
    sum: (admins_auth_logs_sum_fieldsPromiseChain & {get: <R extends admins_auth_logs_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_sum_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_sum_fields, R> | undefined)>}),
    var_pop: (admins_auth_logs_var_pop_fieldsPromiseChain & {get: <R extends admins_auth_logs_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_var_pop_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_var_pop_fields, R> | undefined)>}),
    var_samp: (admins_auth_logs_var_samp_fieldsPromiseChain & {get: <R extends admins_auth_logs_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_var_samp_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_var_samp_fields, R> | undefined)>}),
    variance: (admins_auth_logs_variance_fieldsPromiseChain & {get: <R extends admins_auth_logs_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_variance_fields, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_variance_fields, R> | undefined)>})
}


/** aggregate fields of "admins_auth_logs" */
export interface admins_auth_logs_aggregate_fieldsObservableChain{
    avg: (admins_auth_logs_avg_fieldsObservableChain & {get: <R extends admins_auth_logs_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_avg_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (admins_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (admins_auth_logs_max_fieldsObservableChain & {get: <R extends admins_auth_logs_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_max_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_max_fields, R> | undefined)>}),
    min: (admins_auth_logs_min_fieldsObservableChain & {get: <R extends admins_auth_logs_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_min_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_min_fields, R> | undefined)>}),
    stddev: (admins_auth_logs_stddev_fieldsObservableChain & {get: <R extends admins_auth_logs_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_stddev_fields, R> | undefined)>}),
    stddev_pop: (admins_auth_logs_stddev_pop_fieldsObservableChain & {get: <R extends admins_auth_logs_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_pop_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (admins_auth_logs_stddev_samp_fieldsObservableChain & {get: <R extends admins_auth_logs_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_stddev_samp_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_stddev_samp_fields, R> | undefined)>}),
    sum: (admins_auth_logs_sum_fieldsObservableChain & {get: <R extends admins_auth_logs_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_sum_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_sum_fields, R> | undefined)>}),
    var_pop: (admins_auth_logs_var_pop_fieldsObservableChain & {get: <R extends admins_auth_logs_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_var_pop_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_var_pop_fields, R> | undefined)>}),
    var_samp: (admins_auth_logs_var_samp_fieldsObservableChain & {get: <R extends admins_auth_logs_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_var_samp_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_var_samp_fields, R> | undefined)>}),
    variance: (admins_auth_logs_variance_fieldsObservableChain & {get: <R extends admins_auth_logs_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_variance_fields, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_variance_fields, R> | undefined)>})
}


/** aggregate avg on columns */
export interface admins_auth_logs_avg_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate avg on columns */
export interface admins_auth_logs_avg_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate max on columns */
export interface admins_auth_logs_max_fieldsPromiseChain{
    admin_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate max on columns */
export interface admins_auth_logs_max_fieldsObservableChain{
    admin_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** aggregate min on columns */
export interface admins_auth_logs_min_fieldsPromiseChain{
    admin_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate min on columns */
export interface admins_auth_logs_min_fieldsObservableChain{
    admin_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** response of any mutation on the table "admins_auth_logs" */
export interface admins_auth_logs_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>})
}


/** response of any mutation on the table "admins_auth_logs" */
export interface admins_auth_logs_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>})
}


/** aggregate stddev on columns */
export interface admins_auth_logs_stddev_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev on columns */
export interface admins_auth_logs_stddev_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface admins_auth_logs_stddev_pop_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface admins_auth_logs_stddev_pop_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface admins_auth_logs_stddev_samp_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface admins_auth_logs_stddev_samp_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate sum on columns */
export interface admins_auth_logs_sum_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate sum on columns */
export interface admins_auth_logs_sum_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface admins_auth_logs_var_pop_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface admins_auth_logs_var_pop_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface admins_auth_logs_var_samp_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface admins_auth_logs_var_samp_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface admins_auth_logs_variance_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface admins_auth_logs_variance_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate max on columns */
export interface admins_max_fieldsPromiseChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate max on columns */
export interface admins_max_fieldsObservableChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface admins_min_fieldsPromiseChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface admins_min_fieldsObservableChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** response of any mutation on the table "admins" */
export interface admins_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>})
}


/** response of any mutation on the table "admins" */
export interface admins_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>})
}


/** columns and relationships of "auth_methods" */
export interface auth_methodsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** columns and relationships of "auth_methods" */
export interface auth_methodsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** aggregated selection of "auth_methods" */
export interface auth_methods_aggregatePromiseChain{
    aggregate: (auth_methods_aggregate_fieldsPromiseChain & {get: <R extends auth_methods_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<auth_methods_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>})
}


/** aggregated selection of "auth_methods" */
export interface auth_methods_aggregateObservableChain{
    aggregate: (auth_methods_aggregate_fieldsObservableChain & {get: <R extends auth_methods_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<auth_methods_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>})
}


/** aggregate fields of "auth_methods" */
export interface auth_methods_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (auth_methods_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (auth_methods_max_fieldsPromiseChain & {get: <R extends auth_methods_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_max_fields, R> | undefined)) => Promise<(FieldsSelection<auth_methods_max_fields, R> | undefined)>}),
    min: (auth_methods_min_fieldsPromiseChain & {get: <R extends auth_methods_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_min_fields, R> | undefined)) => Promise<(FieldsSelection<auth_methods_min_fields, R> | undefined)>})
}


/** aggregate fields of "auth_methods" */
export interface auth_methods_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (auth_methods_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (auth_methods_max_fieldsObservableChain & {get: <R extends auth_methods_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_max_fields, R> | undefined)) => Observable<(FieldsSelection<auth_methods_max_fields, R> | undefined)>}),
    min: (auth_methods_min_fieldsObservableChain & {get: <R extends auth_methods_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_min_fields, R> | undefined)) => Observable<(FieldsSelection<auth_methods_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface auth_methods_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface auth_methods_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface auth_methods_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface auth_methods_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "auth_methods" */
export interface auth_methods_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>})
}


/** response of any mutation on the table "auth_methods" */
export interface auth_methods_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>})
}


/** columns and relationships of "blacklist_refresh_token" */
export interface blacklist_refresh_tokenPromiseChain{
    sig: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: Scalars['timestamptz']) => Promise<Scalars['timestamptz']>})
}


/** columns and relationships of "blacklist_refresh_token" */
export interface blacklist_refresh_tokenObservableChain{
    sig: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: Scalars['timestamptz']) => Observable<Scalars['timestamptz']>})
}


/** aggregated selection of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregatePromiseChain{
    aggregate: (blacklist_refresh_token_aggregate_fieldsPromiseChain & {get: <R extends blacklist_refresh_token_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>})
}


/** aggregated selection of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregateObservableChain{
    aggregate: (blacklist_refresh_token_aggregate_fieldsObservableChain & {get: <R extends blacklist_refresh_token_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>})
}


/** aggregate fields of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (blacklist_refresh_token_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (blacklist_refresh_token_max_fieldsPromiseChain & {get: <R extends blacklist_refresh_token_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_max_fields, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_max_fields, R> | undefined)>}),
    min: (blacklist_refresh_token_min_fieldsPromiseChain & {get: <R extends blacklist_refresh_token_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_min_fields, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_min_fields, R> | undefined)>})
}


/** aggregate fields of "blacklist_refresh_token" */
export interface blacklist_refresh_token_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (blacklist_refresh_token_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (blacklist_refresh_token_max_fieldsObservableChain & {get: <R extends blacklist_refresh_token_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_max_fields, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_max_fields, R> | undefined)>}),
    min: (blacklist_refresh_token_min_fieldsObservableChain & {get: <R extends blacklist_refresh_token_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_min_fields, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface blacklist_refresh_token_max_fieldsPromiseChain{
    sig: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate max on columns */
export interface blacklist_refresh_token_max_fieldsObservableChain{
    sig: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface blacklist_refresh_token_min_fieldsPromiseChain{
    sig: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface blacklist_refresh_token_min_fieldsObservableChain{
    sig: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    valid_till: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** response of any mutation on the table "blacklist_refresh_token" */
export interface blacklist_refresh_token_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>})
}


/** response of any mutation on the table "blacklist_refresh_token" */
export interface blacklist_refresh_token_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>})
}


/** columns and relationships of "connectors" */
export interface connectorsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>})&(customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}


/** columns and relationships of "connectors" */
export interface connectorsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>})&(customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}


/** aggregated selection of "connectors" */
export interface connectors_aggregatePromiseChain{
    aggregate: (connectors_aggregate_fieldsPromiseChain & {get: <R extends connectors_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<connectors_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>})
}


/** aggregated selection of "connectors" */
export interface connectors_aggregateObservableChain{
    aggregate: (connectors_aggregate_fieldsObservableChain & {get: <R extends connectors_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<connectors_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>})
}


/** aggregate fields of "connectors" */
export interface connectors_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (connectors_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (connectors_max_fieldsPromiseChain & {get: <R extends connectors_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_max_fields, R> | undefined)) => Promise<(FieldsSelection<connectors_max_fields, R> | undefined)>}),
    min: (connectors_min_fieldsPromiseChain & {get: <R extends connectors_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_min_fields, R> | undefined)) => Promise<(FieldsSelection<connectors_min_fields, R> | undefined)>})
}


/** aggregate fields of "connectors" */
export interface connectors_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (connectors_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (connectors_max_fieldsObservableChain & {get: <R extends connectors_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_max_fields, R> | undefined)) => Observable<(FieldsSelection<connectors_max_fields, R> | undefined)>}),
    min: (connectors_min_fieldsObservableChain & {get: <R extends connectors_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<connectors_min_fields, R> | undefined)) => Observable<(FieldsSelection<connectors_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface connectors_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface connectors_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface connectors_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface connectors_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "connectors" */
export interface connectors_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>})
}


/** response of any mutation on the table "connectors" */
export interface connectors_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>})
}


/** columns and relationships of "customer_user" */
export interface customer_userPromiseChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    
/** An object relationship */
user: (usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Promise<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}


/** columns and relationships of "customer_user" */
export interface customer_userObservableChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    
/** An object relationship */
user: (usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Observable<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}


/** aggregated selection of "customer_user" */
export interface customer_user_aggregatePromiseChain{
    aggregate: (customer_user_aggregate_fieldsPromiseChain & {get: <R extends customer_user_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})
}


/** aggregated selection of "customer_user" */
export interface customer_user_aggregateObservableChain{
    aggregate: (customer_user_aggregate_fieldsObservableChain & {get: <R extends customer_user_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})
}


/** aggregate fields of "customer_user" */
export interface customer_user_aggregate_fieldsPromiseChain{
    avg: (customer_user_avg_fieldsPromiseChain & {get: <R extends customer_user_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_avg_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (customer_user_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (customer_user_max_fieldsPromiseChain & {get: <R extends customer_user_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_max_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_max_fields, R> | undefined)>}),
    min: (customer_user_min_fieldsPromiseChain & {get: <R extends customer_user_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_min_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_min_fields, R> | undefined)>}),
    stddev: (customer_user_stddev_fieldsPromiseChain & {get: <R extends customer_user_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_stddev_fields, R> | undefined)>}),
    stddev_pop: (customer_user_stddev_pop_fieldsPromiseChain & {get: <R extends customer_user_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_pop_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (customer_user_stddev_samp_fieldsPromiseChain & {get: <R extends customer_user_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_samp_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_stddev_samp_fields, R> | undefined)>}),
    sum: (customer_user_sum_fieldsPromiseChain & {get: <R extends customer_user_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sum_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_sum_fields, R> | undefined)>}),
    var_pop: (customer_user_var_pop_fieldsPromiseChain & {get: <R extends customer_user_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_var_pop_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_var_pop_fields, R> | undefined)>}),
    var_samp: (customer_user_var_samp_fieldsPromiseChain & {get: <R extends customer_user_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_var_samp_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_var_samp_fields, R> | undefined)>}),
    variance: (customer_user_variance_fieldsPromiseChain & {get: <R extends customer_user_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_variance_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_variance_fields, R> | undefined)>})
}


/** aggregate fields of "customer_user" */
export interface customer_user_aggregate_fieldsObservableChain{
    avg: (customer_user_avg_fieldsObservableChain & {get: <R extends customer_user_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_avg_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (customer_user_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (customer_user_max_fieldsObservableChain & {get: <R extends customer_user_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_max_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_max_fields, R> | undefined)>}),
    min: (customer_user_min_fieldsObservableChain & {get: <R extends customer_user_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_min_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_min_fields, R> | undefined)>}),
    stddev: (customer_user_stddev_fieldsObservableChain & {get: <R extends customer_user_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_stddev_fields, R> | undefined)>}),
    stddev_pop: (customer_user_stddev_pop_fieldsObservableChain & {get: <R extends customer_user_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_pop_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (customer_user_stddev_samp_fieldsObservableChain & {get: <R extends customer_user_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_stddev_samp_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_stddev_samp_fields, R> | undefined)>}),
    sum: (customer_user_sum_fieldsObservableChain & {get: <R extends customer_user_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sum_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_sum_fields, R> | undefined)>}),
    var_pop: (customer_user_var_pop_fieldsObservableChain & {get: <R extends customer_user_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_var_pop_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_var_pop_fields, R> | undefined)>}),
    var_samp: (customer_user_var_samp_fieldsObservableChain & {get: <R extends customer_user_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_var_samp_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_var_samp_fields, R> | undefined)>}),
    variance: (customer_user_variance_fieldsObservableChain & {get: <R extends customer_user_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_variance_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_variance_fields, R> | undefined)>})
}


/** aggregate avg on columns */
export interface customer_user_avg_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate avg on columns */
export interface customer_user_avg_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_max_fieldsPromiseChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_max_fieldsObservableChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_min_fieldsPromiseChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_min_fieldsObservableChain{
    brukerBrukerNavn: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "customer_user" */
export interface customer_user_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})
}


/** response of any mutation on the table "customer_user" */
export interface customer_user_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})
}


/** columns and relationships of "customer_user_service" */
export interface customer_user_servicePromiseChain{
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Promise<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Promise<FieldsSelection<services, R>>}),
    
/** An object relationship */
user: (usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Promise<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}


/** columns and relationships of "customer_user_service" */
export interface customer_user_serviceObservableChain{
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Observable<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Observable<FieldsSelection<services, R>>}),
    
/** An object relationship */
user: (usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Observable<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}


/** aggregated selection of "customer_user_service" */
export interface customer_user_service_aggregatePromiseChain{
    aggregate: (customer_user_service_aggregate_fieldsPromiseChain & {get: <R extends customer_user_service_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})
}


/** aggregated selection of "customer_user_service" */
export interface customer_user_service_aggregateObservableChain{
    aggregate: (customer_user_service_aggregate_fieldsObservableChain & {get: <R extends customer_user_service_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})
}


/** aggregate fields of "customer_user_service" */
export interface customer_user_service_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (customer_user_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (customer_user_service_max_fieldsPromiseChain & {get: <R extends customer_user_service_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_max_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_max_fields, R> | undefined)>}),
    min: (customer_user_service_min_fieldsPromiseChain & {get: <R extends customer_user_service_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_min_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_min_fields, R> | undefined)>})
}


/** aggregate fields of "customer_user_service" */
export interface customer_user_service_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (customer_user_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (customer_user_service_max_fieldsObservableChain & {get: <R extends customer_user_service_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_max_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_max_fields, R> | undefined)>}),
    min: (customer_user_service_min_fieldsObservableChain & {get: <R extends customer_user_service_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_min_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_service_max_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_service_max_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_service_min_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_service_min_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "customer_user_service" */
export interface customer_user_service_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})
}


/** response of any mutation on the table "customer_user_service" */
export interface customer_user_service_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})
}


/** aggregate stddev on columns */
export interface customer_user_stddev_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev on columns */
export interface customer_user_stddev_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface customer_user_stddev_pop_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface customer_user_stddev_pop_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface customer_user_stddev_samp_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface customer_user_stddev_samp_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** columns and relationships of "customer_user_sub_service" */
export interface customer_user_sub_servicePromiseChain{
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Promise<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Promise<FieldsSelection<services, R>>}),
    
/** An object relationship */
subServiceByServiceSubService: (sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An object relationship */
subServiceBySubService: (sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An object relationship */
user: (usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Promise<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}


/** columns and relationships of "customer_user_sub_service" */
export interface customer_user_sub_serviceObservableChain{
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Observable<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Observable<FieldsSelection<services, R>>}),
    
/** An object relationship */
subServiceByServiceSubService: (sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An object relationship */
subServiceBySubService: (sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An object relationship */
user: (usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Observable<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}


/** aggregated selection of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregatePromiseChain{
    aggregate: (customer_user_sub_service_aggregate_fieldsPromiseChain & {get: <R extends customer_user_sub_service_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})
}


/** aggregated selection of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregateObservableChain{
    aggregate: (customer_user_sub_service_aggregate_fieldsObservableChain & {get: <R extends customer_user_sub_service_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})
}


/** aggregate fields of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (customer_user_sub_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (customer_user_sub_service_max_fieldsPromiseChain & {get: <R extends customer_user_sub_service_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_max_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_max_fields, R> | undefined)>}),
    min: (customer_user_sub_service_min_fieldsPromiseChain & {get: <R extends customer_user_sub_service_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_min_fields, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_min_fields, R> | undefined)>})
}


/** aggregate fields of "customer_user_sub_service" */
export interface customer_user_sub_service_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (customer_user_sub_service_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (customer_user_sub_service_max_fieldsObservableChain & {get: <R extends customer_user_sub_service_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_max_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_max_fields, R> | undefined)>}),
    min: (customer_user_sub_service_min_fieldsObservableChain & {get: <R extends customer_user_sub_service_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_min_fields, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_sub_service_max_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface customer_user_sub_service_max_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_sub_service_min_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface customer_user_sub_service_min_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    sub_service: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "customer_user_sub_service" */
export interface customer_user_sub_service_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})
}


/** response of any mutation on the table "customer_user_sub_service" */
export interface customer_user_sub_service_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})
}


/** aggregate sum on columns */
export interface customer_user_sum_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate sum on columns */
export interface customer_user_sum_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface customer_user_var_pop_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface customer_user_var_pop_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface customer_user_var_samp_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface customer_user_var_samp_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface customer_user_variance_fieldsPromiseChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface customer_user_variance_fieldsObservableChain{
    region: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** columns and relationships of "customers" */
export interface customersPromiseChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    connector: ({get: (request?: boolean|number, defaultValue?: connectors_enum) => Promise<connectors_enum>}),
    
/** An object relationship */
connectorByConnector: (connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>) => Promise<FieldsSelection<connectors, R>>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
customer_srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
customer_srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** An array relationship */
customer_users: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>}),
    
/** An aggregate relationship */
customer_users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>}),
    
/** An object relationship */
customers_contact: (customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>})&(features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
partner: (partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    status: ({get: (request?: boolean|number, defaultValue?: status_enum) => Promise<status_enum>}),
    
/** An object relationship */
statusByStatus: (statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>) => Promise<FieldsSelection<status, R>>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** columns and relationships of "customers" */
export interface customersObservableChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    connector: ({get: (request?: boolean|number, defaultValue?: connectors_enum) => Observable<connectors_enum>}),
    
/** An object relationship */
connectorByConnector: (connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>) => Observable<FieldsSelection<connectors, R>>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
customer_srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
customer_srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** An array relationship */
customer_users: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>}),
    
/** An aggregate relationship */
customer_users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>}),
    
/** An object relationship */
customers_contact: (customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>})&(features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
partner: (partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    status: ({get: (request?: boolean|number, defaultValue?: status_enum) => Observable<status_enum>}),
    
/** An object relationship */
statusByStatus: (statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>) => Observable<FieldsSelection<status, R>>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** aggregated selection of "customers" */
export interface customers_aggregatePromiseChain{
    aggregate: (customers_aggregate_fieldsPromiseChain & {get: <R extends customers_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<customers_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})
}


/** aggregated selection of "customers" */
export interface customers_aggregateObservableChain{
    aggregate: (customers_aggregate_fieldsObservableChain & {get: <R extends customers_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<customers_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})
}


/** aggregate fields of "customers" */
export interface customers_aggregate_fieldsPromiseChain{
    avg: (customers_avg_fieldsPromiseChain & {get: <R extends customers_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_avg_fields, R> | undefined)) => Promise<(FieldsSelection<customers_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (customers_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (customers_max_fieldsPromiseChain & {get: <R extends customers_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_max_fields, R> | undefined)) => Promise<(FieldsSelection<customers_max_fields, R> | undefined)>}),
    min: (customers_min_fieldsPromiseChain & {get: <R extends customers_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_min_fields, R> | undefined)) => Promise<(FieldsSelection<customers_min_fields, R> | undefined)>}),
    stddev: (customers_stddev_fieldsPromiseChain & {get: <R extends customers_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_fields, R> | undefined)) => Promise<(FieldsSelection<customers_stddev_fields, R> | undefined)>}),
    stddev_pop: (customers_stddev_pop_fieldsPromiseChain & {get: <R extends customers_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_pop_fields, R> | undefined)) => Promise<(FieldsSelection<customers_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (customers_stddev_samp_fieldsPromiseChain & {get: <R extends customers_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_samp_fields, R> | undefined)) => Promise<(FieldsSelection<customers_stddev_samp_fields, R> | undefined)>}),
    sum: (customers_sum_fieldsPromiseChain & {get: <R extends customers_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_sum_fields, R> | undefined)) => Promise<(FieldsSelection<customers_sum_fields, R> | undefined)>}),
    var_pop: (customers_var_pop_fieldsPromiseChain & {get: <R extends customers_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_var_pop_fields, R> | undefined)) => Promise<(FieldsSelection<customers_var_pop_fields, R> | undefined)>}),
    var_samp: (customers_var_samp_fieldsPromiseChain & {get: <R extends customers_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_var_samp_fields, R> | undefined)) => Promise<(FieldsSelection<customers_var_samp_fields, R> | undefined)>}),
    variance: (customers_variance_fieldsPromiseChain & {get: <R extends customers_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_variance_fields, R> | undefined)) => Promise<(FieldsSelection<customers_variance_fields, R> | undefined)>})
}


/** aggregate fields of "customers" */
export interface customers_aggregate_fieldsObservableChain{
    avg: (customers_avg_fieldsObservableChain & {get: <R extends customers_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_avg_fields, R> | undefined)) => Observable<(FieldsSelection<customers_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (customers_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (customers_max_fieldsObservableChain & {get: <R extends customers_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_max_fields, R> | undefined)) => Observable<(FieldsSelection<customers_max_fields, R> | undefined)>}),
    min: (customers_min_fieldsObservableChain & {get: <R extends customers_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_min_fields, R> | undefined)) => Observable<(FieldsSelection<customers_min_fields, R> | undefined)>}),
    stddev: (customers_stddev_fieldsObservableChain & {get: <R extends customers_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_fields, R> | undefined)) => Observable<(FieldsSelection<customers_stddev_fields, R> | undefined)>}),
    stddev_pop: (customers_stddev_pop_fieldsObservableChain & {get: <R extends customers_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_pop_fields, R> | undefined)) => Observable<(FieldsSelection<customers_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (customers_stddev_samp_fieldsObservableChain & {get: <R extends customers_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_stddev_samp_fields, R> | undefined)) => Observable<(FieldsSelection<customers_stddev_samp_fields, R> | undefined)>}),
    sum: (customers_sum_fieldsObservableChain & {get: <R extends customers_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_sum_fields, R> | undefined)) => Observable<(FieldsSelection<customers_sum_fields, R> | undefined)>}),
    var_pop: (customers_var_pop_fieldsObservableChain & {get: <R extends customers_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_var_pop_fields, R> | undefined)) => Observable<(FieldsSelection<customers_var_pop_fields, R> | undefined)>}),
    var_samp: (customers_var_samp_fieldsObservableChain & {get: <R extends customers_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_var_samp_fields, R> | undefined)) => Observable<(FieldsSelection<customers_var_samp_fields, R> | undefined)>}),
    variance: (customers_variance_fieldsObservableChain & {get: <R extends customers_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_variance_fields, R> | undefined)) => Observable<(FieldsSelection<customers_variance_fields, R> | undefined)>})
}


/** aggregate avg on columns */
export interface customers_avg_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate avg on columns */
export interface customers_avg_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** columns and relationships of "customers_contact" */
export interface customers_contactPromiseChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** columns and relationships of "customers_contact" */
export interface customers_contactObservableChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregated selection of "customers_contact" */
export interface customers_contact_aggregatePromiseChain{
    aggregate: (customers_contact_aggregate_fieldsPromiseChain & {get: <R extends customers_contact_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<customers_contact_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>})
}


/** aggregated selection of "customers_contact" */
export interface customers_contact_aggregateObservableChain{
    aggregate: (customers_contact_aggregate_fieldsObservableChain & {get: <R extends customers_contact_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<customers_contact_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>})
}


/** aggregate fields of "customers_contact" */
export interface customers_contact_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (customers_contact_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (customers_contact_max_fieldsPromiseChain & {get: <R extends customers_contact_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_max_fields, R> | undefined)) => Promise<(FieldsSelection<customers_contact_max_fields, R> | undefined)>}),
    min: (customers_contact_min_fieldsPromiseChain & {get: <R extends customers_contact_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_min_fields, R> | undefined)) => Promise<(FieldsSelection<customers_contact_min_fields, R> | undefined)>})
}


/** aggregate fields of "customers_contact" */
export interface customers_contact_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (customers_contact_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (customers_contact_max_fieldsObservableChain & {get: <R extends customers_contact_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_max_fields, R> | undefined)) => Observable<(FieldsSelection<customers_contact_max_fields, R> | undefined)>}),
    min: (customers_contact_min_fieldsObservableChain & {get: <R extends customers_contact_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_min_fields, R> | undefined)) => Observable<(FieldsSelection<customers_contact_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface customers_contact_max_fieldsPromiseChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface customers_contact_max_fieldsObservableChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface customers_contact_min_fieldsPromiseChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface customers_contact_min_fieldsObservableChain{
    comm_consents_descr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    logo: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    message: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    tel: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "customers_contact" */
export interface customers_contact_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>})
}


/** response of any mutation on the table "customers_contact" */
export interface customers_contact_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>})
}


/** aggregate max on columns */
export interface customers_max_fieldsPromiseChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate max on columns */
export interface customers_max_fieldsObservableChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface customers_min_fieldsPromiseChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface customers_min_fieldsObservableChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    deleted_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    org_nr: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    partner_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** response of any mutation on the table "customers" */
export interface customers_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})
}


/** response of any mutation on the table "customers" */
export interface customers_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})
}


/** aggregate stddev on columns */
export interface customers_stddev_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev on columns */
export interface customers_stddev_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface customers_stddev_pop_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface customers_stddev_pop_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface customers_stddev_samp_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface customers_stddev_samp_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate sum on columns */
export interface customers_sum_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate sum on columns */
export interface customers_sum_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface customers_var_pop_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface customers_var_pop_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface customers_var_samp_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface customers_var_samp_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface customers_variance_fieldsPromiseChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface customers_variance_fieldsObservableChain{
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** columns and relationships of "feature_names" */
export interface feature_namesPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>})&(features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}


/** columns and relationships of "feature_names" */
export interface feature_namesObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>})&(features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}


/** aggregated selection of "feature_names" */
export interface feature_names_aggregatePromiseChain{
    aggregate: (feature_names_aggregate_fieldsPromiseChain & {get: <R extends feature_names_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<feature_names_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>})
}


/** aggregated selection of "feature_names" */
export interface feature_names_aggregateObservableChain{
    aggregate: (feature_names_aggregate_fieldsObservableChain & {get: <R extends feature_names_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<feature_names_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>})
}


/** aggregate fields of "feature_names" */
export interface feature_names_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (feature_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (feature_names_max_fieldsPromiseChain & {get: <R extends feature_names_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_max_fields, R> | undefined)) => Promise<(FieldsSelection<feature_names_max_fields, R> | undefined)>}),
    min: (feature_names_min_fieldsPromiseChain & {get: <R extends feature_names_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_min_fields, R> | undefined)) => Promise<(FieldsSelection<feature_names_min_fields, R> | undefined)>})
}


/** aggregate fields of "feature_names" */
export interface feature_names_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (feature_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (feature_names_max_fieldsObservableChain & {get: <R extends feature_names_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_max_fields, R> | undefined)) => Observable<(FieldsSelection<feature_names_max_fields, R> | undefined)>}),
    min: (feature_names_min_fieldsObservableChain & {get: <R extends feature_names_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_min_fields, R> | undefined)) => Observable<(FieldsSelection<feature_names_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface feature_names_max_fieldsPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface feature_names_max_fieldsObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface feature_names_min_fieldsPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface feature_names_min_fieldsObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "feature_names" */
export interface feature_names_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>})
}


/** response of any mutation on the table "feature_names" */
export interface feature_names_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>})
}


/** columns and relationships of "features" */
export interface featuresPromiseChain{
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    
/** An object relationship */
feature_name: (feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>) => Promise<FieldsSelection<feature_names, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: feature_names_enum) => Promise<feature_names_enum>})
}


/** columns and relationships of "features" */
export interface featuresObservableChain{
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    
/** An object relationship */
feature_name: (feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>) => Observable<FieldsSelection<feature_names, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: feature_names_enum) => Observable<feature_names_enum>})
}


/** aggregated selection of "features" */
export interface features_aggregatePromiseChain{
    aggregate: (features_aggregate_fieldsPromiseChain & {get: <R extends features_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<features_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})
}


/** aggregated selection of "features" */
export interface features_aggregateObservableChain{
    aggregate: (features_aggregate_fieldsObservableChain & {get: <R extends features_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<features_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})
}


/** aggregate fields of "features" */
export interface features_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (features_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (features_max_fieldsPromiseChain & {get: <R extends features_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_max_fields, R> | undefined)) => Promise<(FieldsSelection<features_max_fields, R> | undefined)>}),
    min: (features_min_fieldsPromiseChain & {get: <R extends features_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_min_fields, R> | undefined)) => Promise<(FieldsSelection<features_min_fields, R> | undefined)>})
}


/** aggregate fields of "features" */
export interface features_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (features_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (features_max_fieldsObservableChain & {get: <R extends features_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_max_fields, R> | undefined)) => Observable<(FieldsSelection<features_max_fields, R> | undefined)>}),
    min: (features_min_fieldsObservableChain & {get: <R extends features_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<features_min_fields, R> | undefined)) => Observable<(FieldsSelection<features_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface features_max_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface features_max_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface features_min_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface features_min_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "features" */
export interface features_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})
}


/** response of any mutation on the table "features" */
export interface features_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})
}

export interface getCustomersAndCountUsersOutputPromiseChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    connector: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
customerFeatures: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
customerFeatures_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>})&(features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>}),
    
/** An array relationship */
customerSrvUrls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
customerSrvUrls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** An object relationship */
customersContact: (customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>) => Promise<FieldsSelection<customers_contact, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    users_count: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    x_api_key: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}

export interface getCustomersAndCountUsersOutputObservableChain{
    conn_string: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    connector: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
customerFeatures: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
customerFeatures_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>})&(features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>}),
    
/** An array relationship */
customerSrvUrls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
customerSrvUrls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** An object relationship */
customersContact: (customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>) => Observable<FieldsSelection<customers_contact, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    refresh_token_validity: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    users_count: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    x_api_key: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}


/** mutation root */
export interface mutation_rootPromiseChain{
    
/** delete data from the table: "admins" */
delete_admins: ((args: {
/** filter the rows which have to be deleted */
where: admins_bool_exp}) => admins_mutation_responsePromiseChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** delete data from the table: "admins_auth_logs" */
delete_admins_auth_logs: ((args: {
/** filter the rows which have to be deleted */
where: admins_auth_logs_bool_exp}) => admins_auth_logs_mutation_responsePromiseChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "admins_auth_logs" */
delete_admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsPromiseChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** delete single row from the table: "admins" */
delete_admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Promise<(FieldsSelection<admins, R> | undefined)>}),
    
/** delete data from the table: "auth_methods" */
delete_auth_methods: ((args: {
/** filter the rows which have to be deleted */
where: auth_methods_bool_exp}) => auth_methods_mutation_responsePromiseChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Promise<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "auth_methods" */
delete_auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Promise<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** delete data from the table: "blacklist_refresh_token" */
delete_blacklist_refresh_token: ((args: {
/** filter the rows which have to be deleted */
where: blacklist_refresh_token_bool_exp}) => blacklist_refresh_token_mutation_responsePromiseChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "blacklist_refresh_token" */
delete_blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** delete data from the table: "connectors" */
delete_connectors: ((args: {
/** filter the rows which have to be deleted */
where: connectors_bool_exp}) => connectors_mutation_responsePromiseChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Promise<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "connectors" */
delete_connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Promise<(FieldsSelection<connectors, R> | undefined)>}),
    
/** delete data from the table: "customer_user" */
delete_customer_user: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_bool_exp}) => customer_user_mutation_responsePromiseChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user" */
delete_customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userPromiseChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Promise<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** delete data from the table: "customer_user_service" */
delete_customer_user_service: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_service_bool_exp}) => customer_user_service_mutation_responsePromiseChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user_service" */
delete_customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_servicePromiseChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** delete data from the table: "customer_user_sub_service" */
delete_customer_user_sub_service: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_sub_service_bool_exp}) => customer_user_sub_service_mutation_responsePromiseChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user_sub_service" */
delete_customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_servicePromiseChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** delete data from the table: "customers" */
delete_customers: ((args: {
/** filter the rows which have to be deleted */
where: customers_bool_exp}) => customers_mutation_responsePromiseChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customers" */
delete_customers_by_pk: ((args: {id: Scalars['uuid']}) => customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Promise<(FieldsSelection<customers, R> | undefined)>}),
    
/** delete data from the table: "customers_contact" */
delete_customers_contact: ((args: {
/** filter the rows which have to be deleted */
where: customers_contact_bool_exp}) => customers_contact_mutation_responsePromiseChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customers_contact" */
delete_customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** delete data from the table: "feature_names" */
delete_feature_names: ((args: {
/** filter the rows which have to be deleted */
where: feature_names_bool_exp}) => feature_names_mutation_responsePromiseChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "feature_names" */
delete_feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Promise<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** delete data from the table: "features" */
delete_features: ((args: {
/** filter the rows which have to be deleted */
where: features_bool_exp}) => features_mutation_responsePromiseChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Promise<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "features" */
delete_features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresPromiseChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Promise<(FieldsSelection<features, R> | undefined)>}),
    
/** delete data from the table: "partners" */
delete_partners: ((args: {
/** filter the rows which have to be deleted */
where: partners_bool_exp}) => partners_mutation_responsePromiseChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Promise<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "partners" */
delete_partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    
/** delete data from the table: "roles" */
delete_roles: ((args: {
/** filter the rows which have to be deleted */
where: roles_bool_exp}) => roles_mutation_responsePromiseChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Promise<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "roles" */
delete_roles_by_pk: ((args: {name: Scalars['String']}) => rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Promise<(FieldsSelection<roles, R> | undefined)>}),
    
/** delete data from the table: "services" */
delete_services: ((args: {
/** filter the rows which have to be deleted */
where: services_bool_exp}) => services_mutation_responsePromiseChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "services" */
delete_services_by_pk: ((args: {name: Scalars['String']}) => servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Promise<(FieldsSelection<services, R> | undefined)>}),
    
/** delete data from the table: "srv_names" */
delete_srv_names: ((args: {
/** filter the rows which have to be deleted */
where: srv_names_bool_exp}) => srv_names_mutation_responsePromiseChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "srv_names" */
delete_srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Promise<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** delete data from the table: "srv_urls" */
delete_srv_urls: ((args: {
/** filter the rows which have to be deleted */
where: srv_urls_bool_exp}) => srv_urls_mutation_responsePromiseChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "srv_urls" */
delete_srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsPromiseChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Promise<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** delete data from the table: "status" */
delete_status: ((args: {
/** filter the rows which have to be deleted */
where: status_bool_exp}) => status_mutation_responsePromiseChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Promise<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "status" */
delete_status_by_pk: ((args: {name: Scalars['String']}) => statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Promise<(FieldsSelection<status, R> | undefined)>}),
    
/** delete data from the table: "sub_services" */
delete_sub_services: ((args: {
/** filter the rows which have to be deleted */
where: sub_services_bool_exp}) => sub_services_mutation_responsePromiseChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "sub_services" */
delete_sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** delete data from the table: "user_basic_data" */
delete_user_basic_data: ((args: {
/** filter the rows which have to be deleted */
where: user_basic_data_bool_exp}) => user_basic_data_mutation_responsePromiseChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "user_basic_data" */
delete_user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** delete data from the table: "users" */
delete_users: ((args: {
/** filter the rows which have to be deleted */
where: users_bool_exp}) => users_mutation_responsePromiseChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** delete data from the table: "users_auth_logs" */
delete_users_auth_logs: ((args: {
/** filter the rows which have to be deleted */
where: users_auth_logs_bool_exp}) => users_auth_logs_mutation_responsePromiseChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "users_auth_logs" */
delete_users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsPromiseChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** delete single row from the table: "users" */
delete_users_by_pk: ((args: {id: Scalars['uuid']}) => usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Promise<(FieldsSelection<users, R> | undefined)>}),
    insertAdmin: ((args: {email: Scalars['bpchar'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']}) => ReturnAffectedItemIdPromiseChain & {get: <R extends ReturnAffectedItemIdRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedItemId, R> | undefined)) => Promise<(FieldsSelection<ReturnAffectedItemId, R> | undefined)>}),
    insertCustomer: ((args: {conn_string: Scalars['String'],connector?: (Scalars['String'] | null),contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),name: Scalars['String'],refresh_token_validity: Scalars['Int']}) => getCustomersAndCountUsersOutputPromiseChain & {get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: (FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)) => Promise<(FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)>}),
    insertUserOrWarnIfExists: ((args: {brukerBrukerNavn?: (Scalars['String'] | null),brukerRegion?: (Scalars['Int'] | null),customer_id?: (Scalars['uuid'] | null),email: Scalars['String'],name: Scalars['String'],password: Scalars['String'],phone: Scalars['String'],role?: (Scalars['String'] | null),token?: (Scalars['String'] | null)}) => InsertUserOrWarnIfExistsOutputPromiseChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Promise<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>}),
    insertUsersOrWarnIfExists: ((args?: {objects?: (InsertUserData[] | null)}) => InsertUserOrWarnIfExistsOutputPromiseChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Promise<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>})&(InsertUserOrWarnIfExistsOutputPromiseChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Promise<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>}),
    
/** insert data into the table: "admins" */
insert_admins: ((args: {
/** the rows to be inserted */
objects: admins_insert_input[],
/** on conflict condition */
on_conflict?: (admins_on_conflict | null)}) => admins_mutation_responsePromiseChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "admins_auth_logs" */
insert_admins_auth_logs: ((args: {
/** the rows to be inserted */
objects: admins_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (admins_auth_logs_on_conflict | null)}) => admins_auth_logs_mutation_responsePromiseChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "admins_auth_logs" */
insert_admins_auth_logs_one: ((args: {
/** the row to be inserted */
object: admins_auth_logs_insert_input,
/** on conflict condition */
on_conflict?: (admins_auth_logs_on_conflict | null)}) => admins_auth_logsPromiseChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** insert a single row into the table: "admins" */
insert_admins_one: ((args: {
/** the row to be inserted */
object: admins_insert_input,
/** on conflict condition */
on_conflict?: (admins_on_conflict | null)}) => adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Promise<(FieldsSelection<admins, R> | undefined)>}),
    
/** insert data into the table: "auth_methods" */
insert_auth_methods: ((args: {
/** the rows to be inserted */
objects: auth_methods_insert_input[],
/** on conflict condition */
on_conflict?: (auth_methods_on_conflict | null)}) => auth_methods_mutation_responsePromiseChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Promise<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "auth_methods" */
insert_auth_methods_one: ((args: {
/** the row to be inserted */
object: auth_methods_insert_input,
/** on conflict condition */
on_conflict?: (auth_methods_on_conflict | null)}) => auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Promise<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** insert data into the table: "blacklist_refresh_token" */
insert_blacklist_refresh_token: ((args: {
/** the rows to be inserted */
objects: blacklist_refresh_token_insert_input[],
/** on conflict condition */
on_conflict?: (blacklist_refresh_token_on_conflict | null)}) => blacklist_refresh_token_mutation_responsePromiseChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "blacklist_refresh_token" */
insert_blacklist_refresh_token_one: ((args: {
/** the row to be inserted */
object: blacklist_refresh_token_insert_input,
/** on conflict condition */
on_conflict?: (blacklist_refresh_token_on_conflict | null)}) => blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** insert data into the table: "connectors" */
insert_connectors: ((args: {
/** the rows to be inserted */
objects: connectors_insert_input[],
/** on conflict condition */
on_conflict?: (connectors_on_conflict | null)}) => connectors_mutation_responsePromiseChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Promise<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "connectors" */
insert_connectors_one: ((args: {
/** the row to be inserted */
object: connectors_insert_input,
/** on conflict condition */
on_conflict?: (connectors_on_conflict | null)}) => connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Promise<(FieldsSelection<connectors, R> | undefined)>}),
    
/** insert data into the table: "customer_user" */
insert_customer_user: ((args: {
/** the rows to be inserted */
objects: customer_user_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_on_conflict | null)}) => customer_user_mutation_responsePromiseChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user" */
insert_customer_user_one: ((args: {
/** the row to be inserted */
object: customer_user_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_on_conflict | null)}) => customer_userPromiseChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Promise<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** insert data into the table: "customer_user_service" */
insert_customer_user_service: ((args: {
/** the rows to be inserted */
objects: customer_user_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_service_on_conflict | null)}) => customer_user_service_mutation_responsePromiseChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user_service" */
insert_customer_user_service_one: ((args: {
/** the row to be inserted */
object: customer_user_service_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_service_on_conflict | null)}) => customer_user_servicePromiseChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** insert data into the table: "customer_user_sub_service" */
insert_customer_user_sub_service: ((args: {
/** the rows to be inserted */
objects: customer_user_sub_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_sub_service_on_conflict | null)}) => customer_user_sub_service_mutation_responsePromiseChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user_sub_service" */
insert_customer_user_sub_service_one: ((args: {
/** the row to be inserted */
object: customer_user_sub_service_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_sub_service_on_conflict | null)}) => customer_user_sub_servicePromiseChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** insert data into the table: "customers" */
insert_customers: ((args: {
/** the rows to be inserted */
objects: customers_insert_input[],
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}) => customers_mutation_responsePromiseChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "customers_contact" */
insert_customers_contact: ((args: {
/** the rows to be inserted */
objects: customers_contact_insert_input[],
/** on conflict condition */
on_conflict?: (customers_contact_on_conflict | null)}) => customers_contact_mutation_responsePromiseChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customers_contact" */
insert_customers_contact_one: ((args: {
/** the row to be inserted */
object: customers_contact_insert_input,
/** on conflict condition */
on_conflict?: (customers_contact_on_conflict | null)}) => customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** insert a single row into the table: "customers" */
insert_customers_one: ((args: {
/** the row to be inserted */
object: customers_insert_input,
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}) => customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Promise<(FieldsSelection<customers, R> | undefined)>}),
    
/** insert data into the table: "feature_names" */
insert_feature_names: ((args: {
/** the rows to be inserted */
objects: feature_names_insert_input[],
/** on conflict condition */
on_conflict?: (feature_names_on_conflict | null)}) => feature_names_mutation_responsePromiseChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "feature_names" */
insert_feature_names_one: ((args: {
/** the row to be inserted */
object: feature_names_insert_input,
/** on conflict condition */
on_conflict?: (feature_names_on_conflict | null)}) => feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Promise<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** insert data into the table: "features" */
insert_features: ((args: {
/** the rows to be inserted */
objects: features_insert_input[],
/** on conflict condition */
on_conflict?: (features_on_conflict | null)}) => features_mutation_responsePromiseChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Promise<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "features" */
insert_features_one: ((args: {
/** the row to be inserted */
object: features_insert_input,
/** on conflict condition */
on_conflict?: (features_on_conflict | null)}) => featuresPromiseChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Promise<(FieldsSelection<features, R> | undefined)>}),
    
/** insert data into the table: "partners" */
insert_partners: ((args: {
/** the rows to be inserted */
objects: partners_insert_input[],
/** on conflict condition */
on_conflict?: (partners_on_conflict | null)}) => partners_mutation_responsePromiseChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Promise<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "partners" */
insert_partners_one: ((args: {
/** the row to be inserted */
object: partners_insert_input,
/** on conflict condition */
on_conflict?: (partners_on_conflict | null)}) => partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    
/** insert data into the table: "roles" */
insert_roles: ((args: {
/** the rows to be inserted */
objects: roles_insert_input[],
/** on conflict condition */
on_conflict?: (roles_on_conflict | null)}) => roles_mutation_responsePromiseChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Promise<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "roles" */
insert_roles_one: ((args: {
/** the row to be inserted */
object: roles_insert_input,
/** on conflict condition */
on_conflict?: (roles_on_conflict | null)}) => rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Promise<(FieldsSelection<roles, R> | undefined)>}),
    
/** insert data into the table: "services" */
insert_services: ((args: {
/** the rows to be inserted */
objects: services_insert_input[],
/** on conflict condition */
on_conflict?: (services_on_conflict | null)}) => services_mutation_responsePromiseChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "services" */
insert_services_one: ((args: {
/** the row to be inserted */
object: services_insert_input,
/** on conflict condition */
on_conflict?: (services_on_conflict | null)}) => servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Promise<(FieldsSelection<services, R> | undefined)>}),
    
/** insert data into the table: "srv_names" */
insert_srv_names: ((args: {
/** the rows to be inserted */
objects: srv_names_insert_input[],
/** on conflict condition */
on_conflict?: (srv_names_on_conflict | null)}) => srv_names_mutation_responsePromiseChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "srv_names" */
insert_srv_names_one: ((args: {
/** the row to be inserted */
object: srv_names_insert_input,
/** on conflict condition */
on_conflict?: (srv_names_on_conflict | null)}) => srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Promise<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** insert data into the table: "srv_urls" */
insert_srv_urls: ((args: {
/** the rows to be inserted */
objects: srv_urls_insert_input[],
/** on conflict condition */
on_conflict?: (srv_urls_on_conflict | null)}) => srv_urls_mutation_responsePromiseChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "srv_urls" */
insert_srv_urls_one: ((args: {
/** the row to be inserted */
object: srv_urls_insert_input,
/** on conflict condition */
on_conflict?: (srv_urls_on_conflict | null)}) => srv_urlsPromiseChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Promise<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** insert data into the table: "status" */
insert_status: ((args: {
/** the rows to be inserted */
objects: status_insert_input[],
/** on conflict condition */
on_conflict?: (status_on_conflict | null)}) => status_mutation_responsePromiseChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Promise<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "status" */
insert_status_one: ((args: {
/** the row to be inserted */
object: status_insert_input,
/** on conflict condition */
on_conflict?: (status_on_conflict | null)}) => statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Promise<(FieldsSelection<status, R> | undefined)>}),
    
/** insert data into the table: "sub_services" */
insert_sub_services: ((args: {
/** the rows to be inserted */
objects: sub_services_insert_input[],
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}) => sub_services_mutation_responsePromiseChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "sub_services" */
insert_sub_services_one: ((args: {
/** the row to be inserted */
object: sub_services_insert_input,
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}) => sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** insert data into the table: "user_basic_data" */
insert_user_basic_data: ((args: {
/** the rows to be inserted */
objects: user_basic_data_insert_input[],
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}) => user_basic_data_mutation_responsePromiseChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "user_basic_data" */
insert_user_basic_data_one: ((args: {
/** the row to be inserted */
object: user_basic_data_insert_input,
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}) => user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** insert data into the table: "users" */
insert_users: ((args: {
/** the rows to be inserted */
objects: users_insert_input[],
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}) => users_mutation_responsePromiseChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "users_auth_logs" */
insert_users_auth_logs: ((args: {
/** the rows to be inserted */
objects: users_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (users_auth_logs_on_conflict | null)}) => users_auth_logs_mutation_responsePromiseChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "users_auth_logs" */
insert_users_auth_logs_one: ((args: {
/** the row to be inserted */
object: users_auth_logs_insert_input,
/** on conflict condition */
on_conflict?: (users_auth_logs_on_conflict | null)}) => users_auth_logsPromiseChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** insert a single row into the table: "users" */
insert_users_one: ((args: {
/** the row to be inserted */
object: users_insert_input,
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}) => usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Promise<(FieldsSelection<users, R> | undefined)>}),
    signin: ((args: {customer_name: Scalars['String'],email: Scalars['String'],password: Scalars['String']}) => SigninOutputPromiseChain & {get: <R extends SigninOutputRequest>(request: R, defaultValue?: (FieldsSelection<SigninOutput, R> | undefined)) => Promise<(FieldsSelection<SigninOutput, R> | undefined)>}),
    singinAvansAdmin: ((args: {email: Scalars['String'],password: Scalars['String']}) => SinginOutputWithRefreshTokenPromiseChain & {get: <R extends SinginOutputWithRefreshTokenRequest>(request: R, defaultValue?: (FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)) => Promise<(FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)>}),
    singinAvansAdminByRefreshToken: ((args: {id: Scalars['uuid']}) => SinginOutputWithRefreshTokenPromiseChain & {get: <R extends SinginOutputWithRefreshTokenRequest>(request: R, defaultValue?: (FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)) => Promise<(FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)>}),
    updateAdmin: ((args: {email: Scalars['bpchar'],id: Scalars['uuid'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']}) => ReturnAffectedItemIdPromiseChain & {get: <R extends ReturnAffectedItemIdRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedItemId, R> | undefined)) => Promise<(FieldsSelection<ReturnAffectedItemId, R> | undefined)>}),
    updateCustomer: ((args: {conn_string?: (Scalars['String'] | null),connector: Scalars['String'],contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),id: Scalars['uuid'],name: Scalars['String'],refresh_token_validity: Scalars['Int']}) => ReturnAffectedRowsPromiseChain & {get: <R extends ReturnAffectedRowsRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedRows, R> | undefined)) => Promise<(FieldsSelection<ReturnAffectedRows, R> | undefined)>}),
    updateUser: ((args: {email?: (Scalars['bpchar'] | null),id: Scalars['uuid'],name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),phone?: (Scalars['String'] | null),role?: (Scalars['String'] | null)}) => UpdateUserOutputPromiseChain & {get: <R extends UpdateUserOutputRequest>(request: R, defaultValue?: (FieldsSelection<UpdateUserOutput, R> | undefined)) => Promise<(FieldsSelection<UpdateUserOutput, R> | undefined)>}),
    
/** update data of the table: "admins" */
update_admins: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (admins_set_input | null),
/** filter the rows which have to be updated */
where: admins_bool_exp}) => admins_mutation_responsePromiseChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** update data of the table: "admins_auth_logs" */
update_admins_auth_logs: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (admins_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (admins_auth_logs_set_input | null),
/** filter the rows which have to be updated */
where: admins_auth_logs_bool_exp}) => admins_auth_logs_mutation_responsePromiseChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "admins_auth_logs" */
update_admins_auth_logs_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (admins_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (admins_auth_logs_set_input | null),pk_columns: admins_auth_logs_pk_columns_input}) => admins_auth_logsPromiseChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** update single row of the table: "admins" */
update_admins_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (admins_set_input | null),pk_columns: admins_pk_columns_input}) => adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Promise<(FieldsSelection<admins, R> | undefined)>}),
    
/** update data of the table: "auth_methods" */
update_auth_methods: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (auth_methods_set_input | null),
/** filter the rows which have to be updated */
where: auth_methods_bool_exp}) => auth_methods_mutation_responsePromiseChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Promise<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "auth_methods" */
update_auth_methods_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (auth_methods_set_input | null),pk_columns: auth_methods_pk_columns_input}) => auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Promise<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** update data of the table: "blacklist_refresh_token" */
update_blacklist_refresh_token: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (blacklist_refresh_token_set_input | null),
/** filter the rows which have to be updated */
where: blacklist_refresh_token_bool_exp}) => blacklist_refresh_token_mutation_responsePromiseChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "blacklist_refresh_token" */
update_blacklist_refresh_token_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (blacklist_refresh_token_set_input | null),pk_columns: blacklist_refresh_token_pk_columns_input}) => blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** update data of the table: "connectors" */
update_connectors: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (connectors_set_input | null),
/** filter the rows which have to be updated */
where: connectors_bool_exp}) => connectors_mutation_responsePromiseChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Promise<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "connectors" */
update_connectors_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (connectors_set_input | null),pk_columns: connectors_pk_columns_input}) => connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Promise<(FieldsSelection<connectors, R> | undefined)>}),
    
/** update data of the table: "customer_user" */
update_customer_user: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customer_user_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_bool_exp}) => customer_user_mutation_responsePromiseChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user" */
update_customer_user_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customer_user_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_set_input | null),pk_columns: customer_user_pk_columns_input}) => customer_userPromiseChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Promise<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** update data of the table: "customer_user_service" */
update_customer_user_service: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_service_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_service_bool_exp}) => customer_user_service_mutation_responsePromiseChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user_service" */
update_customer_user_service_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_service_set_input | null),pk_columns: customer_user_service_pk_columns_input}) => customer_user_servicePromiseChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** update data of the table: "customer_user_sub_service" */
update_customer_user_sub_service: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_sub_service_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_sub_service_bool_exp}) => customer_user_sub_service_mutation_responsePromiseChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user_sub_service" */
update_customer_user_sub_service_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_sub_service_set_input | null),pk_columns: customer_user_sub_service_pk_columns_input}) => customer_user_sub_servicePromiseChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** update data of the table: "customers" */
update_customers: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customers_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customers_set_input | null),
/** filter the rows which have to be updated */
where: customers_bool_exp}) => customers_mutation_responsePromiseChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customers" */
update_customers_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customers_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customers_set_input | null),pk_columns: customers_pk_columns_input}) => customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Promise<(FieldsSelection<customers, R> | undefined)>}),
    
/** update data of the table: "customers_contact" */
update_customers_contact: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customers_contact_set_input | null),
/** filter the rows which have to be updated */
where: customers_contact_bool_exp}) => customers_contact_mutation_responsePromiseChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Promise<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customers_contact" */
update_customers_contact_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customers_contact_set_input | null),pk_columns: customers_contact_pk_columns_input}) => customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** update data of the table: "feature_names" */
update_feature_names: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (feature_names_set_input | null),
/** filter the rows which have to be updated */
where: feature_names_bool_exp}) => feature_names_mutation_responsePromiseChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "feature_names" */
update_feature_names_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (feature_names_set_input | null),pk_columns: feature_names_pk_columns_input}) => feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Promise<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** update data of the table: "features" */
update_features: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (features_set_input | null),
/** filter the rows which have to be updated */
where: features_bool_exp}) => features_mutation_responsePromiseChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Promise<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "features" */
update_features_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (features_set_input | null),pk_columns: features_pk_columns_input}) => featuresPromiseChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Promise<(FieldsSelection<features, R> | undefined)>}),
    
/** update data of the table: "partners" */
update_partners: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (partners_set_input | null),
/** filter the rows which have to be updated */
where: partners_bool_exp}) => partners_mutation_responsePromiseChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Promise<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "partners" */
update_partners_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (partners_set_input | null),pk_columns: partners_pk_columns_input}) => partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    
/** update data of the table: "roles" */
update_roles: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (roles_set_input | null),
/** filter the rows which have to be updated */
where: roles_bool_exp}) => roles_mutation_responsePromiseChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Promise<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "roles" */
update_roles_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (roles_set_input | null),pk_columns: roles_pk_columns_input}) => rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Promise<(FieldsSelection<roles, R> | undefined)>}),
    
/** update data of the table: "services" */
update_services: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (services_set_input | null),
/** filter the rows which have to be updated */
where: services_bool_exp}) => services_mutation_responsePromiseChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "services" */
update_services_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (services_set_input | null),pk_columns: services_pk_columns_input}) => servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Promise<(FieldsSelection<services, R> | undefined)>}),
    
/** update data of the table: "srv_names" */
update_srv_names: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_names_set_input | null),
/** filter the rows which have to be updated */
where: srv_names_bool_exp}) => srv_names_mutation_responsePromiseChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "srv_names" */
update_srv_names_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_names_set_input | null),pk_columns: srv_names_pk_columns_input}) => srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Promise<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** update data of the table: "srv_urls" */
update_srv_urls: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_urls_set_input | null),
/** filter the rows which have to be updated */
where: srv_urls_bool_exp}) => srv_urls_mutation_responsePromiseChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Promise<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "srv_urls" */
update_srv_urls_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_urls_set_input | null),pk_columns: srv_urls_pk_columns_input}) => srv_urlsPromiseChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Promise<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** update data of the table: "status" */
update_status: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (status_set_input | null),
/** filter the rows which have to be updated */
where: status_bool_exp}) => status_mutation_responsePromiseChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Promise<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "status" */
update_status_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (status_set_input | null),pk_columns: status_pk_columns_input}) => statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Promise<(FieldsSelection<status, R> | undefined)>}),
    
/** update data of the table: "sub_services" */
update_sub_services: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (sub_services_set_input | null),
/** filter the rows which have to be updated */
where: sub_services_bool_exp}) => sub_services_mutation_responsePromiseChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Promise<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "sub_services" */
update_sub_services_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (sub_services_set_input | null),pk_columns: sub_services_pk_columns_input}) => sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** update data of the table: "user_basic_data" */
update_user_basic_data: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (user_basic_data_set_input | null),
/** filter the rows which have to be updated */
where: user_basic_data_bool_exp}) => user_basic_data_mutation_responsePromiseChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "user_basic_data" */
update_user_basic_data_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (user_basic_data_set_input | null),pk_columns: user_basic_data_pk_columns_input}) => user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** update data of the table: "users" */
update_users: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (users_set_input | null),
/** filter the rows which have to be updated */
where: users_bool_exp}) => users_mutation_responsePromiseChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** update data of the table: "users_auth_logs" */
update_users_auth_logs: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (users_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (users_auth_logs_set_input | null),
/** filter the rows which have to be updated */
where: users_auth_logs_bool_exp}) => users_auth_logs_mutation_responsePromiseChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "users_auth_logs" */
update_users_auth_logs_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (users_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (users_auth_logs_set_input | null),pk_columns: users_auth_logs_pk_columns_input}) => users_auth_logsPromiseChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** update single row of the table: "users" */
update_users_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (users_set_input | null),pk_columns: users_pk_columns_input}) => usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Promise<(FieldsSelection<users, R> | undefined)>})
}


/** mutation root */
export interface mutation_rootObservableChain{
    
/** delete data from the table: "admins" */
delete_admins: ((args: {
/** filter the rows which have to be deleted */
where: admins_bool_exp}) => admins_mutation_responseObservableChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** delete data from the table: "admins_auth_logs" */
delete_admins_auth_logs: ((args: {
/** filter the rows which have to be deleted */
where: admins_auth_logs_bool_exp}) => admins_auth_logs_mutation_responseObservableChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "admins_auth_logs" */
delete_admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsObservableChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** delete single row from the table: "admins" */
delete_admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Observable<(FieldsSelection<admins, R> | undefined)>}),
    
/** delete data from the table: "auth_methods" */
delete_auth_methods: ((args: {
/** filter the rows which have to be deleted */
where: auth_methods_bool_exp}) => auth_methods_mutation_responseObservableChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Observable<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "auth_methods" */
delete_auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Observable<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** delete data from the table: "blacklist_refresh_token" */
delete_blacklist_refresh_token: ((args: {
/** filter the rows which have to be deleted */
where: blacklist_refresh_token_bool_exp}) => blacklist_refresh_token_mutation_responseObservableChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "blacklist_refresh_token" */
delete_blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** delete data from the table: "connectors" */
delete_connectors: ((args: {
/** filter the rows which have to be deleted */
where: connectors_bool_exp}) => connectors_mutation_responseObservableChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Observable<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "connectors" */
delete_connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Observable<(FieldsSelection<connectors, R> | undefined)>}),
    
/** delete data from the table: "customer_user" */
delete_customer_user: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_bool_exp}) => customer_user_mutation_responseObservableChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user" */
delete_customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userObservableChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Observable<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** delete data from the table: "customer_user_service" */
delete_customer_user_service: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_service_bool_exp}) => customer_user_service_mutation_responseObservableChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user_service" */
delete_customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_serviceObservableChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** delete data from the table: "customer_user_sub_service" */
delete_customer_user_sub_service: ((args: {
/** filter the rows which have to be deleted */
where: customer_user_sub_service_bool_exp}) => customer_user_sub_service_mutation_responseObservableChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customer_user_sub_service" */
delete_customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_serviceObservableChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** delete data from the table: "customers" */
delete_customers: ((args: {
/** filter the rows which have to be deleted */
where: customers_bool_exp}) => customers_mutation_responseObservableChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customers" */
delete_customers_by_pk: ((args: {id: Scalars['uuid']}) => customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Observable<(FieldsSelection<customers, R> | undefined)>}),
    
/** delete data from the table: "customers_contact" */
delete_customers_contact: ((args: {
/** filter the rows which have to be deleted */
where: customers_contact_bool_exp}) => customers_contact_mutation_responseObservableChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "customers_contact" */
delete_customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** delete data from the table: "feature_names" */
delete_feature_names: ((args: {
/** filter the rows which have to be deleted */
where: feature_names_bool_exp}) => feature_names_mutation_responseObservableChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "feature_names" */
delete_feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Observable<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** delete data from the table: "features" */
delete_features: ((args: {
/** filter the rows which have to be deleted */
where: features_bool_exp}) => features_mutation_responseObservableChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Observable<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "features" */
delete_features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresObservableChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Observable<(FieldsSelection<features, R> | undefined)>}),
    
/** delete data from the table: "partners" */
delete_partners: ((args: {
/** filter the rows which have to be deleted */
where: partners_bool_exp}) => partners_mutation_responseObservableChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Observable<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "partners" */
delete_partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    
/** delete data from the table: "roles" */
delete_roles: ((args: {
/** filter the rows which have to be deleted */
where: roles_bool_exp}) => roles_mutation_responseObservableChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Observable<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "roles" */
delete_roles_by_pk: ((args: {name: Scalars['String']}) => rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Observable<(FieldsSelection<roles, R> | undefined)>}),
    
/** delete data from the table: "services" */
delete_services: ((args: {
/** filter the rows which have to be deleted */
where: services_bool_exp}) => services_mutation_responseObservableChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "services" */
delete_services_by_pk: ((args: {name: Scalars['String']}) => servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Observable<(FieldsSelection<services, R> | undefined)>}),
    
/** delete data from the table: "srv_names" */
delete_srv_names: ((args: {
/** filter the rows which have to be deleted */
where: srv_names_bool_exp}) => srv_names_mutation_responseObservableChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "srv_names" */
delete_srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Observable<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** delete data from the table: "srv_urls" */
delete_srv_urls: ((args: {
/** filter the rows which have to be deleted */
where: srv_urls_bool_exp}) => srv_urls_mutation_responseObservableChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "srv_urls" */
delete_srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsObservableChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Observable<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** delete data from the table: "status" */
delete_status: ((args: {
/** filter the rows which have to be deleted */
where: status_bool_exp}) => status_mutation_responseObservableChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Observable<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "status" */
delete_status_by_pk: ((args: {name: Scalars['String']}) => statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Observable<(FieldsSelection<status, R> | undefined)>}),
    
/** delete data from the table: "sub_services" */
delete_sub_services: ((args: {
/** filter the rows which have to be deleted */
where: sub_services_bool_exp}) => sub_services_mutation_responseObservableChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "sub_services" */
delete_sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** delete data from the table: "user_basic_data" */
delete_user_basic_data: ((args: {
/** filter the rows which have to be deleted */
where: user_basic_data_bool_exp}) => user_basic_data_mutation_responseObservableChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "user_basic_data" */
delete_user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** delete data from the table: "users" */
delete_users: ((args: {
/** filter the rows which have to be deleted */
where: users_bool_exp}) => users_mutation_responseObservableChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** delete data from the table: "users_auth_logs" */
delete_users_auth_logs: ((args: {
/** filter the rows which have to be deleted */
where: users_auth_logs_bool_exp}) => users_auth_logs_mutation_responseObservableChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** delete single row from the table: "users_auth_logs" */
delete_users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsObservableChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** delete single row from the table: "users" */
delete_users_by_pk: ((args: {id: Scalars['uuid']}) => usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Observable<(FieldsSelection<users, R> | undefined)>}),
    insertAdmin: ((args: {email: Scalars['bpchar'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']}) => ReturnAffectedItemIdObservableChain & {get: <R extends ReturnAffectedItemIdRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedItemId, R> | undefined)) => Observable<(FieldsSelection<ReturnAffectedItemId, R> | undefined)>}),
    insertCustomer: ((args: {conn_string: Scalars['String'],connector?: (Scalars['String'] | null),contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),name: Scalars['String'],refresh_token_validity: Scalars['Int']}) => getCustomersAndCountUsersOutputObservableChain & {get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: (FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)) => Observable<(FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)>}),
    insertUserOrWarnIfExists: ((args: {brukerBrukerNavn?: (Scalars['String'] | null),brukerRegion?: (Scalars['Int'] | null),customer_id?: (Scalars['uuid'] | null),email: Scalars['String'],name: Scalars['String'],password: Scalars['String'],phone: Scalars['String'],role?: (Scalars['String'] | null),token?: (Scalars['String'] | null)}) => InsertUserOrWarnIfExistsOutputObservableChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Observable<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>}),
    insertUsersOrWarnIfExists: ((args?: {objects?: (InsertUserData[] | null)}) => InsertUserOrWarnIfExistsOutputObservableChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Observable<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>})&(InsertUserOrWarnIfExistsOutputObservableChain & {get: <R extends InsertUserOrWarnIfExistsOutputRequest>(request: R, defaultValue?: (FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)) => Observable<(FieldsSelection<InsertUserOrWarnIfExistsOutput, R> | undefined)>}),
    
/** insert data into the table: "admins" */
insert_admins: ((args: {
/** the rows to be inserted */
objects: admins_insert_input[],
/** on conflict condition */
on_conflict?: (admins_on_conflict | null)}) => admins_mutation_responseObservableChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "admins_auth_logs" */
insert_admins_auth_logs: ((args: {
/** the rows to be inserted */
objects: admins_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (admins_auth_logs_on_conflict | null)}) => admins_auth_logs_mutation_responseObservableChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "admins_auth_logs" */
insert_admins_auth_logs_one: ((args: {
/** the row to be inserted */
object: admins_auth_logs_insert_input,
/** on conflict condition */
on_conflict?: (admins_auth_logs_on_conflict | null)}) => admins_auth_logsObservableChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** insert a single row into the table: "admins" */
insert_admins_one: ((args: {
/** the row to be inserted */
object: admins_insert_input,
/** on conflict condition */
on_conflict?: (admins_on_conflict | null)}) => adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Observable<(FieldsSelection<admins, R> | undefined)>}),
    
/** insert data into the table: "auth_methods" */
insert_auth_methods: ((args: {
/** the rows to be inserted */
objects: auth_methods_insert_input[],
/** on conflict condition */
on_conflict?: (auth_methods_on_conflict | null)}) => auth_methods_mutation_responseObservableChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Observable<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "auth_methods" */
insert_auth_methods_one: ((args: {
/** the row to be inserted */
object: auth_methods_insert_input,
/** on conflict condition */
on_conflict?: (auth_methods_on_conflict | null)}) => auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Observable<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** insert data into the table: "blacklist_refresh_token" */
insert_blacklist_refresh_token: ((args: {
/** the rows to be inserted */
objects: blacklist_refresh_token_insert_input[],
/** on conflict condition */
on_conflict?: (blacklist_refresh_token_on_conflict | null)}) => blacklist_refresh_token_mutation_responseObservableChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "blacklist_refresh_token" */
insert_blacklist_refresh_token_one: ((args: {
/** the row to be inserted */
object: blacklist_refresh_token_insert_input,
/** on conflict condition */
on_conflict?: (blacklist_refresh_token_on_conflict | null)}) => blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** insert data into the table: "connectors" */
insert_connectors: ((args: {
/** the rows to be inserted */
objects: connectors_insert_input[],
/** on conflict condition */
on_conflict?: (connectors_on_conflict | null)}) => connectors_mutation_responseObservableChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Observable<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "connectors" */
insert_connectors_one: ((args: {
/** the row to be inserted */
object: connectors_insert_input,
/** on conflict condition */
on_conflict?: (connectors_on_conflict | null)}) => connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Observable<(FieldsSelection<connectors, R> | undefined)>}),
    
/** insert data into the table: "customer_user" */
insert_customer_user: ((args: {
/** the rows to be inserted */
objects: customer_user_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_on_conflict | null)}) => customer_user_mutation_responseObservableChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user" */
insert_customer_user_one: ((args: {
/** the row to be inserted */
object: customer_user_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_on_conflict | null)}) => customer_userObservableChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Observable<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** insert data into the table: "customer_user_service" */
insert_customer_user_service: ((args: {
/** the rows to be inserted */
objects: customer_user_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_service_on_conflict | null)}) => customer_user_service_mutation_responseObservableChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user_service" */
insert_customer_user_service_one: ((args: {
/** the row to be inserted */
object: customer_user_service_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_service_on_conflict | null)}) => customer_user_serviceObservableChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** insert data into the table: "customer_user_sub_service" */
insert_customer_user_sub_service: ((args: {
/** the rows to be inserted */
objects: customer_user_sub_service_insert_input[],
/** on conflict condition */
on_conflict?: (customer_user_sub_service_on_conflict | null)}) => customer_user_sub_service_mutation_responseObservableChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customer_user_sub_service" */
insert_customer_user_sub_service_one: ((args: {
/** the row to be inserted */
object: customer_user_sub_service_insert_input,
/** on conflict condition */
on_conflict?: (customer_user_sub_service_on_conflict | null)}) => customer_user_sub_serviceObservableChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** insert data into the table: "customers" */
insert_customers: ((args: {
/** the rows to be inserted */
objects: customers_insert_input[],
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}) => customers_mutation_responseObservableChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "customers_contact" */
insert_customers_contact: ((args: {
/** the rows to be inserted */
objects: customers_contact_insert_input[],
/** on conflict condition */
on_conflict?: (customers_contact_on_conflict | null)}) => customers_contact_mutation_responseObservableChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "customers_contact" */
insert_customers_contact_one: ((args: {
/** the row to be inserted */
object: customers_contact_insert_input,
/** on conflict condition */
on_conflict?: (customers_contact_on_conflict | null)}) => customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** insert a single row into the table: "customers" */
insert_customers_one: ((args: {
/** the row to be inserted */
object: customers_insert_input,
/** on conflict condition */
on_conflict?: (customers_on_conflict | null)}) => customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Observable<(FieldsSelection<customers, R> | undefined)>}),
    
/** insert data into the table: "feature_names" */
insert_feature_names: ((args: {
/** the rows to be inserted */
objects: feature_names_insert_input[],
/** on conflict condition */
on_conflict?: (feature_names_on_conflict | null)}) => feature_names_mutation_responseObservableChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "feature_names" */
insert_feature_names_one: ((args: {
/** the row to be inserted */
object: feature_names_insert_input,
/** on conflict condition */
on_conflict?: (feature_names_on_conflict | null)}) => feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Observable<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** insert data into the table: "features" */
insert_features: ((args: {
/** the rows to be inserted */
objects: features_insert_input[],
/** on conflict condition */
on_conflict?: (features_on_conflict | null)}) => features_mutation_responseObservableChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Observable<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "features" */
insert_features_one: ((args: {
/** the row to be inserted */
object: features_insert_input,
/** on conflict condition */
on_conflict?: (features_on_conflict | null)}) => featuresObservableChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Observable<(FieldsSelection<features, R> | undefined)>}),
    
/** insert data into the table: "partners" */
insert_partners: ((args: {
/** the rows to be inserted */
objects: partners_insert_input[],
/** on conflict condition */
on_conflict?: (partners_on_conflict | null)}) => partners_mutation_responseObservableChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Observable<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "partners" */
insert_partners_one: ((args: {
/** the row to be inserted */
object: partners_insert_input,
/** on conflict condition */
on_conflict?: (partners_on_conflict | null)}) => partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    
/** insert data into the table: "roles" */
insert_roles: ((args: {
/** the rows to be inserted */
objects: roles_insert_input[],
/** on conflict condition */
on_conflict?: (roles_on_conflict | null)}) => roles_mutation_responseObservableChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Observable<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "roles" */
insert_roles_one: ((args: {
/** the row to be inserted */
object: roles_insert_input,
/** on conflict condition */
on_conflict?: (roles_on_conflict | null)}) => rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Observable<(FieldsSelection<roles, R> | undefined)>}),
    
/** insert data into the table: "services" */
insert_services: ((args: {
/** the rows to be inserted */
objects: services_insert_input[],
/** on conflict condition */
on_conflict?: (services_on_conflict | null)}) => services_mutation_responseObservableChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "services" */
insert_services_one: ((args: {
/** the row to be inserted */
object: services_insert_input,
/** on conflict condition */
on_conflict?: (services_on_conflict | null)}) => servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Observable<(FieldsSelection<services, R> | undefined)>}),
    
/** insert data into the table: "srv_names" */
insert_srv_names: ((args: {
/** the rows to be inserted */
objects: srv_names_insert_input[],
/** on conflict condition */
on_conflict?: (srv_names_on_conflict | null)}) => srv_names_mutation_responseObservableChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "srv_names" */
insert_srv_names_one: ((args: {
/** the row to be inserted */
object: srv_names_insert_input,
/** on conflict condition */
on_conflict?: (srv_names_on_conflict | null)}) => srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Observable<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** insert data into the table: "srv_urls" */
insert_srv_urls: ((args: {
/** the rows to be inserted */
objects: srv_urls_insert_input[],
/** on conflict condition */
on_conflict?: (srv_urls_on_conflict | null)}) => srv_urls_mutation_responseObservableChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "srv_urls" */
insert_srv_urls_one: ((args: {
/** the row to be inserted */
object: srv_urls_insert_input,
/** on conflict condition */
on_conflict?: (srv_urls_on_conflict | null)}) => srv_urlsObservableChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Observable<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** insert data into the table: "status" */
insert_status: ((args: {
/** the rows to be inserted */
objects: status_insert_input[],
/** on conflict condition */
on_conflict?: (status_on_conflict | null)}) => status_mutation_responseObservableChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Observable<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "status" */
insert_status_one: ((args: {
/** the row to be inserted */
object: status_insert_input,
/** on conflict condition */
on_conflict?: (status_on_conflict | null)}) => statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Observable<(FieldsSelection<status, R> | undefined)>}),
    
/** insert data into the table: "sub_services" */
insert_sub_services: ((args: {
/** the rows to be inserted */
objects: sub_services_insert_input[],
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}) => sub_services_mutation_responseObservableChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "sub_services" */
insert_sub_services_one: ((args: {
/** the row to be inserted */
object: sub_services_insert_input,
/** on conflict condition */
on_conflict?: (sub_services_on_conflict | null)}) => sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** insert data into the table: "user_basic_data" */
insert_user_basic_data: ((args: {
/** the rows to be inserted */
objects: user_basic_data_insert_input[],
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}) => user_basic_data_mutation_responseObservableChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "user_basic_data" */
insert_user_basic_data_one: ((args: {
/** the row to be inserted */
object: user_basic_data_insert_input,
/** on conflict condition */
on_conflict?: (user_basic_data_on_conflict | null)}) => user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** insert data into the table: "users" */
insert_users: ((args: {
/** the rows to be inserted */
objects: users_insert_input[],
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}) => users_mutation_responseObservableChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** insert data into the table: "users_auth_logs" */
insert_users_auth_logs: ((args: {
/** the rows to be inserted */
objects: users_auth_logs_insert_input[],
/** on conflict condition */
on_conflict?: (users_auth_logs_on_conflict | null)}) => users_auth_logs_mutation_responseObservableChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** insert a single row into the table: "users_auth_logs" */
insert_users_auth_logs_one: ((args: {
/** the row to be inserted */
object: users_auth_logs_insert_input,
/** on conflict condition */
on_conflict?: (users_auth_logs_on_conflict | null)}) => users_auth_logsObservableChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** insert a single row into the table: "users" */
insert_users_one: ((args: {
/** the row to be inserted */
object: users_insert_input,
/** on conflict condition */
on_conflict?: (users_on_conflict | null)}) => usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Observable<(FieldsSelection<users, R> | undefined)>}),
    signin: ((args: {customer_name: Scalars['String'],email: Scalars['String'],password: Scalars['String']}) => SigninOutputObservableChain & {get: <R extends SigninOutputRequest>(request: R, defaultValue?: (FieldsSelection<SigninOutput, R> | undefined)) => Observable<(FieldsSelection<SigninOutput, R> | undefined)>}),
    singinAvansAdmin: ((args: {email: Scalars['String'],password: Scalars['String']}) => SinginOutputWithRefreshTokenObservableChain & {get: <R extends SinginOutputWithRefreshTokenRequest>(request: R, defaultValue?: (FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)) => Observable<(FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)>}),
    singinAvansAdminByRefreshToken: ((args: {id: Scalars['uuid']}) => SinginOutputWithRefreshTokenObservableChain & {get: <R extends SinginOutputWithRefreshTokenRequest>(request: R, defaultValue?: (FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)) => Observable<(FieldsSelection<SinginOutputWithRefreshToken, R> | undefined)>}),
    updateAdmin: ((args: {email: Scalars['bpchar'],id: Scalars['uuid'],name: Scalars['bpchar'],password: Scalars['bpchar'],phone: Scalars['String']}) => ReturnAffectedItemIdObservableChain & {get: <R extends ReturnAffectedItemIdRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedItemId, R> | undefined)) => Observable<(FieldsSelection<ReturnAffectedItemId, R> | undefined)>}),
    updateCustomer: ((args: {conn_string?: (Scalars['String'] | null),connector: Scalars['String'],contact_email?: (Scalars['String'] | null),contact_message?: (Scalars['String'] | null),contact_tel?: (Scalars['String'] | null),id: Scalars['uuid'],name: Scalars['String'],refresh_token_validity: Scalars['Int']}) => ReturnAffectedRowsObservableChain & {get: <R extends ReturnAffectedRowsRequest>(request: R, defaultValue?: (FieldsSelection<ReturnAffectedRows, R> | undefined)) => Observable<(FieldsSelection<ReturnAffectedRows, R> | undefined)>}),
    updateUser: ((args: {email?: (Scalars['bpchar'] | null),id: Scalars['uuid'],name?: (Scalars['bpchar'] | null),password?: (Scalars['bpchar'] | null),phone?: (Scalars['String'] | null),role?: (Scalars['String'] | null)}) => UpdateUserOutputObservableChain & {get: <R extends UpdateUserOutputRequest>(request: R, defaultValue?: (FieldsSelection<UpdateUserOutput, R> | undefined)) => Observable<(FieldsSelection<UpdateUserOutput, R> | undefined)>}),
    
/** update data of the table: "admins" */
update_admins: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (admins_set_input | null),
/** filter the rows which have to be updated */
where: admins_bool_exp}) => admins_mutation_responseObservableChain & {get: <R extends admins_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_mutation_response, R> | undefined)>}),
    
/** update data of the table: "admins_auth_logs" */
update_admins_auth_logs: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (admins_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (admins_auth_logs_set_input | null),
/** filter the rows which have to be updated */
where: admins_auth_logs_bool_exp}) => admins_auth_logs_mutation_responseObservableChain & {get: <R extends admins_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "admins_auth_logs" */
update_admins_auth_logs_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (admins_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (admins_auth_logs_set_input | null),pk_columns: admins_auth_logs_pk_columns_input}) => admins_auth_logsObservableChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** update single row of the table: "admins" */
update_admins_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (admins_set_input | null),pk_columns: admins_pk_columns_input}) => adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Observable<(FieldsSelection<admins, R> | undefined)>}),
    
/** update data of the table: "auth_methods" */
update_auth_methods: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (auth_methods_set_input | null),
/** filter the rows which have to be updated */
where: auth_methods_bool_exp}) => auth_methods_mutation_responseObservableChain & {get: <R extends auth_methods_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods_mutation_response, R> | undefined)) => Observable<(FieldsSelection<auth_methods_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "auth_methods" */
update_auth_methods_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (auth_methods_set_input | null),pk_columns: auth_methods_pk_columns_input}) => auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Observable<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** update data of the table: "blacklist_refresh_token" */
update_blacklist_refresh_token: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (blacklist_refresh_token_set_input | null),
/** filter the rows which have to be updated */
where: blacklist_refresh_token_bool_exp}) => blacklist_refresh_token_mutation_responseObservableChain & {get: <R extends blacklist_refresh_token_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "blacklist_refresh_token" */
update_blacklist_refresh_token_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (blacklist_refresh_token_set_input | null),pk_columns: blacklist_refresh_token_pk_columns_input}) => blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** update data of the table: "connectors" */
update_connectors: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (connectors_set_input | null),
/** filter the rows which have to be updated */
where: connectors_bool_exp}) => connectors_mutation_responseObservableChain & {get: <R extends connectors_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<connectors_mutation_response, R> | undefined)) => Observable<(FieldsSelection<connectors_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "connectors" */
update_connectors_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (connectors_set_input | null),pk_columns: connectors_pk_columns_input}) => connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Observable<(FieldsSelection<connectors, R> | undefined)>}),
    
/** update data of the table: "customer_user" */
update_customer_user: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customer_user_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_bool_exp}) => customer_user_mutation_responseObservableChain & {get: <R extends customer_user_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user" */
update_customer_user_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customer_user_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_set_input | null),pk_columns: customer_user_pk_columns_input}) => customer_userObservableChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Observable<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** update data of the table: "customer_user_service" */
update_customer_user_service: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_service_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_service_bool_exp}) => customer_user_service_mutation_responseObservableChain & {get: <R extends customer_user_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_service_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user_service" */
update_customer_user_service_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_service_set_input | null),pk_columns: customer_user_service_pk_columns_input}) => customer_user_serviceObservableChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** update data of the table: "customer_user_sub_service" */
update_customer_user_sub_service: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_sub_service_set_input | null),
/** filter the rows which have to be updated */
where: customer_user_sub_service_bool_exp}) => customer_user_sub_service_mutation_responseObservableChain & {get: <R extends customer_user_sub_service_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customer_user_sub_service" */
update_customer_user_sub_service_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customer_user_sub_service_set_input | null),pk_columns: customer_user_sub_service_pk_columns_input}) => customer_user_sub_serviceObservableChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** update data of the table: "customers" */
update_customers: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customers_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customers_set_input | null),
/** filter the rows which have to be updated */
where: customers_bool_exp}) => customers_mutation_responseObservableChain & {get: <R extends customers_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customers" */
update_customers_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (customers_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (customers_set_input | null),pk_columns: customers_pk_columns_input}) => customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Observable<(FieldsSelection<customers, R> | undefined)>}),
    
/** update data of the table: "customers_contact" */
update_customers_contact: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customers_contact_set_input | null),
/** filter the rows which have to be updated */
where: customers_contact_bool_exp}) => customers_contact_mutation_responseObservableChain & {get: <R extends customers_contact_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact_mutation_response, R> | undefined)) => Observable<(FieldsSelection<customers_contact_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "customers_contact" */
update_customers_contact_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (customers_contact_set_input | null),pk_columns: customers_contact_pk_columns_input}) => customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** update data of the table: "feature_names" */
update_feature_names: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (feature_names_set_input | null),
/** filter the rows which have to be updated */
where: feature_names_bool_exp}) => feature_names_mutation_responseObservableChain & {get: <R extends feature_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<feature_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<feature_names_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "feature_names" */
update_feature_names_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (feature_names_set_input | null),pk_columns: feature_names_pk_columns_input}) => feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Observable<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** update data of the table: "features" */
update_features: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (features_set_input | null),
/** filter the rows which have to be updated */
where: features_bool_exp}) => features_mutation_responseObservableChain & {get: <R extends features_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<features_mutation_response, R> | undefined)) => Observable<(FieldsSelection<features_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "features" */
update_features_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (features_set_input | null),pk_columns: features_pk_columns_input}) => featuresObservableChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Observable<(FieldsSelection<features, R> | undefined)>}),
    
/** update data of the table: "partners" */
update_partners: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (partners_set_input | null),
/** filter the rows which have to be updated */
where: partners_bool_exp}) => partners_mutation_responseObservableChain & {get: <R extends partners_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<partners_mutation_response, R> | undefined)) => Observable<(FieldsSelection<partners_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "partners" */
update_partners_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (partners_set_input | null),pk_columns: partners_pk_columns_input}) => partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    
/** update data of the table: "roles" */
update_roles: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (roles_set_input | null),
/** filter the rows which have to be updated */
where: roles_bool_exp}) => roles_mutation_responseObservableChain & {get: <R extends roles_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<roles_mutation_response, R> | undefined)) => Observable<(FieldsSelection<roles_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "roles" */
update_roles_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (roles_set_input | null),pk_columns: roles_pk_columns_input}) => rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Observable<(FieldsSelection<roles, R> | undefined)>}),
    
/** update data of the table: "services" */
update_services: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (services_set_input | null),
/** filter the rows which have to be updated */
where: services_bool_exp}) => services_mutation_responseObservableChain & {get: <R extends services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<services_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "services" */
update_services_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (services_set_input | null),pk_columns: services_pk_columns_input}) => servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Observable<(FieldsSelection<services, R> | undefined)>}),
    
/** update data of the table: "srv_names" */
update_srv_names: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_names_set_input | null),
/** filter the rows which have to be updated */
where: srv_names_bool_exp}) => srv_names_mutation_responseObservableChain & {get: <R extends srv_names_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_names_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "srv_names" */
update_srv_names_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_names_set_input | null),pk_columns: srv_names_pk_columns_input}) => srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Observable<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** update data of the table: "srv_urls" */
update_srv_urls: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_urls_set_input | null),
/** filter the rows which have to be updated */
where: srv_urls_bool_exp}) => srv_urls_mutation_responseObservableChain & {get: <R extends srv_urls_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_mutation_response, R> | undefined)) => Observable<(FieldsSelection<srv_urls_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "srv_urls" */
update_srv_urls_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (srv_urls_set_input | null),pk_columns: srv_urls_pk_columns_input}) => srv_urlsObservableChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Observable<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** update data of the table: "status" */
update_status: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (status_set_input | null),
/** filter the rows which have to be updated */
where: status_bool_exp}) => status_mutation_responseObservableChain & {get: <R extends status_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<status_mutation_response, R> | undefined)) => Observable<(FieldsSelection<status_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "status" */
update_status_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (status_set_input | null),pk_columns: status_pk_columns_input}) => statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Observable<(FieldsSelection<status, R> | undefined)>}),
    
/** update data of the table: "sub_services" */
update_sub_services: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (sub_services_set_input | null),
/** filter the rows which have to be updated */
where: sub_services_bool_exp}) => sub_services_mutation_responseObservableChain & {get: <R extends sub_services_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_mutation_response, R> | undefined)) => Observable<(FieldsSelection<sub_services_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "sub_services" */
update_sub_services_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (sub_services_set_input | null),pk_columns: sub_services_pk_columns_input}) => sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** update data of the table: "user_basic_data" */
update_user_basic_data: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (user_basic_data_set_input | null),
/** filter the rows which have to be updated */
where: user_basic_data_bool_exp}) => user_basic_data_mutation_responseObservableChain & {get: <R extends user_basic_data_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_mutation_response, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "user_basic_data" */
update_user_basic_data_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (user_basic_data_set_input | null),pk_columns: user_basic_data_pk_columns_input}) => user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** update data of the table: "users" */
update_users: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (users_set_input | null),
/** filter the rows which have to be updated */
where: users_bool_exp}) => users_mutation_responseObservableChain & {get: <R extends users_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_mutation_response, R> | undefined)>}),
    
/** update data of the table: "users_auth_logs" */
update_users_auth_logs: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (users_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (users_auth_logs_set_input | null),
/** filter the rows which have to be updated */
where: users_auth_logs_bool_exp}) => users_auth_logs_mutation_responseObservableChain & {get: <R extends users_auth_logs_mutation_responseRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_mutation_response, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_mutation_response, R> | undefined)>}),
    
/** update single row of the table: "users_auth_logs" */
update_users_auth_logs_by_pk: ((args: {
/** increments the numeric columns with given value of the filtered values */
_inc?: (users_auth_logs_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (users_auth_logs_set_input | null),pk_columns: users_auth_logs_pk_columns_input}) => users_auth_logsObservableChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** update single row of the table: "users" */
update_users_by_pk: ((args: {
/** sets the columns of the filtered rows to the given values */
_set?: (users_set_input | null),pk_columns: users_pk_columns_input}) => usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Observable<(FieldsSelection<users, R> | undefined)>})
}


/** columns and relationships of "partners" */
export interface partnersPromiseChain{
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>})&(customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}


/** columns and relationships of "partners" */
export interface partnersObservableChain{
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>})&(customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}


/** aggregated selection of "partners" */
export interface partners_aggregatePromiseChain{
    aggregate: (partners_aggregate_fieldsPromiseChain & {get: <R extends partners_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<partners_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>})
}


/** aggregated selection of "partners" */
export interface partners_aggregateObservableChain{
    aggregate: (partners_aggregate_fieldsObservableChain & {get: <R extends partners_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<partners_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>})
}


/** aggregate fields of "partners" */
export interface partners_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (partners_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (partners_max_fieldsPromiseChain & {get: <R extends partners_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_max_fields, R> | undefined)) => Promise<(FieldsSelection<partners_max_fields, R> | undefined)>}),
    min: (partners_min_fieldsPromiseChain & {get: <R extends partners_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_min_fields, R> | undefined)) => Promise<(FieldsSelection<partners_min_fields, R> | undefined)>})
}


/** aggregate fields of "partners" */
export interface partners_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (partners_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (partners_max_fieldsObservableChain & {get: <R extends partners_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_max_fields, R> | undefined)) => Observable<(FieldsSelection<partners_max_fields, R> | undefined)>}),
    min: (partners_min_fieldsObservableChain & {get: <R extends partners_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<partners_min_fields, R> | undefined)) => Observable<(FieldsSelection<partners_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface partners_max_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface partners_max_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface partners_min_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface partners_min_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "partners" */
export interface partners_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>})
}


/** response of any mutation on the table "partners" */
export interface partners_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>})
}

export interface query_rootPromiseChain{
    
/** fetch data from the table: "admins" */
admins: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>})&({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>}),
    
/** fetch aggregated fields from the table: "admins" */
admins_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => admins_aggregatePromiseChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Promise<FieldsSelection<admins_aggregate, R>>})&(admins_aggregatePromiseChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Promise<FieldsSelection<admins_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" using primary key columns */
admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsPromiseChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "admins" using primary key columns */
admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Promise<(FieldsSelection<admins, R> | undefined)>}),
    
/** fetch data from the table: "auth_methods" */
auth_methods: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>})&({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>}),
    
/** fetch aggregated fields from the table: "auth_methods" */
auth_methods_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => auth_methods_aggregatePromiseChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Promise<FieldsSelection<auth_methods_aggregate, R>>})&(auth_methods_aggregatePromiseChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Promise<FieldsSelection<auth_methods_aggregate, R>>}),
    
/** fetch data from the table: "auth_methods" using primary key columns */
auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Promise<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** fetch data from the table: "blacklist_refresh_token" */
blacklist_refresh_token: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>})&({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>}),
    
/** fetch aggregated fields from the table: "blacklist_refresh_token" */
blacklist_refresh_token_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => blacklist_refresh_token_aggregatePromiseChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Promise<FieldsSelection<blacklist_refresh_token_aggregate, R>>})&(blacklist_refresh_token_aggregatePromiseChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Promise<FieldsSelection<blacklist_refresh_token_aggregate, R>>}),
    
/** fetch data from the table: "blacklist_refresh_token" using primary key columns */
blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** fetch data from the table: "connectors" */
connectors: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>})&({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>}),
    
/** fetch aggregated fields from the table: "connectors" */
connectors_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => connectors_aggregatePromiseChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Promise<FieldsSelection<connectors_aggregate, R>>})&(connectors_aggregatePromiseChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Promise<FieldsSelection<connectors_aggregate, R>>}),
    
/** fetch data from the table: "connectors" using primary key columns */
connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Promise<(FieldsSelection<connectors, R> | undefined)>}),
    
/** fetch data from the table: "customer_user" */
customer_user: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user" */
customer_user_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>}),
    
/** fetch data from the table: "customer_user" using primary key columns */
customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userPromiseChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Promise<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_service" */
customer_user_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_service" */
customer_user_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_service" using primary key columns */
customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_servicePromiseChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_sub_service" */
customer_user_sub_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_sub_service" */
customer_user_sub_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_sub_service" using primary key columns */
customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_servicePromiseChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>})&(customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>}),
    
/** fetch data from the table: "customers" using primary key columns */
customers_by_pk: ((args: {id: Scalars['uuid']}) => customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Promise<(FieldsSelection<customers, R> | undefined)>}),
    
/** fetch data from the table: "customers_contact" */
customers_contact: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>})&({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>}),
    
/** fetch aggregated fields from the table: "customers_contact" */
customers_contact_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => customers_contact_aggregatePromiseChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Promise<FieldsSelection<customers_contact_aggregate, R>>})&(customers_contact_aggregatePromiseChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Promise<FieldsSelection<customers_contact_aggregate, R>>}),
    
/** fetch data from the table: "customers_contact" using primary key columns */
customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** fetch data from the table: "feature_names" */
feature_names: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>})&({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>}),
    
/** fetch aggregated fields from the table: "feature_names" */
feature_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => feature_names_aggregatePromiseChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Promise<FieldsSelection<feature_names_aggregate, R>>})&(feature_names_aggregatePromiseChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Promise<FieldsSelection<feature_names_aggregate, R>>}),
    
/** fetch data from the table: "feature_names" using primary key columns */
feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Promise<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>})&(features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>}),
    
/** fetch data from the table: "features" using primary key columns */
features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresPromiseChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Promise<(FieldsSelection<features, R> | undefined)>}),
    getCustomerById: ((args: {id: Scalars['uuid']}) => getCustomersAndCountUsersOutputPromiseChain & {get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: (FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)) => Promise<(FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)>}),
    getCustomersAndCountUsers: ({get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: ((FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)[] | undefined)) => Promise<((FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)[] | undefined)>}),
    
/** fetch data from the table: "partners" */
partners: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => {get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>})&({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>}),
    
/** fetch aggregated fields from the table: "partners" */
partners_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => partners_aggregatePromiseChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Promise<FieldsSelection<partners_aggregate, R>>})&(partners_aggregatePromiseChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Promise<FieldsSelection<partners_aggregate, R>>}),
    
/** fetch data from the table: "partners" using primary key columns */
partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    
/** fetch data from the table: "roles" */
roles: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>})&({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>}),
    
/** fetch aggregated fields from the table: "roles" */
roles_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => roles_aggregatePromiseChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Promise<FieldsSelection<roles_aggregate, R>>})&(roles_aggregatePromiseChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Promise<FieldsSelection<roles_aggregate, R>>}),
    
/** fetch data from the table: "roles" using primary key columns */
roles_by_pk: ((args: {name: Scalars['String']}) => rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Promise<(FieldsSelection<roles, R> | undefined)>}),
    
/** fetch data from the table: "services" */
services: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>})&({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>}),
    
/** fetch aggregated fields from the table: "services" */
services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => services_aggregatePromiseChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Promise<FieldsSelection<services_aggregate, R>>})&(services_aggregatePromiseChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Promise<FieldsSelection<services_aggregate, R>>}),
    
/** fetch data from the table: "services" using primary key columns */
services_by_pk: ((args: {name: Scalars['String']}) => servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Promise<(FieldsSelection<services, R> | undefined)>}),
    
/** fetch data from the table: "srv_names" */
srv_names: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>})&({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>}),
    
/** fetch aggregated fields from the table: "srv_names" */
srv_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => srv_names_aggregatePromiseChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Promise<FieldsSelection<srv_names_aggregate, R>>})&(srv_names_aggregatePromiseChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Promise<FieldsSelection<srv_names_aggregate, R>>}),
    
/** fetch data from the table: "srv_names" using primary key columns */
srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Promise<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** fetch data from the table: "srv_urls" using primary key columns */
srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsPromiseChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Promise<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** fetch data from the table: "status" */
status: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>})&({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>}),
    
/** fetch aggregated fields from the table: "status" */
status_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => status_aggregatePromiseChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Promise<FieldsSelection<status_aggregate, R>>})&(status_aggregatePromiseChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Promise<FieldsSelection<status_aggregate, R>>}),
    
/** fetch data from the table: "status" using primary key columns */
status_by_pk: ((args: {name: Scalars['String']}) => statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Promise<(FieldsSelection<status, R> | undefined)>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>}),
    
/** fetch data from the table: "sub_services" using primary key columns */
sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>}),
    
/** fetch data from the table: "user_basic_data" using primary key columns */
user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>})&(users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "users_auth_logs" using primary key columns */
users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsPromiseChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "users" using primary key columns */
users_by_pk: ((args: {id: Scalars['uuid']}) => usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Promise<(FieldsSelection<users, R> | undefined)>})
}

export interface query_rootObservableChain{
    
/** fetch data from the table: "admins" */
admins: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>})&({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>}),
    
/** fetch aggregated fields from the table: "admins" */
admins_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => admins_aggregateObservableChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Observable<FieldsSelection<admins_aggregate, R>>})&(admins_aggregateObservableChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Observable<FieldsSelection<admins_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" using primary key columns */
admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsObservableChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "admins" using primary key columns */
admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Observable<(FieldsSelection<admins, R> | undefined)>}),
    
/** fetch data from the table: "auth_methods" */
auth_methods: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>})&({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>}),
    
/** fetch aggregated fields from the table: "auth_methods" */
auth_methods_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => auth_methods_aggregateObservableChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Observable<FieldsSelection<auth_methods_aggregate, R>>})&(auth_methods_aggregateObservableChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Observable<FieldsSelection<auth_methods_aggregate, R>>}),
    
/** fetch data from the table: "auth_methods" using primary key columns */
auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Observable<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** fetch data from the table: "blacklist_refresh_token" */
blacklist_refresh_token: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>})&({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>}),
    
/** fetch aggregated fields from the table: "blacklist_refresh_token" */
blacklist_refresh_token_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => blacklist_refresh_token_aggregateObservableChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Observable<FieldsSelection<blacklist_refresh_token_aggregate, R>>})&(blacklist_refresh_token_aggregateObservableChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Observable<FieldsSelection<blacklist_refresh_token_aggregate, R>>}),
    
/** fetch data from the table: "blacklist_refresh_token" using primary key columns */
blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** fetch data from the table: "connectors" */
connectors: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>})&({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>}),
    
/** fetch aggregated fields from the table: "connectors" */
connectors_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => connectors_aggregateObservableChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Observable<FieldsSelection<connectors_aggregate, R>>})&(connectors_aggregateObservableChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Observable<FieldsSelection<connectors_aggregate, R>>}),
    
/** fetch data from the table: "connectors" using primary key columns */
connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Observable<(FieldsSelection<connectors, R> | undefined)>}),
    
/** fetch data from the table: "customer_user" */
customer_user: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user" */
customer_user_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>}),
    
/** fetch data from the table: "customer_user" using primary key columns */
customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userObservableChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Observable<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_service" */
customer_user_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_service" */
customer_user_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_service" using primary key columns */
customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_serviceObservableChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_sub_service" */
customer_user_sub_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_sub_service" */
customer_user_sub_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_sub_service" using primary key columns */
customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_serviceObservableChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>})&(customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>}),
    
/** fetch data from the table: "customers" using primary key columns */
customers_by_pk: ((args: {id: Scalars['uuid']}) => customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Observable<(FieldsSelection<customers, R> | undefined)>}),
    
/** fetch data from the table: "customers_contact" */
customers_contact: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>})&({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>}),
    
/** fetch aggregated fields from the table: "customers_contact" */
customers_contact_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => customers_contact_aggregateObservableChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Observable<FieldsSelection<customers_contact_aggregate, R>>})&(customers_contact_aggregateObservableChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Observable<FieldsSelection<customers_contact_aggregate, R>>}),
    
/** fetch data from the table: "customers_contact" using primary key columns */
customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** fetch data from the table: "feature_names" */
feature_names: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>})&({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>}),
    
/** fetch aggregated fields from the table: "feature_names" */
feature_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => feature_names_aggregateObservableChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Observable<FieldsSelection<feature_names_aggregate, R>>})&(feature_names_aggregateObservableChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Observable<FieldsSelection<feature_names_aggregate, R>>}),
    
/** fetch data from the table: "feature_names" using primary key columns */
feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Observable<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>})&(features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>}),
    
/** fetch data from the table: "features" using primary key columns */
features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresObservableChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Observable<(FieldsSelection<features, R> | undefined)>}),
    getCustomerById: ((args: {id: Scalars['uuid']}) => getCustomersAndCountUsersOutputObservableChain & {get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: (FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)) => Observable<(FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)>}),
    getCustomersAndCountUsers: ({get: <R extends getCustomersAndCountUsersOutputRequest>(request: R, defaultValue?: ((FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)[] | undefined)) => Observable<((FieldsSelection<getCustomersAndCountUsersOutput, R> | undefined)[] | undefined)>}),
    
/** fetch data from the table: "partners" */
partners: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => {get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>})&({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>}),
    
/** fetch aggregated fields from the table: "partners" */
partners_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => partners_aggregateObservableChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Observable<FieldsSelection<partners_aggregate, R>>})&(partners_aggregateObservableChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Observable<FieldsSelection<partners_aggregate, R>>}),
    
/** fetch data from the table: "partners" using primary key columns */
partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    
/** fetch data from the table: "roles" */
roles: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>})&({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>}),
    
/** fetch aggregated fields from the table: "roles" */
roles_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => roles_aggregateObservableChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Observable<FieldsSelection<roles_aggregate, R>>})&(roles_aggregateObservableChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Observable<FieldsSelection<roles_aggregate, R>>}),
    
/** fetch data from the table: "roles" using primary key columns */
roles_by_pk: ((args: {name: Scalars['String']}) => rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Observable<(FieldsSelection<roles, R> | undefined)>}),
    
/** fetch data from the table: "services" */
services: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>})&({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>}),
    
/** fetch aggregated fields from the table: "services" */
services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => services_aggregateObservableChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Observable<FieldsSelection<services_aggregate, R>>})&(services_aggregateObservableChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Observable<FieldsSelection<services_aggregate, R>>}),
    
/** fetch data from the table: "services" using primary key columns */
services_by_pk: ((args: {name: Scalars['String']}) => servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Observable<(FieldsSelection<services, R> | undefined)>}),
    
/** fetch data from the table: "srv_names" */
srv_names: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>})&({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>}),
    
/** fetch aggregated fields from the table: "srv_names" */
srv_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => srv_names_aggregateObservableChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Observable<FieldsSelection<srv_names_aggregate, R>>})&(srv_names_aggregateObservableChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Observable<FieldsSelection<srv_names_aggregate, R>>}),
    
/** fetch data from the table: "srv_names" using primary key columns */
srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Observable<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** fetch data from the table: "srv_urls" using primary key columns */
srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsObservableChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Observable<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** fetch data from the table: "status" */
status: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>})&({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>}),
    
/** fetch aggregated fields from the table: "status" */
status_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => status_aggregateObservableChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Observable<FieldsSelection<status_aggregate, R>>})&(status_aggregateObservableChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Observable<FieldsSelection<status_aggregate, R>>}),
    
/** fetch data from the table: "status" using primary key columns */
status_by_pk: ((args: {name: Scalars['String']}) => statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Observable<(FieldsSelection<status, R> | undefined)>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>}),
    
/** fetch data from the table: "sub_services" using primary key columns */
sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>}),
    
/** fetch data from the table: "user_basic_data" using primary key columns */
user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>})&(users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "users_auth_logs" using primary key columns */
users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsObservableChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "users" using primary key columns */
users_by_pk: ((args: {id: Scalars['uuid']}) => usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Observable<(FieldsSelection<users, R> | undefined)>})
}


/** columns and relationships of "roles" */
export interface rolesPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>})&(users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>})
}


/** columns and relationships of "roles" */
export interface rolesObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>})&(users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>})
}


/** aggregated selection of "roles" */
export interface roles_aggregatePromiseChain{
    aggregate: (roles_aggregate_fieldsPromiseChain & {get: <R extends roles_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<roles_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>})
}


/** aggregated selection of "roles" */
export interface roles_aggregateObservableChain{
    aggregate: (roles_aggregate_fieldsObservableChain & {get: <R extends roles_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<roles_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>})
}


/** aggregate fields of "roles" */
export interface roles_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (roles_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (roles_max_fieldsPromiseChain & {get: <R extends roles_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_max_fields, R> | undefined)) => Promise<(FieldsSelection<roles_max_fields, R> | undefined)>}),
    min: (roles_min_fieldsPromiseChain & {get: <R extends roles_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_min_fields, R> | undefined)) => Promise<(FieldsSelection<roles_min_fields, R> | undefined)>})
}


/** aggregate fields of "roles" */
export interface roles_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (roles_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (roles_max_fieldsObservableChain & {get: <R extends roles_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_max_fields, R> | undefined)) => Observable<(FieldsSelection<roles_max_fields, R> | undefined)>}),
    min: (roles_min_fieldsObservableChain & {get: <R extends roles_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<roles_min_fields, R> | undefined)) => Observable<(FieldsSelection<roles_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface roles_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface roles_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface roles_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface roles_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "roles" */
export interface roles_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>})
}


/** response of any mutation on the table "roles" */
export interface roles_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>})
}


/** columns and relationships of "services" */
export interface servicesPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>})
}


/** columns and relationships of "services" */
export interface servicesObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>})
}


/** aggregated selection of "services" */
export interface services_aggregatePromiseChain{
    aggregate: (services_aggregate_fieldsPromiseChain & {get: <R extends services_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<services_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>})
}


/** aggregated selection of "services" */
export interface services_aggregateObservableChain{
    aggregate: (services_aggregate_fieldsObservableChain & {get: <R extends services_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<services_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>})
}


/** aggregate fields of "services" */
export interface services_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (services_max_fieldsPromiseChain & {get: <R extends services_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_max_fields, R> | undefined)) => Promise<(FieldsSelection<services_max_fields, R> | undefined)>}),
    min: (services_min_fieldsPromiseChain & {get: <R extends services_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_min_fields, R> | undefined)) => Promise<(FieldsSelection<services_min_fields, R> | undefined)>})
}


/** aggregate fields of "services" */
export interface services_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (services_max_fieldsObservableChain & {get: <R extends services_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_max_fields, R> | undefined)) => Observable<(FieldsSelection<services_max_fields, R> | undefined)>}),
    min: (services_min_fieldsObservableChain & {get: <R extends services_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<services_min_fields, R> | undefined)) => Observable<(FieldsSelection<services_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface services_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface services_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface services_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface services_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "services" */
export interface services_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>})
}


/** response of any mutation on the table "services" */
export interface services_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>})
}


/** columns and relationships of "srv_names" */
export interface srv_namesPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})
}


/** columns and relationships of "srv_names" */
export interface srv_namesObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})
}


/** aggregated selection of "srv_names" */
export interface srv_names_aggregatePromiseChain{
    aggregate: (srv_names_aggregate_fieldsPromiseChain & {get: <R extends srv_names_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<srv_names_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>})
}


/** aggregated selection of "srv_names" */
export interface srv_names_aggregateObservableChain{
    aggregate: (srv_names_aggregate_fieldsObservableChain & {get: <R extends srv_names_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<srv_names_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>})
}


/** aggregate fields of "srv_names" */
export interface srv_names_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (srv_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (srv_names_max_fieldsPromiseChain & {get: <R extends srv_names_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_max_fields, R> | undefined)) => Promise<(FieldsSelection<srv_names_max_fields, R> | undefined)>}),
    min: (srv_names_min_fieldsPromiseChain & {get: <R extends srv_names_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_min_fields, R> | undefined)) => Promise<(FieldsSelection<srv_names_min_fields, R> | undefined)>})
}


/** aggregate fields of "srv_names" */
export interface srv_names_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (srv_names_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (srv_names_max_fieldsObservableChain & {get: <R extends srv_names_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_max_fields, R> | undefined)) => Observable<(FieldsSelection<srv_names_max_fields, R> | undefined)>}),
    min: (srv_names_min_fieldsObservableChain & {get: <R extends srv_names_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_names_min_fields, R> | undefined)) => Observable<(FieldsSelection<srv_names_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface srv_names_max_fieldsPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface srv_names_max_fieldsObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface srv_names_min_fieldsPromiseChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface srv_names_min_fieldsObservableChain{
    description: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "srv_names" */
export interface srv_names_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>})
}


/** response of any mutation on the table "srv_names" */
export interface srv_names_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>})
}


/** columns and relationships of "srv_urls" */
export interface srv_urlsPromiseChain{
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: srv_names_enum) => Promise<srv_names_enum>}),
    
/** An object relationship */
srv_name: (srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>) => Promise<FieldsSelection<srv_names, R>>}),
    url: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>})
}


/** columns and relationships of "srv_urls" */
export interface srv_urlsObservableChain{
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    name: ({get: (request?: boolean|number, defaultValue?: srv_names_enum) => Observable<srv_names_enum>}),
    
/** An object relationship */
srv_name: (srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>) => Observable<FieldsSelection<srv_names, R>>}),
    url: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>})
}


/** aggregated selection of "srv_urls" */
export interface srv_urls_aggregatePromiseChain{
    aggregate: (srv_urls_aggregate_fieldsPromiseChain & {get: <R extends srv_urls_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<srv_urls_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})
}


/** aggregated selection of "srv_urls" */
export interface srv_urls_aggregateObservableChain{
    aggregate: (srv_urls_aggregate_fieldsObservableChain & {get: <R extends srv_urls_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<srv_urls_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})
}


/** aggregate fields of "srv_urls" */
export interface srv_urls_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (srv_urls_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (srv_urls_max_fieldsPromiseChain & {get: <R extends srv_urls_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_max_fields, R> | undefined)) => Promise<(FieldsSelection<srv_urls_max_fields, R> | undefined)>}),
    min: (srv_urls_min_fieldsPromiseChain & {get: <R extends srv_urls_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_min_fields, R> | undefined)) => Promise<(FieldsSelection<srv_urls_min_fields, R> | undefined)>})
}


/** aggregate fields of "srv_urls" */
export interface srv_urls_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (srv_urls_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (srv_urls_max_fieldsObservableChain & {get: <R extends srv_urls_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_max_fields, R> | undefined)) => Observable<(FieldsSelection<srv_urls_max_fields, R> | undefined)>}),
    min: (srv_urls_min_fieldsObservableChain & {get: <R extends srv_urls_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls_min_fields, R> | undefined)) => Observable<(FieldsSelection<srv_urls_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface srv_urls_max_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    url: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface srv_urls_max_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    url: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface srv_urls_min_fieldsPromiseChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    url: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface srv_urls_min_fieldsObservableChain{
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    url: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "srv_urls" */
export interface srv_urls_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})
}


/** response of any mutation on the table "srv_urls" */
export interface srv_urls_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})
}


/** columns and relationships of "status" */
export interface statusPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>})&(customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>})
}


/** columns and relationships of "status" */
export interface statusObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>})&(customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>})
}


/** aggregated selection of "status" */
export interface status_aggregatePromiseChain{
    aggregate: (status_aggregate_fieldsPromiseChain & {get: <R extends status_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<status_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>})
}


/** aggregated selection of "status" */
export interface status_aggregateObservableChain{
    aggregate: (status_aggregate_fieldsObservableChain & {get: <R extends status_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<status_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>})
}


/** aggregate fields of "status" */
export interface status_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (status_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (status_max_fieldsPromiseChain & {get: <R extends status_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_max_fields, R> | undefined)) => Promise<(FieldsSelection<status_max_fields, R> | undefined)>}),
    min: (status_min_fieldsPromiseChain & {get: <R extends status_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_min_fields, R> | undefined)) => Promise<(FieldsSelection<status_min_fields, R> | undefined)>})
}


/** aggregate fields of "status" */
export interface status_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (status_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (status_max_fieldsObservableChain & {get: <R extends status_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_max_fields, R> | undefined)) => Observable<(FieldsSelection<status_max_fields, R> | undefined)>}),
    min: (status_min_fieldsObservableChain & {get: <R extends status_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<status_min_fields, R> | undefined)) => Observable<(FieldsSelection<status_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface status_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface status_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface status_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface status_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "status" */
export interface status_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>})
}


/** response of any mutation on the table "status" */
export interface status_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>})
}


/** columns and relationships of "sub_services" */
export interface sub_servicesPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Promise<Scalars['String']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Promise<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Promise<FieldsSelection<services, R>>})
}


/** columns and relationships of "sub_services" */
export interface sub_servicesObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['String']) => Observable<Scalars['String']>}),
    service: ({get: (request?: boolean|number, defaultValue?: services_enum) => Observable<services_enum>}),
    
/** An object relationship */
serviceByService: (servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>) => Observable<FieldsSelection<services, R>>})
}


/** aggregated selection of "sub_services" */
export interface sub_services_aggregatePromiseChain{
    aggregate: (sub_services_aggregate_fieldsPromiseChain & {get: <R extends sub_services_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<sub_services_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>})
}


/** aggregated selection of "sub_services" */
export interface sub_services_aggregateObservableChain{
    aggregate: (sub_services_aggregate_fieldsObservableChain & {get: <R extends sub_services_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<sub_services_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>})
}


/** aggregate fields of "sub_services" */
export interface sub_services_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (sub_services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (sub_services_max_fieldsPromiseChain & {get: <R extends sub_services_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_max_fields, R> | undefined)) => Promise<(FieldsSelection<sub_services_max_fields, R> | undefined)>}),
    min: (sub_services_min_fieldsPromiseChain & {get: <R extends sub_services_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_min_fields, R> | undefined)) => Promise<(FieldsSelection<sub_services_min_fields, R> | undefined)>})
}


/** aggregate fields of "sub_services" */
export interface sub_services_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (sub_services_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (sub_services_max_fieldsObservableChain & {get: <R extends sub_services_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_max_fields, R> | undefined)) => Observable<(FieldsSelection<sub_services_max_fields, R> | undefined)>}),
    min: (sub_services_min_fieldsObservableChain & {get: <R extends sub_services_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<sub_services_min_fields, R> | undefined)) => Observable<(FieldsSelection<sub_services_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface sub_services_max_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate max on columns */
export interface sub_services_max_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface sub_services_min_fieldsPromiseChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>})
}


/** aggregate min on columns */
export interface sub_services_min_fieldsObservableChain{
    comment: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>})
}


/** response of any mutation on the table "sub_services" */
export interface sub_services_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>})
}


/** response of any mutation on the table "sub_services" */
export interface sub_services_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>})
}

export interface subscription_rootPromiseChain{
    
/** fetch data from the table: "admins" */
admins: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>})&({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Promise<FieldsSelection<admins, R>[]>}),
    
/** fetch aggregated fields from the table: "admins" */
admins_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => admins_aggregatePromiseChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Promise<FieldsSelection<admins_aggregate, R>>})&(admins_aggregatePromiseChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Promise<FieldsSelection<admins_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Promise<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregatePromiseChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Promise<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" using primary key columns */
admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsPromiseChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Promise<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "admins" using primary key columns */
admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsPromiseChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Promise<(FieldsSelection<admins, R> | undefined)>}),
    
/** fetch data from the table: "auth_methods" */
auth_methods: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>})&({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Promise<FieldsSelection<auth_methods, R>[]>}),
    
/** fetch aggregated fields from the table: "auth_methods" */
auth_methods_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => auth_methods_aggregatePromiseChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Promise<FieldsSelection<auth_methods_aggregate, R>>})&(auth_methods_aggregatePromiseChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Promise<FieldsSelection<auth_methods_aggregate, R>>}),
    
/** fetch data from the table: "auth_methods" using primary key columns */
auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Promise<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** fetch data from the table: "blacklist_refresh_token" */
blacklist_refresh_token: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>})&({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Promise<FieldsSelection<blacklist_refresh_token, R>[]>}),
    
/** fetch aggregated fields from the table: "blacklist_refresh_token" */
blacklist_refresh_token_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => blacklist_refresh_token_aggregatePromiseChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Promise<FieldsSelection<blacklist_refresh_token_aggregate, R>>})&(blacklist_refresh_token_aggregatePromiseChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Promise<FieldsSelection<blacklist_refresh_token_aggregate, R>>}),
    
/** fetch data from the table: "blacklist_refresh_token" using primary key columns */
blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** fetch data from the table: "connectors" */
connectors: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>})&({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Promise<FieldsSelection<connectors, R>[]>}),
    
/** fetch aggregated fields from the table: "connectors" */
connectors_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => connectors_aggregatePromiseChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Promise<FieldsSelection<connectors_aggregate, R>>})&(connectors_aggregatePromiseChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Promise<FieldsSelection<connectors_aggregate, R>>}),
    
/** fetch data from the table: "connectors" using primary key columns */
connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsPromiseChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Promise<(FieldsSelection<connectors, R> | undefined)>}),
    
/** fetch data from the table: "customer_user" */
customer_user: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user" */
customer_user_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>}),
    
/** fetch data from the table: "customer_user" using primary key columns */
customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userPromiseChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Promise<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_service" */
customer_user_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_service" */
customer_user_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_service" using primary key columns */
customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_servicePromiseChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_sub_service" */
customer_user_sub_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_sub_service" */
customer_user_sub_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_sub_service" using primary key columns */
customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_servicePromiseChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Promise<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Promise<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>})&(customers_aggregatePromiseChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Promise<FieldsSelection<customers_aggregate, R>>}),
    
/** fetch data from the table: "customers" using primary key columns */
customers_by_pk: ((args: {id: Scalars['uuid']}) => customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Promise<(FieldsSelection<customers, R> | undefined)>}),
    
/** fetch data from the table: "customers_contact" */
customers_contact: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>})&({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Promise<FieldsSelection<customers_contact, R>[]>}),
    
/** fetch aggregated fields from the table: "customers_contact" */
customers_contact_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => customers_contact_aggregatePromiseChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Promise<FieldsSelection<customers_contact_aggregate, R>>})&(customers_contact_aggregatePromiseChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Promise<FieldsSelection<customers_contact_aggregate, R>>}),
    
/** fetch data from the table: "customers_contact" using primary key columns */
customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactPromiseChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Promise<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** fetch data from the table: "feature_names" */
feature_names: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>})&({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Promise<FieldsSelection<feature_names, R>[]>}),
    
/** fetch aggregated fields from the table: "feature_names" */
feature_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => feature_names_aggregatePromiseChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Promise<FieldsSelection<feature_names_aggregate, R>>})&(feature_names_aggregatePromiseChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Promise<FieldsSelection<feature_names_aggregate, R>>}),
    
/** fetch data from the table: "feature_names" using primary key columns */
feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesPromiseChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Promise<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Promise<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>})&(features_aggregatePromiseChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Promise<FieldsSelection<features_aggregate, R>>}),
    
/** fetch data from the table: "features" using primary key columns */
features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresPromiseChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Promise<(FieldsSelection<features, R> | undefined)>}),
    
/** fetch data from the table: "partners" */
partners: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => {get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>})&({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Promise<FieldsSelection<partners, R>[]>}),
    
/** fetch aggregated fields from the table: "partners" */
partners_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => partners_aggregatePromiseChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Promise<FieldsSelection<partners_aggregate, R>>})&(partners_aggregatePromiseChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Promise<FieldsSelection<partners_aggregate, R>>}),
    
/** fetch data from the table: "partners" using primary key columns */
partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersPromiseChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Promise<(FieldsSelection<partners, R> | undefined)>}),
    
/** fetch data from the table: "roles" */
roles: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>})&({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Promise<FieldsSelection<roles, R>[]>}),
    
/** fetch aggregated fields from the table: "roles" */
roles_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => roles_aggregatePromiseChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Promise<FieldsSelection<roles_aggregate, R>>})&(roles_aggregatePromiseChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Promise<FieldsSelection<roles_aggregate, R>>}),
    
/** fetch data from the table: "roles" using primary key columns */
roles_by_pk: ((args: {name: Scalars['String']}) => rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Promise<(FieldsSelection<roles, R> | undefined)>}),
    
/** fetch data from the table: "services" */
services: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>})&({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Promise<FieldsSelection<services, R>[]>}),
    
/** fetch aggregated fields from the table: "services" */
services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => services_aggregatePromiseChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Promise<FieldsSelection<services_aggregate, R>>})&(services_aggregatePromiseChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Promise<FieldsSelection<services_aggregate, R>>}),
    
/** fetch data from the table: "services" using primary key columns */
services_by_pk: ((args: {name: Scalars['String']}) => servicesPromiseChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Promise<(FieldsSelection<services, R> | undefined)>}),
    
/** fetch data from the table: "srv_names" */
srv_names: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>})&({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Promise<FieldsSelection<srv_names, R>[]>}),
    
/** fetch aggregated fields from the table: "srv_names" */
srv_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => srv_names_aggregatePromiseChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Promise<FieldsSelection<srv_names_aggregate, R>>})&(srv_names_aggregatePromiseChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Promise<FieldsSelection<srv_names_aggregate, R>>}),
    
/** fetch data from the table: "srv_names" using primary key columns */
srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesPromiseChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Promise<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Promise<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregatePromiseChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Promise<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** fetch data from the table: "srv_urls" using primary key columns */
srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsPromiseChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Promise<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** fetch data from the table: "status" */
status: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>})&({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Promise<FieldsSelection<status, R>[]>}),
    
/** fetch aggregated fields from the table: "status" */
status_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => status_aggregatePromiseChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Promise<FieldsSelection<status_aggregate, R>>})&(status_aggregatePromiseChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Promise<FieldsSelection<status_aggregate, R>>}),
    
/** fetch data from the table: "status" using primary key columns */
status_by_pk: ((args: {name: Scalars['String']}) => statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Promise<(FieldsSelection<status, R> | undefined)>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Promise<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregatePromiseChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Promise<FieldsSelection<sub_services_aggregate, R>>}),
    
/** fetch data from the table: "sub_services" using primary key columns */
sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesPromiseChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Promise<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregatePromiseChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Promise<FieldsSelection<user_basic_data_aggregate, R>>}),
    
/** fetch data from the table: "user_basic_data" using primary key columns */
user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>})&(users_aggregatePromiseChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Promise<FieldsSelection<users_aggregate, R>>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "users_auth_logs" using primary key columns */
users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsPromiseChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "users" using primary key columns */
users_by_pk: ((args: {id: Scalars['uuid']}) => usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Promise<(FieldsSelection<users, R> | undefined)>})
}

export interface subscription_rootObservableChain{
    
/** fetch data from the table: "admins" */
admins: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => {get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>})&({get: <R extends adminsRequest>(request: R, defaultValue?: FieldsSelection<admins, R>[]) => Observable<FieldsSelection<admins, R>[]>}),
    
/** fetch aggregated fields from the table: "admins" */
admins_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_order_by[] | null),
/** filter the rows returned */
where?: (admins_bool_exp | null)}) => admins_aggregateObservableChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Observable<FieldsSelection<admins_aggregate, R>>})&(admins_aggregateObservableChain & {get: <R extends admins_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_aggregate, R>) => Observable<FieldsSelection<admins_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" */
admins_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>})&({get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs, R>[]) => Observable<FieldsSelection<admins_auth_logs, R>[]>}),
    
/** An aggregate relationship */
admins_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (admins_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (admins_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (admins_auth_logs_bool_exp | null)}) => admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>})&(admins_auth_logs_aggregateObservableChain & {get: <R extends admins_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<admins_auth_logs_aggregate, R>) => Observable<FieldsSelection<admins_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "admins_auth_logs" using primary key columns */
admins_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => admins_auth_logsObservableChain & {get: <R extends admins_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<admins_auth_logs, R> | undefined)) => Observable<(FieldsSelection<admins_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "admins" using primary key columns */
admins_by_pk: ((args: {id: Scalars['uuid']}) => adminsObservableChain & {get: <R extends adminsRequest>(request: R, defaultValue?: (FieldsSelection<admins, R> | undefined)) => Observable<(FieldsSelection<admins, R> | undefined)>}),
    
/** fetch data from the table: "auth_methods" */
auth_methods: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>})&({get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>[]) => Observable<FieldsSelection<auth_methods, R>[]>}),
    
/** fetch aggregated fields from the table: "auth_methods" */
auth_methods_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (auth_methods_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (auth_methods_order_by[] | null),
/** filter the rows returned */
where?: (auth_methods_bool_exp | null)}) => auth_methods_aggregateObservableChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Observable<FieldsSelection<auth_methods_aggregate, R>>})&(auth_methods_aggregateObservableChain & {get: <R extends auth_methods_aggregateRequest>(request: R, defaultValue?: FieldsSelection<auth_methods_aggregate, R>) => Observable<FieldsSelection<auth_methods_aggregate, R>>}),
    
/** fetch data from the table: "auth_methods" using primary key columns */
auth_methods_by_pk: ((args: {name: Scalars['String']}) => auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: (FieldsSelection<auth_methods, R> | undefined)) => Observable<(FieldsSelection<auth_methods, R> | undefined)>}),
    
/** fetch data from the table: "blacklist_refresh_token" */
blacklist_refresh_token: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>})&({get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token, R>[]) => Observable<FieldsSelection<blacklist_refresh_token, R>[]>}),
    
/** fetch aggregated fields from the table: "blacklist_refresh_token" */
blacklist_refresh_token_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (blacklist_refresh_token_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (blacklist_refresh_token_order_by[] | null),
/** filter the rows returned */
where?: (blacklist_refresh_token_bool_exp | null)}) => blacklist_refresh_token_aggregateObservableChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Observable<FieldsSelection<blacklist_refresh_token_aggregate, R>>})&(blacklist_refresh_token_aggregateObservableChain & {get: <R extends blacklist_refresh_token_aggregateRequest>(request: R, defaultValue?: FieldsSelection<blacklist_refresh_token_aggregate, R>) => Observable<FieldsSelection<blacklist_refresh_token_aggregate, R>>}),
    
/** fetch data from the table: "blacklist_refresh_token" using primary key columns */
blacklist_refresh_token_by_pk: ((args: {sig: Scalars['String']}) => blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** fetch data from the table: "connectors" */
connectors: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => {get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>})&({get: <R extends connectorsRequest>(request: R, defaultValue?: FieldsSelection<connectors, R>[]) => Observable<FieldsSelection<connectors, R>[]>}),
    
/** fetch aggregated fields from the table: "connectors" */
connectors_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (connectors_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (connectors_order_by[] | null),
/** filter the rows returned */
where?: (connectors_bool_exp | null)}) => connectors_aggregateObservableChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Observable<FieldsSelection<connectors_aggregate, R>>})&(connectors_aggregateObservableChain & {get: <R extends connectors_aggregateRequest>(request: R, defaultValue?: FieldsSelection<connectors_aggregate, R>) => Observable<FieldsSelection<connectors_aggregate, R>>}),
    
/** fetch data from the table: "connectors" using primary key columns */
connectors_by_pk: ((args: {name: Scalars['String']}) => connectorsObservableChain & {get: <R extends connectorsRequest>(request: R, defaultValue?: (FieldsSelection<connectors, R> | undefined)) => Observable<(FieldsSelection<connectors, R> | undefined)>}),
    
/** fetch data from the table: "customer_user" */
customer_user: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user" */
customer_user_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>}),
    
/** fetch data from the table: "customer_user" using primary key columns */
customer_user_by_pk: ((args: {customer_id: Scalars['uuid'],user_id: Scalars['uuid']}) => customer_userObservableChain & {get: <R extends customer_userRequest>(request: R, defaultValue?: (FieldsSelection<customer_user, R> | undefined)) => Observable<(FieldsSelection<customer_user, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_service" */
customer_user_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_service" */
customer_user_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_service" using primary key columns */
customer_user_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,user_id: Scalars['uuid']}) => customer_user_serviceObservableChain & {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_service, R> | undefined)>}),
    
/** fetch data from the table: "customer_user_sub_service" */
customer_user_sub_service: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** fetch aggregated fields from the table: "customer_user_sub_service" */
customer_user_sub_service_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** fetch data from the table: "customer_user_sub_service" using primary key columns */
customer_user_sub_service_by_pk: ((args: {customer_id: Scalars['uuid'],service: services_enum,sub_service: Scalars['String'],user_id: Scalars['uuid']}) => customer_user_sub_serviceObservableChain & {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: (FieldsSelection<customer_user_sub_service, R> | undefined)) => Observable<(FieldsSelection<customer_user_sub_service, R> | undefined)>}),
    
/** An array relationship */
customers: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>})&({get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>[]) => Observable<FieldsSelection<customers, R>[]>}),
    
/** An aggregate relationship */
customers_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_order_by[] | null),
/** filter the rows returned */
where?: (customers_bool_exp | null)}) => customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>})&(customers_aggregateObservableChain & {get: <R extends customers_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_aggregate, R>) => Observable<FieldsSelection<customers_aggregate, R>>}),
    
/** fetch data from the table: "customers" using primary key columns */
customers_by_pk: ((args: {id: Scalars['uuid']}) => customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: (FieldsSelection<customers, R> | undefined)) => Observable<(FieldsSelection<customers, R> | undefined)>}),
    
/** fetch data from the table: "customers_contact" */
customers_contact: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => {get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>})&({get: <R extends customers_contactRequest>(request: R, defaultValue?: FieldsSelection<customers_contact, R>[]) => Observable<FieldsSelection<customers_contact, R>[]>}),
    
/** fetch aggregated fields from the table: "customers_contact" */
customers_contact_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customers_contact_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customers_contact_order_by[] | null),
/** filter the rows returned */
where?: (customers_contact_bool_exp | null)}) => customers_contact_aggregateObservableChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Observable<FieldsSelection<customers_contact_aggregate, R>>})&(customers_contact_aggregateObservableChain & {get: <R extends customers_contact_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customers_contact_aggregate, R>) => Observable<FieldsSelection<customers_contact_aggregate, R>>}),
    
/** fetch data from the table: "customers_contact" using primary key columns */
customers_contact_by_pk: ((args: {customer_id: Scalars['uuid']}) => customers_contactObservableChain & {get: <R extends customers_contactRequest>(request: R, defaultValue?: (FieldsSelection<customers_contact, R> | undefined)) => Observable<(FieldsSelection<customers_contact, R> | undefined)>}),
    
/** fetch data from the table: "feature_names" */
feature_names: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => {get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>})&({get: <R extends feature_namesRequest>(request: R, defaultValue?: FieldsSelection<feature_names, R>[]) => Observable<FieldsSelection<feature_names, R>[]>}),
    
/** fetch aggregated fields from the table: "feature_names" */
feature_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (feature_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (feature_names_order_by[] | null),
/** filter the rows returned */
where?: (feature_names_bool_exp | null)}) => feature_names_aggregateObservableChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Observable<FieldsSelection<feature_names_aggregate, R>>})&(feature_names_aggregateObservableChain & {get: <R extends feature_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<feature_names_aggregate, R>) => Observable<FieldsSelection<feature_names_aggregate, R>>}),
    
/** fetch data from the table: "feature_names" using primary key columns */
feature_names_by_pk: ((args: {name: Scalars['String']}) => feature_namesObservableChain & {get: <R extends feature_namesRequest>(request: R, defaultValue?: (FieldsSelection<feature_names, R> | undefined)) => Observable<(FieldsSelection<feature_names, R> | undefined)>}),
    
/** An array relationship */
features: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => {get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>})&({get: <R extends featuresRequest>(request: R, defaultValue?: FieldsSelection<features, R>[]) => Observable<FieldsSelection<features, R>[]>}),
    
/** An aggregate relationship */
features_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (features_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (features_order_by[] | null),
/** filter the rows returned */
where?: (features_bool_exp | null)}) => features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>})&(features_aggregateObservableChain & {get: <R extends features_aggregateRequest>(request: R, defaultValue?: FieldsSelection<features_aggregate, R>) => Observable<FieldsSelection<features_aggregate, R>>}),
    
/** fetch data from the table: "features" using primary key columns */
features_by_pk: ((args: {customer_id: Scalars['uuid'],name: feature_names_enum}) => featuresObservableChain & {get: <R extends featuresRequest>(request: R, defaultValue?: (FieldsSelection<features, R> | undefined)) => Observable<(FieldsSelection<features, R> | undefined)>}),
    
/** fetch data from the table: "partners" */
partners: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => {get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>})&({get: <R extends partnersRequest>(request: R, defaultValue?: FieldsSelection<partners, R>[]) => Observable<FieldsSelection<partners, R>[]>}),
    
/** fetch aggregated fields from the table: "partners" */
partners_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (partners_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (partners_order_by[] | null),
/** filter the rows returned */
where?: (partners_bool_exp | null)}) => partners_aggregateObservableChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Observable<FieldsSelection<partners_aggregate, R>>})&(partners_aggregateObservableChain & {get: <R extends partners_aggregateRequest>(request: R, defaultValue?: FieldsSelection<partners_aggregate, R>) => Observable<FieldsSelection<partners_aggregate, R>>}),
    
/** fetch data from the table: "partners" using primary key columns */
partners_by_pk: ((args: {id: Scalars['uuid']}) => partnersObservableChain & {get: <R extends partnersRequest>(request: R, defaultValue?: (FieldsSelection<partners, R> | undefined)) => Observable<(FieldsSelection<partners, R> | undefined)>}),
    
/** fetch data from the table: "roles" */
roles: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>})&({get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>[]) => Observable<FieldsSelection<roles, R>[]>}),
    
/** fetch aggregated fields from the table: "roles" */
roles_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (roles_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (roles_order_by[] | null),
/** filter the rows returned */
where?: (roles_bool_exp | null)}) => roles_aggregateObservableChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Observable<FieldsSelection<roles_aggregate, R>>})&(roles_aggregateObservableChain & {get: <R extends roles_aggregateRequest>(request: R, defaultValue?: FieldsSelection<roles_aggregate, R>) => Observable<FieldsSelection<roles_aggregate, R>>}),
    
/** fetch data from the table: "roles" using primary key columns */
roles_by_pk: ((args: {name: Scalars['String']}) => rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: (FieldsSelection<roles, R> | undefined)) => Observable<(FieldsSelection<roles, R> | undefined)>}),
    
/** fetch data from the table: "services" */
services: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => {get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>})&({get: <R extends servicesRequest>(request: R, defaultValue?: FieldsSelection<services, R>[]) => Observable<FieldsSelection<services, R>[]>}),
    
/** fetch aggregated fields from the table: "services" */
services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (services_order_by[] | null),
/** filter the rows returned */
where?: (services_bool_exp | null)}) => services_aggregateObservableChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Observable<FieldsSelection<services_aggregate, R>>})&(services_aggregateObservableChain & {get: <R extends services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<services_aggregate, R>) => Observable<FieldsSelection<services_aggregate, R>>}),
    
/** fetch data from the table: "services" using primary key columns */
services_by_pk: ((args: {name: Scalars['String']}) => servicesObservableChain & {get: <R extends servicesRequest>(request: R, defaultValue?: (FieldsSelection<services, R> | undefined)) => Observable<(FieldsSelection<services, R> | undefined)>}),
    
/** fetch data from the table: "srv_names" */
srv_names: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => {get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>})&({get: <R extends srv_namesRequest>(request: R, defaultValue?: FieldsSelection<srv_names, R>[]) => Observable<FieldsSelection<srv_names, R>[]>}),
    
/** fetch aggregated fields from the table: "srv_names" */
srv_names_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_names_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_names_order_by[] | null),
/** filter the rows returned */
where?: (srv_names_bool_exp | null)}) => srv_names_aggregateObservableChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Observable<FieldsSelection<srv_names_aggregate, R>>})&(srv_names_aggregateObservableChain & {get: <R extends srv_names_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_names_aggregate, R>) => Observable<FieldsSelection<srv_names_aggregate, R>>}),
    
/** fetch data from the table: "srv_names" using primary key columns */
srv_names_by_pk: ((args: {name: Scalars['String']}) => srv_namesObservableChain & {get: <R extends srv_namesRequest>(request: R, defaultValue?: (FieldsSelection<srv_names, R> | undefined)) => Observable<(FieldsSelection<srv_names, R> | undefined)>}),
    
/** An array relationship */
srv_urls: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => {get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>})&({get: <R extends srv_urlsRequest>(request: R, defaultValue?: FieldsSelection<srv_urls, R>[]) => Observable<FieldsSelection<srv_urls, R>[]>}),
    
/** An aggregate relationship */
srv_urls_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (srv_urls_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (srv_urls_order_by[] | null),
/** filter the rows returned */
where?: (srv_urls_bool_exp | null)}) => srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>})&(srv_urls_aggregateObservableChain & {get: <R extends srv_urls_aggregateRequest>(request: R, defaultValue?: FieldsSelection<srv_urls_aggregate, R>) => Observable<FieldsSelection<srv_urls_aggregate, R>>}),
    
/** fetch data from the table: "srv_urls" using primary key columns */
srv_urls_by_pk: ((args: {customer_id: Scalars['uuid'],name: srv_names_enum}) => srv_urlsObservableChain & {get: <R extends srv_urlsRequest>(request: R, defaultValue?: (FieldsSelection<srv_urls, R> | undefined)) => Observable<(FieldsSelection<srv_urls, R> | undefined)>}),
    
/** fetch data from the table: "status" */
status: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>})&({get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>[]) => Observable<FieldsSelection<status, R>[]>}),
    
/** fetch aggregated fields from the table: "status" */
status_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (status_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (status_order_by[] | null),
/** filter the rows returned */
where?: (status_bool_exp | null)}) => status_aggregateObservableChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Observable<FieldsSelection<status_aggregate, R>>})&(status_aggregateObservableChain & {get: <R extends status_aggregateRequest>(request: R, defaultValue?: FieldsSelection<status_aggregate, R>) => Observable<FieldsSelection<status_aggregate, R>>}),
    
/** fetch data from the table: "status" using primary key columns */
status_by_pk: ((args: {name: Scalars['String']}) => statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: (FieldsSelection<status, R> | undefined)) => Observable<(FieldsSelection<status, R> | undefined)>}),
    
/** fetch data from the table: "sub_services" */
sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => {get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>})&({get: <R extends sub_servicesRequest>(request: R, defaultValue?: FieldsSelection<sub_services, R>[]) => Observable<FieldsSelection<sub_services, R>[]>}),
    
/** An aggregate relationship */
sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (sub_services_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (sub_services_order_by[] | null),
/** filter the rows returned */
where?: (sub_services_bool_exp | null)}) => sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>})&(sub_services_aggregateObservableChain & {get: <R extends sub_services_aggregateRequest>(request: R, defaultValue?: FieldsSelection<sub_services_aggregate, R>) => Observable<FieldsSelection<sub_services_aggregate, R>>}),
    
/** fetch data from the table: "sub_services" using primary key columns */
sub_services_by_pk: ((args: {name: Scalars['String'],service: services_enum}) => sub_servicesObservableChain & {get: <R extends sub_servicesRequest>(request: R, defaultValue?: (FieldsSelection<sub_services, R> | undefined)) => Observable<(FieldsSelection<sub_services, R> | undefined)>}),
    
/** An array relationship */
user_basic_data: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>})&({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>}),
    
/** An aggregate relationship */
user_basic_data_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (user_basic_data_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (user_basic_data_order_by[] | null),
/** filter the rows returned */
where?: (user_basic_data_bool_exp | null)}) => user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>})&(user_basic_data_aggregateObservableChain & {get: <R extends user_basic_data_aggregateRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data_aggregate, R>) => Observable<FieldsSelection<user_basic_data_aggregate, R>>}),
    
/** fetch data from the table: "user_basic_data" using primary key columns */
user_basic_data_by_pk: ((args: {user_id: Scalars['uuid']}) => user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An array relationship */
users: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>})&({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>}),
    
/** An aggregate relationship */
users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_order_by[] | null),
/** filter the rows returned */
where?: (users_bool_exp | null)}) => users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>})&(users_aggregateObservableChain & {get: <R extends users_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_aggregate, R>) => Observable<FieldsSelection<users_aggregate, R>>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>}),
    
/** fetch data from the table: "users_auth_logs" using primary key columns */
users_auth_logs_by_pk: ((args: {id: Scalars['Int']}) => users_auth_logsObservableChain & {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs, R> | undefined)>}),
    
/** fetch data from the table: "users" using primary key columns */
users_by_pk: ((args: {id: Scalars['uuid']}) => usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: (FieldsSelection<users, R> | undefined)) => Observable<(FieldsSelection<users, R> | undefined)>})
}


/** columns and relationships of "user_basic_data" */
export interface user_basic_dataPromiseChain{
    email: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    password: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Promise<Scalars['bpchar']>}),
    status: ({get: (request?: boolean|number, defaultValue?: status_enum) => Promise<status_enum>}),
    
/** An object relationship */
statusByStatus: (statusPromiseChain & {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>) => Promise<FieldsSelection<status, R>>}),
    
/** An object relationship */
user: (usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Promise<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}


/** columns and relationships of "user_basic_data" */
export interface user_basic_dataObservableChain{
    email: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    name: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    password: ({get: (request?: boolean|number, defaultValue?: Scalars['bpchar']) => Observable<Scalars['bpchar']>}),
    status: ({get: (request?: boolean|number, defaultValue?: status_enum) => Observable<status_enum>}),
    
/** An object relationship */
statusByStatus: (statusObservableChain & {get: <R extends statusRequest>(request: R, defaultValue?: FieldsSelection<status, R>) => Observable<FieldsSelection<status, R>>}),
    
/** An object relationship */
user: (usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Observable<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}


/** aggregated selection of "user_basic_data" */
export interface user_basic_data_aggregatePromiseChain{
    aggregate: (user_basic_data_aggregate_fieldsPromiseChain & {get: <R extends user_basic_data_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>})
}


/** aggregated selection of "user_basic_data" */
export interface user_basic_data_aggregateObservableChain{
    aggregate: (user_basic_data_aggregate_fieldsObservableChain & {get: <R extends user_basic_data_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>})
}


/** aggregate fields of "user_basic_data" */
export interface user_basic_data_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (user_basic_data_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (user_basic_data_max_fieldsPromiseChain & {get: <R extends user_basic_data_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_max_fields, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_max_fields, R> | undefined)>}),
    min: (user_basic_data_min_fieldsPromiseChain & {get: <R extends user_basic_data_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_min_fields, R> | undefined)) => Promise<(FieldsSelection<user_basic_data_min_fields, R> | undefined)>})
}


/** aggregate fields of "user_basic_data" */
export interface user_basic_data_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (user_basic_data_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (user_basic_data_max_fieldsObservableChain & {get: <R extends user_basic_data_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_max_fields, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_max_fields, R> | undefined)>}),
    min: (user_basic_data_min_fieldsObservableChain & {get: <R extends user_basic_data_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data_min_fields, R> | undefined)) => Observable<(FieldsSelection<user_basic_data_min_fields, R> | undefined)>})
}


/** aggregate max on columns */
export interface user_basic_data_max_fieldsPromiseChain{
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface user_basic_data_max_fieldsObservableChain{
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface user_basic_data_min_fieldsPromiseChain{
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface user_basic_data_min_fieldsObservableChain{
    email: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    name: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    password: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "user_basic_data" */
export interface user_basic_data_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Promise<FieldsSelection<user_basic_data, R>[]>})
}


/** response of any mutation on the table "user_basic_data" */
export interface user_basic_data_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends user_basic_dataRequest>(request: R, defaultValue?: FieldsSelection<user_basic_data, R>[]) => Observable<FieldsSelection<user_basic_data, R>[]>})
}


/** columns and relationships of "users" */
export interface usersPromiseChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Promise<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregatePromiseChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Promise<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Promise<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregatePromiseChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Promise<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** An array relationship */
customer_users: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Promise<FieldsSelection<customer_user, R>[]>}),
    
/** An aggregate relationship */
customer_users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregatePromiseChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Promise<FieldsSelection<customer_user_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    role: ({get: (request?: boolean|number, defaultValue?: roles_enum) => Promise<roles_enum>}),
    
/** An object relationship */
roleByRole: (rolesPromiseChain & {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>) => Promise<FieldsSelection<roles, R>>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    
/** An object relationship */
user_basic_data: (user_basic_dataPromiseChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Promise<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An object relationship */
user_refresh_tokens: (blacklist_refresh_tokenPromiseChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Promise<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregatePromiseChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Promise<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** columns and relationships of "users" */
export interface usersObservableChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    
/** An array relationship */
customer_user_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => {get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>})&({get: <R extends customer_user_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service, R>[]) => Observable<FieldsSelection<customer_user_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_service_bool_exp | null)}) => customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>})&(customer_user_service_aggregateObservableChain & {get: <R extends customer_user_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_service_aggregate, R>) => Observable<FieldsSelection<customer_user_service_aggregate, R>>}),
    
/** An array relationship */
customer_user_sub_services: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => {get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>})&({get: <R extends customer_user_sub_serviceRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service, R>[]) => Observable<FieldsSelection<customer_user_sub_service, R>[]>}),
    
/** An aggregate relationship */
customer_user_sub_services_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_sub_service_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_sub_service_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_sub_service_bool_exp | null)}) => customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>})&(customer_user_sub_service_aggregateObservableChain & {get: <R extends customer_user_sub_service_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_sub_service_aggregate, R>) => Observable<FieldsSelection<customer_user_sub_service_aggregate, R>>}),
    
/** An array relationship */
customer_users: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => {get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>})&({get: <R extends customer_userRequest>(request: R, defaultValue?: FieldsSelection<customer_user, R>[]) => Observable<FieldsSelection<customer_user, R>[]>}),
    
/** An aggregate relationship */
customer_users_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (customer_user_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (customer_user_order_by[] | null),
/** filter the rows returned */
where?: (customer_user_bool_exp | null)}) => customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>})&(customer_user_aggregateObservableChain & {get: <R extends customer_user_aggregateRequest>(request: R, defaultValue?: FieldsSelection<customer_user_aggregate, R>) => Observable<FieldsSelection<customer_user_aggregate, R>>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    role: ({get: (request?: boolean|number, defaultValue?: roles_enum) => Observable<roles_enum>}),
    
/** An object relationship */
roleByRole: (rolesObservableChain & {get: <R extends rolesRequest>(request: R, defaultValue?: FieldsSelection<roles, R>) => Observable<FieldsSelection<roles, R>>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    
/** An object relationship */
user_basic_data: (user_basic_dataObservableChain & {get: <R extends user_basic_dataRequest>(request: R, defaultValue?: (FieldsSelection<user_basic_data, R> | undefined)) => Observable<(FieldsSelection<user_basic_data, R> | undefined)>}),
    
/** An object relationship */
user_refresh_tokens: (blacklist_refresh_tokenObservableChain & {get: <R extends blacklist_refresh_tokenRequest>(request: R, defaultValue?: (FieldsSelection<blacklist_refresh_token, R> | undefined)) => Observable<(FieldsSelection<blacklist_refresh_token, R> | undefined)>}),
    
/** An array relationship */
users_auth_logs: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => {get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})&({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>}),
    
/** An aggregate relationship */
users_auth_logs_aggregate: ((args?: {
/** distinct select on columns */
distinct_on?: (users_auth_logs_select_column[] | null),
/** limit the number of rows returned */
limit?: (Scalars['Int'] | null),
/** skip the first n rows. Use only with order_by */
offset?: (Scalars['Int'] | null),
/** sort the rows by one or more columns */
order_by?: (users_auth_logs_order_by[] | null),
/** filter the rows returned */
where?: (users_auth_logs_bool_exp | null)}) => users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})&(users_auth_logs_aggregateObservableChain & {get: <R extends users_auth_logs_aggregateRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs_aggregate, R>) => Observable<FieldsSelection<users_auth_logs_aggregate, R>>})
}


/** aggregated selection of "users" */
export interface users_aggregatePromiseChain{
    aggregate: (users_aggregate_fieldsPromiseChain & {get: <R extends users_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<users_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>})
}


/** aggregated selection of "users" */
export interface users_aggregateObservableChain{
    aggregate: (users_aggregate_fieldsObservableChain & {get: <R extends users_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<users_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>})
}


/** aggregate fields of "users" */
export interface users_aggregate_fieldsPromiseChain{
    count: ((args?: {columns?: (users_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (users_max_fieldsPromiseChain & {get: <R extends users_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_max_fields, R> | undefined)) => Promise<(FieldsSelection<users_max_fields, R> | undefined)>}),
    min: (users_min_fieldsPromiseChain & {get: <R extends users_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_min_fields, R> | undefined)) => Promise<(FieldsSelection<users_min_fields, R> | undefined)>})
}


/** aggregate fields of "users" */
export interface users_aggregate_fieldsObservableChain{
    count: ((args?: {columns?: (users_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (users_max_fieldsObservableChain & {get: <R extends users_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_max_fields, R> | undefined)) => Observable<(FieldsSelection<users_max_fields, R> | undefined)>}),
    min: (users_min_fieldsObservableChain & {get: <R extends users_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_min_fields, R> | undefined)) => Observable<(FieldsSelection<users_min_fields, R> | undefined)>})
}


/** columns and relationships of "users_auth_logs" */
export interface users_auth_logsPromiseChain{
    
/** An object relationship */
authMethodByAuthMethod: (auth_methodsPromiseChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>) => Promise<FieldsSelection<auth_methods, R>>}),
    auth_method: ({get: (request?: boolean|number, defaultValue?: auth_methods_enum) => Promise<auth_methods_enum>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: Scalars['timestamptz']) => Promise<Scalars['timestamptz']>}),
    
/** An object relationship */
customer: (customersPromiseChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Promise<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** An object relationship */
user: (usersPromiseChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Promise<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Promise<Scalars['uuid']>})
}


/** columns and relationships of "users_auth_logs" */
export interface users_auth_logsObservableChain{
    
/** An object relationship */
authMethodByAuthMethod: (auth_methodsObservableChain & {get: <R extends auth_methodsRequest>(request: R, defaultValue?: FieldsSelection<auth_methods, R>) => Observable<FieldsSelection<auth_methods, R>>}),
    auth_method: ({get: (request?: boolean|number, defaultValue?: auth_methods_enum) => Observable<auth_methods_enum>}),
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: Scalars['timestamptz']) => Observable<Scalars['timestamptz']>}),
    
/** An object relationship */
customer: (customersObservableChain & {get: <R extends customersRequest>(request: R, defaultValue?: FieldsSelection<customers, R>) => Observable<FieldsSelection<customers, R>>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>}),
    id: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** An object relationship */
user: (usersObservableChain & {get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>) => Observable<FieldsSelection<users, R>>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: Scalars['uuid']) => Observable<Scalars['uuid']>})
}


/** aggregated selection of "users_auth_logs" */
export interface users_auth_logs_aggregatePromiseChain{
    aggregate: (users_auth_logs_aggregate_fieldsPromiseChain & {get: <R extends users_auth_logs_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_aggregate_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})
}


/** aggregated selection of "users_auth_logs" */
export interface users_auth_logs_aggregateObservableChain{
    aggregate: (users_auth_logs_aggregate_fieldsObservableChain & {get: <R extends users_auth_logs_aggregate_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_aggregate_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_aggregate_fields, R> | undefined)>}),
    nodes: ({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})
}


/** aggregate fields of "users_auth_logs" */
export interface users_auth_logs_aggregate_fieldsPromiseChain{
    avg: (users_auth_logs_avg_fieldsPromiseChain & {get: <R extends users_auth_logs_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_avg_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (users_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    max: (users_auth_logs_max_fieldsPromiseChain & {get: <R extends users_auth_logs_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_max_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_max_fields, R> | undefined)>}),
    min: (users_auth_logs_min_fieldsPromiseChain & {get: <R extends users_auth_logs_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_min_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_min_fields, R> | undefined)>}),
    stddev: (users_auth_logs_stddev_fieldsPromiseChain & {get: <R extends users_auth_logs_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_stddev_fields, R> | undefined)>}),
    stddev_pop: (users_auth_logs_stddev_pop_fieldsPromiseChain & {get: <R extends users_auth_logs_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_pop_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (users_auth_logs_stddev_samp_fieldsPromiseChain & {get: <R extends users_auth_logs_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_samp_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_stddev_samp_fields, R> | undefined)>}),
    sum: (users_auth_logs_sum_fieldsPromiseChain & {get: <R extends users_auth_logs_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_sum_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_sum_fields, R> | undefined)>}),
    var_pop: (users_auth_logs_var_pop_fieldsPromiseChain & {get: <R extends users_auth_logs_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_var_pop_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_var_pop_fields, R> | undefined)>}),
    var_samp: (users_auth_logs_var_samp_fieldsPromiseChain & {get: <R extends users_auth_logs_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_var_samp_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_var_samp_fields, R> | undefined)>}),
    variance: (users_auth_logs_variance_fieldsPromiseChain & {get: <R extends users_auth_logs_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_variance_fields, R> | undefined)) => Promise<(FieldsSelection<users_auth_logs_variance_fields, R> | undefined)>})
}


/** aggregate fields of "users_auth_logs" */
export interface users_auth_logs_aggregate_fieldsObservableChain{
    avg: (users_auth_logs_avg_fieldsObservableChain & {get: <R extends users_auth_logs_avg_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_avg_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_avg_fields, R> | undefined)>}),
    count: ((args?: {columns?: (users_auth_logs_select_column[] | null),distinct?: (Scalars['Boolean'] | null)}) => {get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>})&({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    max: (users_auth_logs_max_fieldsObservableChain & {get: <R extends users_auth_logs_max_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_max_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_max_fields, R> | undefined)>}),
    min: (users_auth_logs_min_fieldsObservableChain & {get: <R extends users_auth_logs_min_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_min_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_min_fields, R> | undefined)>}),
    stddev: (users_auth_logs_stddev_fieldsObservableChain & {get: <R extends users_auth_logs_stddev_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_stddev_fields, R> | undefined)>}),
    stddev_pop: (users_auth_logs_stddev_pop_fieldsObservableChain & {get: <R extends users_auth_logs_stddev_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_pop_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_stddev_pop_fields, R> | undefined)>}),
    stddev_samp: (users_auth_logs_stddev_samp_fieldsObservableChain & {get: <R extends users_auth_logs_stddev_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_stddev_samp_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_stddev_samp_fields, R> | undefined)>}),
    sum: (users_auth_logs_sum_fieldsObservableChain & {get: <R extends users_auth_logs_sum_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_sum_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_sum_fields, R> | undefined)>}),
    var_pop: (users_auth_logs_var_pop_fieldsObservableChain & {get: <R extends users_auth_logs_var_pop_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_var_pop_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_var_pop_fields, R> | undefined)>}),
    var_samp: (users_auth_logs_var_samp_fieldsObservableChain & {get: <R extends users_auth_logs_var_samp_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_var_samp_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_var_samp_fields, R> | undefined)>}),
    variance: (users_auth_logs_variance_fieldsObservableChain & {get: <R extends users_auth_logs_variance_fieldsRequest>(request: R, defaultValue?: (FieldsSelection<users_auth_logs_variance_fields, R> | undefined)) => Observable<(FieldsSelection<users_auth_logs_variance_fields, R> | undefined)>})
}


/** aggregate avg on columns */
export interface users_auth_logs_avg_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate avg on columns */
export interface users_auth_logs_avg_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate max on columns */
export interface users_auth_logs_max_fieldsPromiseChain{
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate max on columns */
export interface users_auth_logs_max_fieldsObservableChain{
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface users_auth_logs_min_fieldsPromiseChain{
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>})
}


/** aggregate min on columns */
export interface users_auth_logs_min_fieldsObservableChain{
    authenticated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    customer_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>}),
    user_id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>})
}


/** response of any mutation on the table "users_auth_logs" */
export interface users_auth_logs_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Promise<FieldsSelection<users_auth_logs, R>[]>})
}


/** response of any mutation on the table "users_auth_logs" */
export interface users_auth_logs_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends users_auth_logsRequest>(request: R, defaultValue?: FieldsSelection<users_auth_logs, R>[]) => Observable<FieldsSelection<users_auth_logs, R>[]>})
}


/** aggregate stddev on columns */
export interface users_auth_logs_stddev_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev on columns */
export interface users_auth_logs_stddev_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface users_auth_logs_stddev_pop_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_pop on columns */
export interface users_auth_logs_stddev_pop_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface users_auth_logs_stddev_samp_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate stddev_samp on columns */
export interface users_auth_logs_stddev_samp_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate sum on columns */
export interface users_auth_logs_sum_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Promise<(Scalars['Int'] | undefined)>})
}


/** aggregate sum on columns */
export interface users_auth_logs_sum_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Int'] | undefined)) => Observable<(Scalars['Int'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface users_auth_logs_var_pop_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_pop on columns */
export interface users_auth_logs_var_pop_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface users_auth_logs_var_samp_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate var_samp on columns */
export interface users_auth_logs_var_samp_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface users_auth_logs_variance_fieldsPromiseChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Promise<(Scalars['Float'] | undefined)>})
}


/** aggregate variance on columns */
export interface users_auth_logs_variance_fieldsObservableChain{
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['Float'] | undefined)) => Observable<(Scalars['Float'] | undefined)>})
}


/** aggregate max on columns */
export interface users_max_fieldsPromiseChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate max on columns */
export interface users_max_fieldsObservableChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface users_min_fieldsPromiseChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Promise<(Scalars['uuid'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Promise<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Promise<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Promise<(Scalars['timestamptz'] | undefined)>})
}


/** aggregate min on columns */
export interface users_min_fieldsObservableChain{
    created_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>}),
    id: ({get: (request?: boolean|number, defaultValue?: (Scalars['uuid'] | undefined)) => Observable<(Scalars['uuid'] | undefined)>}),
    phone: ({get: (request?: boolean|number, defaultValue?: (Scalars['String'] | undefined)) => Observable<(Scalars['String'] | undefined)>}),
    token: ({get: (request?: boolean|number, defaultValue?: (Scalars['bpchar'] | undefined)) => Observable<(Scalars['bpchar'] | undefined)>}),
    updated_at: ({get: (request?: boolean|number, defaultValue?: (Scalars['timestamptz'] | undefined)) => Observable<(Scalars['timestamptz'] | undefined)>})
}


/** response of any mutation on the table "users" */
export interface users_mutation_responsePromiseChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Promise<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Promise<FieldsSelection<users, R>[]>})
}


/** response of any mutation on the table "users" */
export interface users_mutation_responseObservableChain{
    
/** number of rows affected by the mutation */
affected_rows: ({get: (request?: boolean|number, defaultValue?: Scalars['Int']) => Observable<Scalars['Int']>}),
    
/** data from the rows affected by the mutation */
returning: ({get: <R extends usersRequest>(request: R, defaultValue?: FieldsSelection<users, R>[]) => Observable<FieldsSelection<users, R>[]>})
}